{
	"id": "a3630dbc8acf5c436e582d8b4ad5895c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/openzeppelin/FarmingC2N.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n// Farm distributes the ERC20 rewards based on staked LP to each user.\r\n//\r\n// Cloned from https://github.com/SashimiProject/sashimiswap/blob/master/contracts/MasterChef.sol\r\n// Modified by LTO Network to work for non-mintable ERC20.\r\n\r\ncontract FarmingC2N is Ownable {\r\n\r\n    using SafeERC20 for IERC20;\r\n\r\n    // 运行态用户质押信息\r\n    struct UserInfo {\r\n        uint256 amount;     // 用户提供的LP的数量\r\n        uint256 rewardDebt; // 用户质押总奖励数\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of ERC20s\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accERC20PerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accERC20PerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n\r\n\r\n    // 每一个LP池的信息\r\n    struct PoolInfo {\r\n        IERC20 lpToken;             // LPToken池的的地址\r\n        uint256 allocPoint;         // 当前LP池子的分配分数，例如有三个池子abc对应的分数为a:b:c=10:20:10 那么在进行质押计算时,a=25%,b=50%,c=25%\r\n        uint256 lastRewardTimestamp;    // 上次奖励发生时期\r\n        uint256 accERC20PerShare;   // 累积单位token质押奖励数， *1e36（为了避免小数计算导致精度降低）.\r\n        uint256 totalDeposits; // 总质押量\r\n    }\r\n\r\n\r\n\r\n    // Farm奖励代币地址\r\n    IERC20 public erc20;\r\n    // 奖励代币已经发出去的数量\r\n    uint256 public paidOut;\r\n    // 奖励代币每秒奖励数\r\n    uint256 public rewardPerSecond;\r\n    // 总奖励数量（最多可奖励的数量）\r\n    uint256 public totalRewards;\r\n    // LP池信息\r\n    PoolInfo[] public poolInfo;\r\n    // 每个LP池用户的质押以及奖励信息 [PoolId,[用户地址，用户信息]]\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // 总分配分数\r\n    uint256 public totalAllocPoint;\r\n\r\n    // Farming 开始时间\r\n    uint256 public startTimestamp;\r\n    // Farming 结束时间\r\n    uint256 public endTimestamp;\r\n\r\n    //业务事件\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    //\r\n    constructor(IERC20 _erc20, uint256 _rewardPerSecond, uint256 _startTimestamp) Ownable(msg.sender)   {\r\n        erc20 = _erc20;\r\n        rewardPerSecond = _rewardPerSecond;\r\n        startTimestamp = _startTimestamp;\r\n        endTimestamp = _startTimestamp;\r\n    }\r\n\r\n    // Number of LP pools\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Fund the farm, increase the end block\r\n    function fund(uint256 _amount) public {\r\n        require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\");\r\n        erc20.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        endTimestamp += _amount/rewardPerSecond;\r\n        totalRewards = totalRewards+_amount;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp;\r\n        totalAllocPoint = totalAllocPoint+_allocPoint;\r\n        poolInfo.push(PoolInfo({\r\n        lpToken : _lpToken,\r\n        allocPoint : _allocPoint,\r\n        lastRewardTimestamp : lastRewardTimestamp,\r\n        accERC20PerShare : 0,\r\n        totalDeposits : 0\r\n        }));\r\n    }\r\n\r\n    // Update the given pool's ERC20 allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint-poolInfo[_pid].allocPoint+_allocPoint;\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // View function to see deposited LP for a user.\r\n    function deposited(uint256 _pid, address _user) external view returns (uint256) {\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        return user.amount;\r\n    }\r\n\r\n    // View function to see pending ERC20s for a user.\r\n    function pending(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accERC20PerShare = pool.accERC20PerShare;\r\n\r\n        uint256 lpSupply = pool.totalDeposits;\r\n\r\n        if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {\r\n            uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\r\n            uint256 timestampToCompare = pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp;\r\n            uint256 nrOfSeconds = lastTimestamp-timestampToCompare;\r\n            uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint;\r\n            accERC20PerShare = accERC20PerShare+(erc20Reward*1e36/lpSupply);\r\n        }\r\n        return user.amount*accERC20PerShare/1e36-user.rewardDebt;\r\n    }\r\n\r\n    // View function for total reward the farm has yet to pay out.\r\n    function totalPending() external view returns (uint256) {\r\n        if (block.timestamp <= startTimestamp) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\r\n        return rewardPerSecond*(lastTimestamp - startTimestamp)-paidOut;\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\r\n\r\n        if (lastTimestamp <= pool.lastRewardTimestamp) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.totalDeposits;\r\n\r\n        if (lpSupply == 0) {\r\n            pool.lastRewardTimestamp = lastTimestamp;\r\n            return;\r\n        }\r\n\r\n        uint256 nrOfSeconds = lastTimestamp-pool.lastRewardTimestamp;\r\n        uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint-totalAllocPoint;\r\n\r\n        pool.accERC20PerShare = pool.accERC20PerShare+erc20Reward*1e36/lpSupply;\r\n        pool.lastRewardTimestamp = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens to Farm for ERC20 allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n\r\n        updatePool(_pid);\r\n\r\n        if (user.amount > 0) {\r\n            uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\r\n            erc20Transfer(msg.sender, pendingAmount);\r\n        }\r\n\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        pool.totalDeposits = pool.totalDeposits+_amount;\r\n\r\n        user.amount = user.amount+_amount;\r\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from Farm.\r\n    // 包含两个功能，收取奖励，撤回质押\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\");\r\n        updatePool(_pid);\r\n\r\n        // 计算奖励\r\n        uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\r\n\r\n        erc20Transfer(msg.sender, pendingAmount);\r\n        user.amount = user.amount-_amount;\r\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\r\n        // 撤回流动性\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        pool.totalDeposits = pool.totalDeposits-_amount;\r\n\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        pool.totalDeposits = pool.totalDeposits-user.amount;\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n\r\n    // Transfer ERC20 and update the required ERC20 to payout all rewards\r\n    function erc20Transfer(address _to, uint256 _amount) internal {\r\n        erc20.transfer(_to, _amount);\r\n        paidOut += _amount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/openzeppelin/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/openzeppelin/FarmingC2N.sol": {
				"FarmingC2N": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_erc20",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerSecond",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "deposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paidOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accERC20PerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDeposits",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/openzeppelin/FarmingC2N.sol\":478:9844  contract FarmingC2N is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":2907:3169  constructor(IERC20 _erc20, uint256 _rewardPerSecond, uint256 _startTimestamp) Ownable(msg.sender)   {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":2993:3003  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3026:3032  _erc20 */\n  dup3\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3018:3023  erc20 */\n  0x01\n  0x00\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3018:3032  erc20 = _erc20 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3061:3077  _rewardPerSecond */\n  dup2\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3043:3058  rewardPerSecond */\n  0x03\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3043:3077  rewardPerSecond = _rewardPerSecond */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3105:3120  _startTimestamp */\n  dup1\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3088:3102  startTimestamp */\n  0x08\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3088:3120  startTimestamp = _startTimestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3146:3161  _startTimestamp */\n  dup1\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3131:3143  endTimestamp */\n  0x09\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":3131:3161  endTimestamp = _startTimestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":2907:3169  constructor(IERC20 _erc20, uint256 _rewardPerSecond, uint256 _startTimestamp) Ownable(msg.sender)   {... */\n  pop\n  pop\n  pop\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":478:9844  contract FarmingC2N is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_35\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_37\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_38:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_40\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1094   */\ntag_23:\n    /* \"#utility.yul\":1054:1061   */\n  0x00\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1072:1088   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1100:1222   */\ntag_24:\n    /* \"#utility.yul\":1173:1197   */\n  tag_43\n    /* \"#utility.yul\":1191:1196   */\n  dup2\n    /* \"#utility.yul\":1173:1197   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1166:1171   */\n  dup2\n    /* \"#utility.yul\":1163:1198   */\n  eq\n    /* \"#utility.yul\":1153:1216   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1153:1216   */\ntag_44:\n    /* \"#utility.yul\":1100:1222   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1228:1371   */\ntag_25:\n    /* \"#utility.yul\":1285:1290   */\n  0x00\n    /* \"#utility.yul\":1316:1322   */\n  dup2\n    /* \"#utility.yul\":1310:1323   */\n  mload\n    /* \"#utility.yul\":1301:1323   */\n  swap1\n  pop\n    /* \"#utility.yul\":1332:1365   */\n  tag_46\n    /* \"#utility.yul\":1359:1364   */\n  dup2\n    /* \"#utility.yul\":1332:1365   */\n  tag_24\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1228:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:2068   */\ntag_3:\n    /* \"#utility.yul\":1479:1485   */\n  0x00\n    /* \"#utility.yul\":1487:1493   */\n  dup1\n    /* \"#utility.yul\":1495:1501   */\n  0x00\n    /* \"#utility.yul\":1544:1546   */\n  0x60\n    /* \"#utility.yul\":1532:1541   */\n  dup5\n    /* \"#utility.yul\":1523:1530   */\n  dup7\n    /* \"#utility.yul\":1519:1542   */\n  sub\n    /* \"#utility.yul\":1515:1547   */\n  slt\n    /* \"#utility.yul\":1512:1631   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1550:1629   */\n  tag_49\n  tag_16\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1512:1631   */\ntag_48:\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1695:1773   */\n  tag_50\n    /* \"#utility.yul\":1765:1772   */\n  dup7\n    /* \"#utility.yul\":1756:1762   */\n  dup3\n    /* \"#utility.yul\":1745:1754   */\n  dup8\n    /* \"#utility.yul\":1741:1763   */\n  add\n    /* \"#utility.yul\":1695:1773   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1685:1773   */\n  swap4\n  pop\n    /* \"#utility.yul\":1641:1783   */\n  pop\n    /* \"#utility.yul\":1822:1824   */\n  0x20\n    /* \"#utility.yul\":1848:1912   */\n  tag_51\n    /* \"#utility.yul\":1904:1911   */\n  dup7\n    /* \"#utility.yul\":1895:1901   */\n  dup3\n    /* \"#utility.yul\":1884:1893   */\n  dup8\n    /* \"#utility.yul\":1880:1902   */\n  add\n    /* \"#utility.yul\":1848:1912   */\n  tag_25\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1838:1912   */\n  swap3\n  pop\n    /* \"#utility.yul\":1793:1922   */\n  pop\n    /* \"#utility.yul\":1961:1963   */\n  0x40\n    /* \"#utility.yul\":1987:2051   */\n  tag_52\n    /* \"#utility.yul\":2043:2050   */\n  dup7\n    /* \"#utility.yul\":2034:2040   */\n  dup3\n    /* \"#utility.yul\":2023:2032   */\n  dup8\n    /* \"#utility.yul\":2019:2041   */\n  add\n    /* \"#utility.yul\":1987:2051   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1977:2051   */\n  swap2\n  pop\n    /* \"#utility.yul\":1932:2061   */\n  pop\n    /* \"#utility.yul\":1377:2068   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2074:2192   */\ntag_26:\n    /* \"#utility.yul\":2161:2185   */\n  tag_54\n    /* \"#utility.yul\":2179:2184   */\n  dup2\n    /* \"#utility.yul\":2161:2185   */\n  tag_19\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2156:2159   */\n  dup3\n    /* \"#utility.yul\":2149:2186   */\n  mstore\n    /* \"#utility.yul\":2074:2192   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2420   */\ntag_9:\n    /* \"#utility.yul\":2291:2295   */\n  0x00\n    /* \"#utility.yul\":2329:2331   */\n  0x20\n    /* \"#utility.yul\":2318:2327   */\n  dup3\n    /* \"#utility.yul\":2314:2332   */\n  add\n    /* \"#utility.yul\":2306:2332   */\n  swap1\n  pop\n    /* \"#utility.yul\":2342:2413   */\n  tag_56\n    /* \"#utility.yul\":2410:2411   */\n  0x00\n    /* \"#utility.yul\":2399:2408   */\n  dup4\n    /* \"#utility.yul\":2395:2412   */\n  add\n    /* \"#utility.yul\":2386:2392   */\n  dup5\n    /* \"#utility.yul\":2342:2413   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2198:2420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/openzeppelin/FarmingC2N.sol\":478:9844  contract FarmingC2N is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":478:9844  contract FarmingC2N is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa85adeab\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa85adeab\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xca1d209d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe4c75c27\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe6fd48bc\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x785e9e86\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f10369a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa2383106\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x441a3e70\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c76ca2d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f90916a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3204:3299  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2186:2213  uint256 public totalRewards */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2240:2266  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2460:2490  uint256 public totalAllocPoint */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3826:4377  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6069:6391  function totalPending() external view returns (uint256) {... */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8357:9131  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6730:7487  function updatePool(uint256 _pid) public {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9202:9620  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2030:2052  uint256 public paidOut */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6474:6654  function massUpdatePools() public {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4474:4768  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":1959:1978  IERC20 public erc20 */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2095:2125  uint256 public rewardPerSecond */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2365:2429  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4830:5003  function deposited(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2593:2620  uint256 public endTimestamp */\n    tag_21:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3353:3661  function fund(uint256 _amount) public {... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7551:8254  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5067:5993  function pending(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_24:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2528:2557  uint256 public startTimestamp */\n    tag_25:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3204:3299  function poolLength() external view returns (uint256) {... */\n    tag_31:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3249:3256  uint256 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3276:3284  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3276:3291  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3269:3291  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3204:3299  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2186:2213  uint256 public totalRewards */\n    tag_35:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2240:2266  PoolInfo[] public poolInfo */\n    tag_40:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2460:2490  uint256 public totalAllocPoint */\n    tag_44:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3826:4377  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3927:3938  _withUpdate */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3923:3984  if (_withUpdate) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3955:3972  massUpdatePools() */\n      tag_123\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3955:3970  massUpdatePools */\n      tag_67\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3955:3972  massUpdatePools() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3923:3984  if (_withUpdate) {... */\n    tag_122:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3994:4021  uint256 lastRewardTimestamp */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4042:4056  startTimestamp */\n      sload(0x08)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4024:4039  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4024:4056  block.timestamp > startTimestamp */\n      gt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4024:4091  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      tag_124\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4077:4091  startTimestamp */\n      sload(0x08)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4024:4091  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      jump(tag_125)\n    tag_124:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4059:4074  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4024:4091  block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n    tag_125:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3994:4091  uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4136:4147  _allocPoint */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4120:4135  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4120:4147  totalAllocPoint+_allocPoint */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4102:4117  totalAllocPoint */\n      0x07\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4102:4147  totalAllocPoint = totalAllocPoint+_allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4158:4166  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4202:4210  _lpToken */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4234:4245  _allocPoint */\n      dup7\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4278:4297  lastRewardTimestamp */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4327:4328  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4355:4356  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4172:4368  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4158:4369  poolInfo.push(PoolInfo({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3912:4377  {... */\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3826:4377  function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6069:6391  function totalPending() external view returns (uint256) {... */\n    tag_51:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6116:6123  uint256 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6159:6173  startTimestamp */\n      sload(0x08)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6140:6155  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6140:6173  block.timestamp <= startTimestamp */\n      gt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6136:6210  if (block.timestamp <= startTimestamp) {... */\n      tag_130\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6197:6198  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6190:6198  return 0 */\n      swap1\n      pop\n      jump(tag_129)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6136:6210  if (block.timestamp <= startTimestamp) {... */\n    tag_130:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6222:6243  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6264:6276  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6246:6261  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6246:6276  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6246:6309  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_131\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6297:6309  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6246:6309  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_132)\n    tag_131:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6279:6294  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6246:6309  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_132:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6222:6309  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6376:6383  paidOut */\n      sload(0x02)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6360:6374  startTimestamp */\n      sload(0x08)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6344:6357  lastTimestamp */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6344:6374  lastTimestamp - startTimestamp */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6327:6342  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6327:6375  rewardPerSecond*(lastTimestamp - startTimestamp) */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6327:6383  rewardPerSecond*(lastTimestamp - startTimestamp)-paidOut */\n      tag_137\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_137:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6320:6383  return rewardPerSecond*(lastTimestamp - startTimestamp)-paidOut */\n      swap2\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6069:6391  function totalPending() external view returns (uint256) {... */\n    tag_129:\n      swap1\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8357:9131  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_56:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8424:8445  PoolInfo storage pool */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8448:8456  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8457:8461  _pid */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8448:8462  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n    tag_139:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8424:8462  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8473:8494  UserInfo storage user */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8497:8505  userInfo */\n      0x06\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8497:8511  userInfo[_pid] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8506:8510  _pid */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8497:8511  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8497:8523  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8512:8522  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8497:8523  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8473:8523  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8557:8564  _amount */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8542:8546  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8542:8553  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8542:8564  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8534:8611  require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8622:8638  updatePool(_pid) */\n      tag_146\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8633:8637  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8622:8632  updatePool */\n      tag_59\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8622:8638  updatePool(_pid) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8676:8697  uint256 pendingAmount */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8739:8743  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8739:8754  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8734:8738  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8712:8716  pool */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8712:8733  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8700:8704  user */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8700:8711  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8700:8733  user.amount*pool.accERC20PerShare */\n      tag_147\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_147:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8700:8738  user.amount*pool.accERC20PerShare/1e36 */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8700:8754  user.amount*pool.accERC20PerShare/1e36-user.rewardDebt */\n      tag_150\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_150:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8676:8754  uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8767:8807  erc20Transfer(msg.sender, pendingAmount) */\n      tag_151\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8781:8791  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8793:8806  pendingAmount */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8767:8780  erc20Transfer */\n      tag_152\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8767:8807  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8844:8851  _amount */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8832:8836  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8832:8843  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8832:8851  user.amount-_amount */\n      tag_153\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_153:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8818:8822  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8818:8829  user.amount */\n      0x00\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8818:8851  user.amount = user.amount-_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8914:8918  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8892:8896  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8892:8913  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8880:8884  user */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8880:8891  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8880:8913  user.amount*pool.accERC20PerShare */\n      tag_154\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_154:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8880:8918  user.amount*pool.accERC20PerShare/1e36 */\n      tag_155\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_155:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8862:8866  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8862:8877  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8862:8918  user.rewardDebt = user.amount*pool.accERC20PerShare/1e36 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8957:9012  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_156\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8991:9001  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9004:9011  _amount */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8957:8961  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8957:8969  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8957:8982  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8957:9012  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9063:9070  _amount */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9044:9048  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9044:9062  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9044:9070  pool.totalDeposits-_amount */\n      tag_158\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_158:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9023:9027  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9023:9041  pool.totalDeposits */\n      0x04\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9023:9070  pool.totalDeposits = pool.totalDeposits-_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9109:9113  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9097:9107  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9088:9123  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9115:9122  _amount */\n      dup7\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9088:9123  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8413:9131  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8357:9131  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6730:7487  function updatePool(uint256 _pid) public {... */\n    tag_59:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6782:6803  PoolInfo storage pool */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6806:6814  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6815:6819  _pid */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6806:6820  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_162\n      tag_141\n      jump\t// in\n    tag_162:\n    tag_161:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6782:6820  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6831:6852  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6873:6885  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6855:6870  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6855:6885  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6855:6918  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_164\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6906:6918  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6855:6918  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_165)\n    tag_164:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6888:6903  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6855:6918  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_165:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6831:6918  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6952:6956  pool */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6952:6976  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6935:6948  lastTimestamp */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6935:6976  lastTimestamp <= pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6931:7011  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n      tag_166\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6993:7000  return; */\n      pop\n      pop\n      jump(tag_160)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6931:7011  if (lastTimestamp <= pool.lastRewardTimestamp) {... */\n    tag_166:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7021:7037  uint256 lpSupply */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7040:7044  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7040:7058  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7021:7058  uint256 lpSupply = pool.totalDeposits */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7087:7088  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7075:7083  lpSupply */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7075:7088  lpSupply == 0 */\n      sub\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7071:7178  if (lpSupply == 0) {... */\n      tag_167\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7132:7145  lastTimestamp */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7105:7109  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7105:7129  pool.lastRewardTimestamp */\n      0x02\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7105:7145  pool.lastRewardTimestamp = lastTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7160:7167  return; */\n      pop\n      pop\n      pop\n      jump(tag_160)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7071:7178  if (lpSupply == 0) {... */\n    tag_167:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7190:7209  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7226:7230  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7226:7250  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7212:7225  lastTimestamp */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7212:7250  lastTimestamp-pool.lastRewardTimestamp */\n      tag_168\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_168:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7190:7250  uint256 nrOfSeconds = lastTimestamp-pool.lastRewardTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7261:7280  uint256 erc20Reward */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7327:7342  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7311:7315  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7311:7326  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7295:7310  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7283:7294  nrOfSeconds */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7283:7310  nrOfSeconds*rewardPerSecond */\n      tag_169\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_169:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7283:7326  nrOfSeconds*rewardPerSecond*pool.allocPoint */\n      tag_170\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_170:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7283:7342  nrOfSeconds*rewardPerSecond*pool.allocPoint-totalAllocPoint */\n      tag_171\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_171:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7261:7342  uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint-totalAllocPoint */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7418:7426  lpSupply */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7413:7417  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7401:7412  erc20Reward */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7401:7417  erc20Reward*1e36 */\n      tag_172\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_172:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7401:7426  erc20Reward*1e36/lpSupply */\n      tag_173\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_173:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7379:7383  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7379:7400  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7379:7426  pool.accERC20PerShare+erc20Reward*1e36/lpSupply */\n      tag_174\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_174:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7355:7359  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7355:7376  pool.accERC20PerShare */\n      0x03\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7355:7426  pool.accERC20PerShare = pool.accERC20PerShare+erc20Reward*1e36/lpSupply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7464:7479  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7437:7441  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7437:7461  pool.lastRewardTimestamp */\n      0x02\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7437:7479  pool.lastRewardTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6771:7487  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6730:7487  function updatePool(uint256 _pid) public {... */\n    tag_160:\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9202:9620  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_62:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9261:9282  PoolInfo storage pool */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9285:9293  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9294:9298  _pid */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9285:9299  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_177\n      tag_141\n      jump\t// in\n    tag_177:\n    tag_176:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9261:9299  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9310:9331  UserInfo storage user */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9334:9342  userInfo */\n      0x06\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9334:9348  userInfo[_pid] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9343:9347  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9334:9348  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9334:9360  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9349:9359  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9334:9360  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9310:9360  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9371:9430  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_179\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9405:9415  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9418:9422  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9418:9429  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9371:9375  pool */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9371:9383  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9371:9396  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9371:9430  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9481:9485  user */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9481:9492  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9462:9466  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9462:9480  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9462:9492  pool.totalDeposits-user.amount */\n      tag_180\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_180:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9441:9445  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9441:9459  pool.totalDeposits */\n      0x04\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9441:9492  pool.totalDeposits = pool.totalDeposits-user.amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9538:9542  _pid */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9526:9536  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9508:9556  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9544:9548  user */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9544:9555  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9508:9556  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9581:9582  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9567:9571  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9567:9578  user.amount */\n      0x00\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9567:9582  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9611:9612  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9593:9597  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9593:9608  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9593:9612  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9250:9620  {... */\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9202:9620  function emergencyWithdraw(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2030:2052  uint256 public paidOut */\n    tag_64:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6474:6654  function massUpdatePools() public {... */\n    tag_67:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6519:6533  uint256 length */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6536:6544  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6536:6551  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6519:6551  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6567:6578  uint256 pid */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6562:6647  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_183:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6590:6596  length */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6584:6587  pid */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6584:6596  pid < length */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6562:6647  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6620:6635  updatePool(pid) */\n      tag_186\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6631:6634  pid */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6620:6630  updatePool */\n      tag_59\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6620:6635  updatePool(pid) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6598:6603  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6562:6647  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_183)\n    tag_184:\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6508:6654  {... */\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":6474:6654  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4474:4768  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4572:4583  _withUpdate */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4568:4629  if (_withUpdate) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4600:4617  massUpdatePools() */\n      tag_191\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4600:4615  massUpdatePools */\n      tag_67\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4600:4617  massUpdatePools() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4568:4629  if (_withUpdate) {... */\n    tag_190:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4699:4710  _allocPoint */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4673:4681  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4682:4686  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4673:4687  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_141\n      jump\t// in\n    tag_193:\n    tag_192:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4673:4698  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4657:4672  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4657:4698  totalAllocPoint-poolInfo[_pid].allocPoint */\n      tag_195\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_195:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4657:4710  totalAllocPoint-poolInfo[_pid].allocPoint+_allocPoint */\n      tag_196\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_196:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4639:4654  totalAllocPoint */\n      0x07\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4639:4710  totalAllocPoint = totalAllocPoint-poolInfo[_pid].allocPoint+_allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4749:4760  _allocPoint */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4721:4729  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4730:4734  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4721:4735  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_198\n      tag_141\n      jump\t// in\n    tag_198:\n    tag_197:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4721:4746  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4721:4760  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4474:4768  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":1959:1978  IERC20 public erc20 */\n    tag_75:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2095:2125  uint256 public rewardPerSecond */\n    tag_83:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2365:2429  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_88:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4830:5003  function deposited(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4901:4908  uint256 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4921:4942  UserInfo storage user */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4945:4953  userInfo */\n      0x06\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4945:4959  userInfo[_pid] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4954:4958  _pid */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4945:4959  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4945:4966  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4960:4965  _user */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4945:4966  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4921:4966  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4984:4988  user */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4984:4995  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4977:4995  return user.amount */\n      swap2\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":4830:5003  function deposited(uint256 _pid, address _user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2593:2620  uint256 public endTimestamp */\n    tag_96:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3353:3661  function fund(uint256 _amount) public {... */\n    tag_100:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3428:3440  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3410:3425  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3410:3440  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3402:3479  require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3490:3557  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_211\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3521:3531  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3542:3546  this */\n      address\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3549:3556  _amount */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3490:3495  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3490:3512  erc20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3490:3557  erc20.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3592:3607  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3584:3591  _amount */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3584:3607  _amount/rewardPerSecond */\n      tag_213\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_213:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3568:3580  endTimestamp */\n      0x09\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3568:3607  endTimestamp += _amount/rewardPerSecond */\n      dup3\n      dup3\n      sload\n      tag_214\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3646:3653  _amount */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3633:3645  totalRewards */\n      sload(0x04)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3633:3653  totalRewards+_amount */\n      tag_215\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_215:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3618:3630  totalRewards */\n      0x04\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3618:3653  totalRewards = totalRewards+_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":3353:3661  function fund(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7551:8254  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_103:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7617:7638  PoolInfo storage pool */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7641:7649  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7650:7654  _pid */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7641:7655  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_218\n      tag_141\n      jump\t// in\n    tag_218:\n    tag_217:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7617:7655  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7666:7687  UserInfo storage user */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7690:7698  userInfo */\n      0x06\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7690:7704  userInfo[_pid] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7699:7703  _pid */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7690:7704  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7690:7716  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7705:7715  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7690:7716  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7666:7716  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7729:7745  updatePool(_pid) */\n      tag_220\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7740:7744  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7729:7739  updatePool */\n      tag_59\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7729:7745  updatePool(_pid) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7776:7777  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7762:7766  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7762:7773  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7762:7777  user.amount > 0 */\n      gt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7758:7939  if (user.amount > 0) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7794:7815  uint256 pendingAmount */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7857:7861  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7857:7872  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7852:7856  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7830:7834  pool */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7830:7851  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7818:7822  user */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7818:7829  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7818:7851  user.amount*pool.accERC20PerShare */\n      tag_222\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_222:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7818:7856  user.amount*pool.accERC20PerShare/1e36 */\n      tag_223\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_223:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7818:7872  user.amount*pool.accERC20PerShare/1e36-user.rewardDebt */\n      tag_224\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_224:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7794:7872  uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7887:7927  erc20Transfer(msg.sender, pendingAmount) */\n      tag_225\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7901:7911  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7913:7926  pendingAmount */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7887:7900  erc20Transfer */\n      tag_152\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7887:7927  erc20Transfer(msg.sender, pendingAmount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7779:7939  {... */\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7758:7939  if (user.amount > 0) {... */\n    tag_221:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7951:8025  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_226\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7989:7999  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8010:8014  this */\n      address\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8017:8024  _amount */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7951:7955  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7951:7963  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7951:7980  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_212\n      swap1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7951:8025  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8076:8083  _amount */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8057:8061  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8057:8075  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8057:8083  pool.totalDeposits+_amount */\n      tag_227\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_227:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8036:8040  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8036:8054  pool.totalDeposits */\n      0x04\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8036:8083  pool.totalDeposits = pool.totalDeposits+_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8122:8129  _amount */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8110:8114  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8110:8121  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8110:8129  user.amount+_amount */\n      tag_228\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_228:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8096:8100  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8096:8107  user.amount */\n      0x00\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8096:8129  user.amount = user.amount+_amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8192:8196  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8170:8174  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8170:8191  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8158:8162  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8158:8169  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8158:8191  user.amount*pool.accERC20PerShare */\n      tag_229\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_229:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8158:8196  user.amount*pool.accERC20PerShare/1e36 */\n      tag_230\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_230:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8140:8144  user */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8140:8155  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8140:8196  user.rewardDebt = user.amount*pool.accERC20PerShare/1e36 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8232:8236  _pid */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8220:8230  msg.sender */\n      caller\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8212:8246  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8238:8245  _amount */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":8212:8246  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7606:8254  {... */\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":7551:8254  function deposit(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5067:5993  function pending(uint256 _pid, address _user) external view returns (uint256) {... */\n    tag_106:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5136:5143  uint256 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5156:5177  PoolInfo storage pool */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5180:5188  poolInfo */\n      0x05\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5189:5193  _pid */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5180:5194  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_141\n      jump\t// in\n    tag_234:\n    tag_233:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5156:5194  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5205:5226  UserInfo storage user */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5229:5237  userInfo */\n      0x06\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5229:5243  userInfo[_pid] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5238:5242  _pid */\n      dup7\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5229:5243  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5229:5250  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5244:5249  _user */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5229:5250  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5205:5250  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5261:5285  uint256 accERC20PerShare */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5288:5292  pool */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5288:5309  pool.accERC20PerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5261:5309  uint256 accERC20PerShare = pool.accERC20PerShare */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5322:5338  uint256 lpSupply */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5341:5345  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5341:5359  pool.totalDeposits */\n      0x04\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5322:5359  uint256 lpSupply = pool.totalDeposits */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5394:5398  pool */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5394:5418  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5376:5391  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5376:5418  block.timestamp > pool.lastRewardTimestamp */\n      gt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5376:5435  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5434:5435  0 */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5422:5430  lpSupply */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5422:5435  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5376:5435  block.timestamp > pool.lastRewardTimestamp && lpSupply != 0 */\n    tag_236:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5372:5919  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5452:5473  uint256 lastTimestamp */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5494:5506  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5476:5491  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5476:5506  block.timestamp < endTimestamp */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5476:5539  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      tag_238\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5527:5539  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5476:5539  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      jump(tag_239)\n    tag_238:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5509:5524  block.timestamp */\n      timestamp\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5476:5539  block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n    tag_239:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5452:5539  uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5554:5580  uint256 timestampToCompare */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5610:5622  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5587  pool */\n      dup7\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5607  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5622  pool.lastRewardTimestamp < endTimestamp */\n      lt\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5664  pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp */\n      tag_240\n      jumpi\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5652:5664  endTimestamp */\n      sload(0x09)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5664  pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp */\n      jump(tag_241)\n    tag_240:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5625:5629  pool */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5625:5649  pool.lastRewardTimestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5583:5664  pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp */\n    tag_241:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5554:5664  uint256 timestampToCompare = pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5679:5698  uint256 nrOfSeconds */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5715:5733  timestampToCompare */\n      dup2\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5701:5714  lastTimestamp */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5701:5733  lastTimestamp-timestampToCompare */\n      tag_242\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_242:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5679:5733  uint256 nrOfSeconds = lastTimestamp-timestampToCompare */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5748:5767  uint256 erc20Reward */\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5814:5829  totalAllocPoint */\n      sload(0x07)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5798:5802  pool */\n      dup9\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5798:5813  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5782:5797  rewardPerSecond */\n      sload(0x03)\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5770:5781  nrOfSeconds */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5770:5797  nrOfSeconds*rewardPerSecond */\n      tag_243\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_243:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5770:5813  nrOfSeconds*rewardPerSecond*pool.allocPoint */\n      tag_244\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_244:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5770:5829  nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint */\n      tag_245\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_245:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5748:5829  uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5898:5906  lpSupply */\n      dup5\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5893:5897  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5881:5892  erc20Reward */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5881:5897  erc20Reward*1e36 */\n      tag_246\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_246:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5881:5906  erc20Reward*1e36/lpSupply */\n      tag_247\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_247:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5863:5879  accERC20PerShare */\n      dup7\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5863:5907  accERC20PerShare+(erc20Reward*1e36/lpSupply) */\n      tag_248\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_248:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5844:5907  accERC20PerShare = accERC20PerShare+(erc20Reward*1e36/lpSupply) */\n      swap6\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5437:5919  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5372:5919  if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {... */\n    tag_237:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5970:5974  user */\n      dup3\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5970:5985  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5965:5969  1e36 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5948:5964  accERC20PerShare */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5936:5940  user */\n      dup6\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5936:5947  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5936:5964  user.amount*accERC20PerShare */\n      tag_249\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_249:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5936:5969  user.amount*accERC20PerShare/1e36 */\n      tag_250\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_250:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5936:5985  user.amount*accERC20PerShare/1e36-user.rewardDebt */\n      tag_251\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_251:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5929:5985  return user.amount*accERC20PerShare/1e36-user.rewardDebt */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":5067:5993  function pending(uint256 _pid, address _user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":2528:2557  uint256 public startTimestamp */\n    tag_109:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9703:9841  function erc20Transfer(address _to, uint256 _amount) internal {... */\n    tag_152:\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9776:9781  erc20 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9776:9790  erc20.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9791:9794  _to */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9796:9803  _amount */\n      dup4\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9776:9804  erc20.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9826:9833  _amount */\n      dup1\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9815:9822  paidOut */\n      0x02\n      0x00\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9815:9833  paidOut += _amount */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/openzeppelin/FarmingC2N.sol\":9703:9841  function erc20Transfer(address _to, uint256 _amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_275\n      swap3\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_286)\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_289:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_290:\n        /* \"#utility.yul\":177:201   */\n      tag_323\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_289\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_33:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_325\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_290\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_292:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_294:\n        /* \"#utility.yul\":842:866   */\n      tag_330\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_289\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_331:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_295:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_333\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_294\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_39:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_336\n      tag_292\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1118:1237   */\n    tag_335:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_337\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_295\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_296:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_297:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_298:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_341\n        /* \"#utility.yul\":1676:1710   */\n      tag_342\n        /* \"#utility.yul\":1685:1709   */\n      tag_343\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_296\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1676:1710   */\n      tag_297\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1658:1711   */\n      tag_296\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_299:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_345\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_298\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_300:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_347\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_299\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_301:\n        /* \"#utility.yul\":2102:2153   */\n      tag_349\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_300\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2858   */\n    tag_42:\n        /* \"#utility.yul\":2385:2389   */\n      0x00\n        /* \"#utility.yul\":2423:2426   */\n      0xa0\n        /* \"#utility.yul\":2412:2421   */\n      dup3\n        /* \"#utility.yul\":2408:2427   */\n      add\n        /* \"#utility.yul\":2400:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2522   */\n      tag_351\n        /* \"#utility.yul\":2519:2520   */\n      0x00\n        /* \"#utility.yul\":2508:2517   */\n      dup4\n        /* \"#utility.yul\":2504:2521   */\n      add\n        /* \"#utility.yul\":2495:2501   */\n      dup9\n        /* \"#utility.yul\":2437:2522   */\n      tag_301\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2532:2604   */\n      tag_352\n        /* \"#utility.yul\":2600:2602   */\n      0x20\n        /* \"#utility.yul\":2589:2598   */\n      dup4\n        /* \"#utility.yul\":2585:2603   */\n      add\n        /* \"#utility.yul\":2576:2582   */\n      dup8\n        /* \"#utility.yul\":2532:2604   */\n      tag_290\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2614:2686   */\n      tag_353\n        /* \"#utility.yul\":2682:2684   */\n      0x40\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2658:2664   */\n      dup7\n        /* \"#utility.yul\":2614:2686   */\n      tag_290\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2696:2768   */\n      tag_354\n        /* \"#utility.yul\":2764:2766   */\n      0x60\n        /* \"#utility.yul\":2753:2762   */\n      dup4\n        /* \"#utility.yul\":2749:2767   */\n      add\n        /* \"#utility.yul\":2740:2746   */\n      dup6\n        /* \"#utility.yul\":2696:2768   */\n      tag_290\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2778:2851   */\n      tag_355\n        /* \"#utility.yul\":2846:2849   */\n      0x80\n        /* \"#utility.yul\":2835:2844   */\n      dup4\n        /* \"#utility.yul\":2831:2850   */\n      add\n        /* \"#utility.yul\":2822:2828   */\n      dup5\n        /* \"#utility.yul\":2778:2851   */\n      tag_290\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2166:2858   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:2960   */\n    tag_302:\n        /* \"#utility.yul\":2901:2908   */\n      0x00\n        /* \"#utility.yul\":2930:2954   */\n      tag_357\n        /* \"#utility.yul\":2948:2953   */\n      dup3\n        /* \"#utility.yul\":2930:2954   */\n      tag_296\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2919:2954   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:2960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2966:3076   */\n    tag_303:\n        /* \"#utility.yul\":3017:3024   */\n      0x00\n        /* \"#utility.yul\":3046:3070   */\n      tag_359\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3046:3070   */\n      tag_302\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3035:3070   */\n      swap1\n      pop\n        /* \"#utility.yul\":2966:3076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3082:3232   */\n    tag_304:\n        /* \"#utility.yul\":3169:3207   */\n      tag_361\n        /* \"#utility.yul\":3201:3206   */\n      dup2\n        /* \"#utility.yul\":3169:3207   */\n      tag_303\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3162:3167   */\n      dup2\n        /* \"#utility.yul\":3159:3208   */\n      eq\n        /* \"#utility.yul\":3149:3226   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":3222:3223   */\n      0x00\n        /* \"#utility.yul\":3219:3220   */\n      dup1\n        /* \"#utility.yul\":3212:3224   */\n      revert\n        /* \"#utility.yul\":3149:3226   */\n    tag_362:\n        /* \"#utility.yul\":3082:3232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3238:3405   */\n    tag_305:\n        /* \"#utility.yul\":3298:3303   */\n      0x00\n        /* \"#utility.yul\":3336:3342   */\n      dup2\n        /* \"#utility.yul\":3323:3343   */\n      calldataload\n        /* \"#utility.yul\":3314:3343   */\n      swap1\n      pop\n        /* \"#utility.yul\":3352:3399   */\n      tag_364\n        /* \"#utility.yul\":3393:3398   */\n      dup2\n        /* \"#utility.yul\":3352:3399   */\n      tag_304\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3238:3405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3501   */\n    tag_306:\n        /* \"#utility.yul\":3445:3452   */\n      0x00\n        /* \"#utility.yul\":3488:3493   */\n      dup2\n        /* \"#utility.yul\":3481:3494   */\n      iszero\n        /* \"#utility.yul\":3474:3495   */\n      iszero\n        /* \"#utility.yul\":3463:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3411:3501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3623   */\n    tag_307:\n        /* \"#utility.yul\":3577:3598   */\n      tag_367\n        /* \"#utility.yul\":3592:3597   */\n      dup2\n        /* \"#utility.yul\":3577:3598   */\n      tag_306\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3570:3575   */\n      dup2\n        /* \"#utility.yul\":3567:3599   */\n      eq\n        /* \"#utility.yul\":3557:3617   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":3613:3614   */\n      0x00\n        /* \"#utility.yul\":3610:3611   */\n      dup1\n        /* \"#utility.yul\":3603:3615   */\n      revert\n        /* \"#utility.yul\":3557:3617   */\n    tag_368:\n        /* \"#utility.yul\":3507:3623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:3762   */\n    tag_308:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3756   */\n      tag_370\n        /* \"#utility.yul\":3750:3755   */\n      dup2\n        /* \"#utility.yul\":3726:3756   */\n      tag_307\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3629:3762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:4409   */\n    tag_48:\n        /* \"#utility.yul\":3856:3862   */\n      0x00\n        /* \"#utility.yul\":3864:3870   */\n      dup1\n        /* \"#utility.yul\":3872:3878   */\n      0x00\n        /* \"#utility.yul\":3921:3923   */\n      0x60\n        /* \"#utility.yul\":3909:3918   */\n      dup5\n        /* \"#utility.yul\":3900:3907   */\n      dup7\n        /* \"#utility.yul\":3896:3919   */\n      sub\n        /* \"#utility.yul\":3892:3924   */\n      slt\n        /* \"#utility.yul\":3889:4008   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":3927:4006   */\n      tag_373\n      tag_292\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3889:4008   */\n    tag_372:\n        /* \"#utility.yul\":4047:4048   */\n      0x00\n        /* \"#utility.yul\":4072:4125   */\n      tag_374\n        /* \"#utility.yul\":4117:4124   */\n      dup7\n        /* \"#utility.yul\":4108:4114   */\n      dup3\n        /* \"#utility.yul\":4097:4106   */\n      dup8\n        /* \"#utility.yul\":4093:4115   */\n      add\n        /* \"#utility.yul\":4072:4125   */\n      tag_295\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4062:4125   */\n      swap4\n      pop\n        /* \"#utility.yul\":4018:4135   */\n      pop\n        /* \"#utility.yul\":4174:4176   */\n      0x20\n        /* \"#utility.yul\":4200:4267   */\n      tag_375\n        /* \"#utility.yul\":4259:4266   */\n      dup7\n        /* \"#utility.yul\":4250:4256   */\n      dup3\n        /* \"#utility.yul\":4239:4248   */\n      dup8\n        /* \"#utility.yul\":4235:4257   */\n      add\n        /* \"#utility.yul\":4200:4267   */\n      tag_305\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4190:4267   */\n      swap3\n      pop\n        /* \"#utility.yul\":4145:4277   */\n      pop\n        /* \"#utility.yul\":4316:4318   */\n      0x40\n        /* \"#utility.yul\":4342:4392   */\n      tag_376\n        /* \"#utility.yul\":4384:4391   */\n      dup7\n        /* \"#utility.yul\":4375:4381   */\n      dup3\n        /* \"#utility.yul\":4364:4373   */\n      dup8\n        /* \"#utility.yul\":4360:4382   */\n      add\n        /* \"#utility.yul\":4342:4392   */\n      tag_308\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4332:4392   */\n      swap2\n      pop\n        /* \"#utility.yul\":4287:4402   */\n      pop\n        /* \"#utility.yul\":3768:4409   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4415:4889   */\n    tag_55:\n        /* \"#utility.yul\":4483:4489   */\n      0x00\n        /* \"#utility.yul\":4491:4497   */\n      dup1\n        /* \"#utility.yul\":4540:4542   */\n      0x40\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4519:4526   */\n      dup6\n        /* \"#utility.yul\":4515:4538   */\n      sub\n        /* \"#utility.yul\":4511:4543   */\n      slt\n        /* \"#utility.yul\":4508:4627   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":4546:4625   */\n      tag_379\n      tag_292\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4508:4627   */\n    tag_378:\n        /* \"#utility.yul\":4666:4667   */\n      0x00\n        /* \"#utility.yul\":4691:4744   */\n      tag_380\n        /* \"#utility.yul\":4736:4743   */\n      dup6\n        /* \"#utility.yul\":4727:4733   */\n      dup3\n        /* \"#utility.yul\":4716:4725   */\n      dup7\n        /* \"#utility.yul\":4712:4734   */\n      add\n        /* \"#utility.yul\":4691:4744   */\n      tag_295\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4681:4744   */\n      swap3\n      pop\n        /* \"#utility.yul\":4637:4754   */\n      pop\n        /* \"#utility.yul\":4793:4795   */\n      0x20\n        /* \"#utility.yul\":4819:4872   */\n      tag_381\n        /* \"#utility.yul\":4864:4871   */\n      dup6\n        /* \"#utility.yul\":4855:4861   */\n      dup3\n        /* \"#utility.yul\":4844:4853   */\n      dup7\n        /* \"#utility.yul\":4840:4862   */\n      add\n        /* \"#utility.yul\":4819:4872   */\n      tag_295\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4809:4872   */\n      swap2\n      pop\n        /* \"#utility.yul\":4764:4882   */\n      pop\n        /* \"#utility.yul\":4415:4889   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4895:5508   */\n    tag_70:\n        /* \"#utility.yul\":4969:4975   */\n      0x00\n        /* \"#utility.yul\":4977:4983   */\n      dup1\n        /* \"#utility.yul\":4985:4991   */\n      0x00\n        /* \"#utility.yul\":5034:5036   */\n      0x60\n        /* \"#utility.yul\":5022:5031   */\n      dup5\n        /* \"#utility.yul\":5013:5020   */\n      dup7\n        /* \"#utility.yul\":5009:5032   */\n      sub\n        /* \"#utility.yul\":5005:5037   */\n      slt\n        /* \"#utility.yul\":5002:5121   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":5040:5119   */\n      tag_384\n      tag_292\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5002:5121   */\n    tag_383:\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5185:5238   */\n      tag_385\n        /* \"#utility.yul\":5230:5237   */\n      dup7\n        /* \"#utility.yul\":5221:5227   */\n      dup3\n        /* \"#utility.yul\":5210:5219   */\n      dup8\n        /* \"#utility.yul\":5206:5228   */\n      add\n        /* \"#utility.yul\":5185:5238   */\n      tag_295\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5175:5238   */\n      swap4\n      pop\n        /* \"#utility.yul\":5131:5248   */\n      pop\n        /* \"#utility.yul\":5287:5289   */\n      0x20\n        /* \"#utility.yul\":5313:5366   */\n      tag_386\n        /* \"#utility.yul\":5358:5365   */\n      dup7\n        /* \"#utility.yul\":5349:5355   */\n      dup3\n        /* \"#utility.yul\":5338:5347   */\n      dup8\n        /* \"#utility.yul\":5334:5356   */\n      add\n        /* \"#utility.yul\":5313:5366   */\n      tag_295\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5303:5366   */\n      swap3\n      pop\n        /* \"#utility.yul\":5258:5376   */\n      pop\n        /* \"#utility.yul\":5415:5417   */\n      0x40\n        /* \"#utility.yul\":5441:5491   */\n      tag_387\n        /* \"#utility.yul\":5483:5490   */\n      dup7\n        /* \"#utility.yul\":5474:5480   */\n      dup3\n        /* \"#utility.yul\":5463:5472   */\n      dup8\n        /* \"#utility.yul\":5459:5481   */\n      add\n        /* \"#utility.yul\":5441:5491   */\n      tag_308\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5431:5491   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5501   */\n      pop\n        /* \"#utility.yul\":4895:5508   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5514:5764   */\n    tag_77:\n        /* \"#utility.yul\":5621:5625   */\n      0x00\n        /* \"#utility.yul\":5659:5661   */\n      0x20\n        /* \"#utility.yul\":5648:5657   */\n      dup3\n        /* \"#utility.yul\":5644:5662   */\n      add\n        /* \"#utility.yul\":5636:5662   */\n      swap1\n      pop\n        /* \"#utility.yul\":5672:5757   */\n      tag_389\n        /* \"#utility.yul\":5754:5755   */\n      0x00\n        /* \"#utility.yul\":5743:5752   */\n      dup4\n        /* \"#utility.yul\":5739:5756   */\n      add\n        /* \"#utility.yul\":5730:5736   */\n      dup5\n        /* \"#utility.yul\":5672:5757   */\n      tag_301\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5514:5764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:5888   */\n    tag_309:\n        /* \"#utility.yul\":5857:5881   */\n      tag_391\n        /* \"#utility.yul\":5875:5880   */\n      dup2\n        /* \"#utility.yul\":5857:5881   */\n      tag_302\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5852:5855   */\n      dup3\n        /* \"#utility.yul\":5845:5882   */\n      mstore\n        /* \"#utility.yul\":5770:5888   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6116   */\n    tag_81:\n        /* \"#utility.yul\":5987:5991   */\n      0x00\n        /* \"#utility.yul\":6025:6027   */\n      0x20\n        /* \"#utility.yul\":6014:6023   */\n      dup3\n        /* \"#utility.yul\":6010:6028   */\n      add\n        /* \"#utility.yul\":6002:6028   */\n      swap1\n      pop\n        /* \"#utility.yul\":6038:6109   */\n      tag_393\n        /* \"#utility.yul\":6106:6107   */\n      0x00\n        /* \"#utility.yul\":6095:6104   */\n      dup4\n        /* \"#utility.yul\":6091:6108   */\n      add\n        /* \"#utility.yul\":6082:6088   */\n      dup5\n        /* \"#utility.yul\":6038:6109   */\n      tag_309\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5894:6116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6244   */\n    tag_310:\n        /* \"#utility.yul\":6195:6219   */\n      tag_395\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6195:6219   */\n      tag_302\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6188:6193   */\n      dup2\n        /* \"#utility.yul\":6185:6220   */\n      eq\n        /* \"#utility.yul\":6175:6238   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":6234:6235   */\n      0x00\n        /* \"#utility.yul\":6231:6232   */\n      dup1\n        /* \"#utility.yul\":6224:6236   */\n      revert\n        /* \"#utility.yul\":6175:6238   */\n    tag_396:\n        /* \"#utility.yul\":6122:6244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6389   */\n    tag_311:\n        /* \"#utility.yul\":6296:6301   */\n      0x00\n        /* \"#utility.yul\":6334:6340   */\n      dup2\n        /* \"#utility.yul\":6321:6341   */\n      calldataload\n        /* \"#utility.yul\":6312:6341   */\n      swap1\n      pop\n        /* \"#utility.yul\":6350:6383   */\n      tag_398\n        /* \"#utility.yul\":6377:6382   */\n      dup2\n        /* \"#utility.yul\":6350:6383   */\n      tag_310\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6250:6389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:6869   */\n    tag_87:\n        /* \"#utility.yul\":6463:6469   */\n      0x00\n        /* \"#utility.yul\":6471:6477   */\n      dup1\n        /* \"#utility.yul\":6520:6522   */\n      0x40\n        /* \"#utility.yul\":6508:6517   */\n      dup4\n        /* \"#utility.yul\":6499:6506   */\n      dup6\n        /* \"#utility.yul\":6495:6518   */\n      sub\n        /* \"#utility.yul\":6491:6523   */\n      slt\n        /* \"#utility.yul\":6488:6607   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":6526:6605   */\n      tag_401\n      tag_292\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6488:6607   */\n    tag_400:\n        /* \"#utility.yul\":6646:6647   */\n      0x00\n        /* \"#utility.yul\":6671:6724   */\n      tag_402\n        /* \"#utility.yul\":6716:6723   */\n      dup6\n        /* \"#utility.yul\":6707:6713   */\n      dup3\n        /* \"#utility.yul\":6696:6705   */\n      dup7\n        /* \"#utility.yul\":6692:6714   */\n      add\n        /* \"#utility.yul\":6671:6724   */\n      tag_295\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":6661:6724   */\n      swap3\n      pop\n        /* \"#utility.yul\":6617:6734   */\n      pop\n        /* \"#utility.yul\":6773:6775   */\n      0x20\n        /* \"#utility.yul\":6799:6852   */\n      tag_403\n        /* \"#utility.yul\":6844:6851   */\n      dup6\n        /* \"#utility.yul\":6835:6841   */\n      dup3\n        /* \"#utility.yul\":6824:6833   */\n      dup7\n        /* \"#utility.yul\":6820:6842   */\n      add\n        /* \"#utility.yul\":6799:6852   */\n      tag_311\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6789:6852   */\n      swap2\n      pop\n        /* \"#utility.yul\":6744:6862   */\n      pop\n        /* \"#utility.yul\":6395:6869   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6875:7207   */\n    tag_90:\n        /* \"#utility.yul\":6996:7000   */\n      0x00\n        /* \"#utility.yul\":7034:7036   */\n      0x40\n        /* \"#utility.yul\":7023:7032   */\n      dup3\n        /* \"#utility.yul\":7019:7037   */\n      add\n        /* \"#utility.yul\":7011:7037   */\n      swap1\n      pop\n        /* \"#utility.yul\":7047:7118   */\n      tag_405\n        /* \"#utility.yul\":7115:7116   */\n      0x00\n        /* \"#utility.yul\":7104:7113   */\n      dup4\n        /* \"#utility.yul\":7100:7117   */\n      add\n        /* \"#utility.yul\":7091:7097   */\n      dup6\n        /* \"#utility.yul\":7047:7118   */\n      tag_290\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7128:7200   */\n      tag_406\n        /* \"#utility.yul\":7196:7198   */\n      0x20\n        /* \"#utility.yul\":7185:7194   */\n      dup4\n        /* \"#utility.yul\":7181:7199   */\n      add\n        /* \"#utility.yul\":7172:7178   */\n      dup5\n        /* \"#utility.yul\":7128:7200   */\n      tag_290\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6875:7207   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7542   */\n    tag_113:\n        /* \"#utility.yul\":7272:7278   */\n      0x00\n        /* \"#utility.yul\":7321:7323   */\n      0x20\n        /* \"#utility.yul\":7309:7318   */\n      dup3\n        /* \"#utility.yul\":7300:7307   */\n      dup5\n        /* \"#utility.yul\":7296:7319   */\n      sub\n        /* \"#utility.yul\":7292:7324   */\n      slt\n        /* \"#utility.yul\":7289:7408   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":7327:7406   */\n      tag_409\n      tag_292\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7289:7408   */\n    tag_408:\n        /* \"#utility.yul\":7447:7448   */\n      0x00\n        /* \"#utility.yul\":7472:7525   */\n      tag_410\n        /* \"#utility.yul\":7517:7524   */\n      dup5\n        /* \"#utility.yul\":7508:7514   */\n      dup3\n        /* \"#utility.yul\":7497:7506   */\n      dup6\n        /* \"#utility.yul\":7493:7515   */\n      add\n        /* \"#utility.yul\":7472:7525   */\n      tag_311\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7462:7525   */\n      swap2\n      pop\n        /* \"#utility.yul\":7418:7535   */\n      pop\n        /* \"#utility.yul\":7213:7542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7728   */\n    tag_312:\n        /* \"#utility.yul\":7596:7673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7593:7594   */\n      0x00\n        /* \"#utility.yul\":7586:7674   */\n      mstore\n        /* \"#utility.yul\":7693:7697   */\n      0x11\n        /* \"#utility.yul\":7690:7691   */\n      0x04\n        /* \"#utility.yul\":7683:7698   */\n      mstore\n        /* \"#utility.yul\":7717:7721   */\n      0x24\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7707:7722   */\n      revert\n        /* \"#utility.yul\":7734:7925   */\n    tag_127:\n        /* \"#utility.yul\":7774:7777   */\n      0x00\n        /* \"#utility.yul\":7793:7813   */\n      tag_413\n        /* \"#utility.yul\":7811:7812   */\n      dup3\n        /* \"#utility.yul\":7793:7813   */\n      tag_289\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7788:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7827:7847   */\n      tag_414\n        /* \"#utility.yul\":7845:7846   */\n      dup4\n        /* \"#utility.yul\":7827:7847   */\n      tag_289\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7822:7847   */\n      swap3\n      pop\n        /* \"#utility.yul\":7870:7871   */\n      dup3\n        /* \"#utility.yul\":7867:7868   */\n      dup3\n        /* \"#utility.yul\":7863:7872   */\n      add\n        /* \"#utility.yul\":7856:7872   */\n      swap1\n      pop\n        /* \"#utility.yul\":7891:7894   */\n      dup1\n        /* \"#utility.yul\":7888:7889   */\n      dup3\n        /* \"#utility.yul\":7885:7895   */\n      gt\n        /* \"#utility.yul\":7882:7918   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":7898:7916   */\n      tag_416\n      tag_312\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7882:7918   */\n    tag_415:\n        /* \"#utility.yul\":7734:7925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7931:8125   */\n    tag_134:\n        /* \"#utility.yul\":7971:7975   */\n      0x00\n        /* \"#utility.yul\":7991:8011   */\n      tag_418\n        /* \"#utility.yul\":8009:8010   */\n      dup3\n        /* \"#utility.yul\":7991:8011   */\n      tag_289\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7986:8011   */\n      swap2\n      pop\n        /* \"#utility.yul\":8025:8045   */\n      tag_419\n        /* \"#utility.yul\":8043:8044   */\n      dup4\n        /* \"#utility.yul\":8025:8045   */\n      tag_289\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8020:8045   */\n      swap3\n      pop\n        /* \"#utility.yul\":8069:8070   */\n      dup3\n        /* \"#utility.yul\":8066:8067   */\n      dup3\n        /* \"#utility.yul\":8062:8071   */\n      sub\n        /* \"#utility.yul\":8054:8071   */\n      swap1\n      pop\n        /* \"#utility.yul\":8093:8094   */\n      dup2\n        /* \"#utility.yul\":8087:8091   */\n      dup2\n        /* \"#utility.yul\":8084:8095   */\n      gt\n        /* \"#utility.yul\":8081:8118   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8098:8116   */\n      tag_421\n      tag_312\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8081:8118   */\n    tag_420:\n        /* \"#utility.yul\":7931:8125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8541   */\n    tag_136:\n        /* \"#utility.yul\":8171:8178   */\n      0x00\n        /* \"#utility.yul\":8194:8214   */\n      tag_423\n        /* \"#utility.yul\":8212:8213   */\n      dup3\n        /* \"#utility.yul\":8194:8214   */\n      tag_289\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8189:8214   */\n      swap2\n      pop\n        /* \"#utility.yul\":8228:8248   */\n      tag_424\n        /* \"#utility.yul\":8246:8247   */\n      dup4\n        /* \"#utility.yul\":8228:8248   */\n      tag_289\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8223:8248   */\n      swap3\n      pop\n        /* \"#utility.yul\":8283:8284   */\n      dup3\n        /* \"#utility.yul\":8280:8281   */\n      dup3\n        /* \"#utility.yul\":8276:8285   */\n      mul\n        /* \"#utility.yul\":8305:8335   */\n      tag_425\n        /* \"#utility.yul\":8323:8334   */\n      dup2\n        /* \"#utility.yul\":8305:8335   */\n      tag_289\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8294:8335   */\n      swap2\n      pop\n        /* \"#utility.yul\":8484:8485   */\n      dup3\n        /* \"#utility.yul\":8475:8482   */\n      dup3\n        /* \"#utility.yul\":8471:8486   */\n      div\n        /* \"#utility.yul\":8468:8469   */\n      dup5\n        /* \"#utility.yul\":8465:8487   */\n      eq\n        /* \"#utility.yul\":8445:8446   */\n      dup4\n        /* \"#utility.yul\":8438:8447   */\n      iszero\n        /* \"#utility.yul\":8418:8501   */\n      or\n        /* \"#utility.yul\":8395:8534   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":8514:8532   */\n      tag_427\n      tag_312\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8395:8534   */\n    tag_426:\n        /* \"#utility.yul\":8179:8541   */\n      pop\n        /* \"#utility.yul\":8131:8541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8547:8727   */\n    tag_141:\n        /* \"#utility.yul\":8595:8672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8592:8593   */\n      0x00\n        /* \"#utility.yul\":8585:8673   */\n      mstore\n        /* \"#utility.yul\":8692:8696   */\n      0x32\n        /* \"#utility.yul\":8689:8690   */\n      0x04\n        /* \"#utility.yul\":8682:8697   */\n      mstore\n        /* \"#utility.yul\":8716:8720   */\n      0x24\n        /* \"#utility.yul\":8713:8714   */\n      0x00\n        /* \"#utility.yul\":8706:8721   */\n      revert\n        /* \"#utility.yul\":8733:8902   */\n    tag_313:\n        /* \"#utility.yul\":8817:8828   */\n      0x00\n        /* \"#utility.yul\":8851:8857   */\n      dup3\n        /* \"#utility.yul\":8846:8849   */\n      dup3\n        /* \"#utility.yul\":8839:8858   */\n      mstore\n        /* \"#utility.yul\":8891:8895   */\n      0x20\n        /* \"#utility.yul\":8886:8889   */\n      dup3\n        /* \"#utility.yul\":8882:8896   */\n      add\n        /* \"#utility.yul\":8867:8896   */\n      swap1\n      pop\n        /* \"#utility.yul\":8733:8902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8908:9137   */\n    tag_314:\n        /* \"#utility.yul\":9048:9082   */\n      0x77697468647261773a2063616e2774207769746864726177206d6f7265207468\n        /* \"#utility.yul\":9044:9045   */\n      0x00\n        /* \"#utility.yul\":9036:9042   */\n      dup3\n        /* \"#utility.yul\":9032:9046   */\n      add\n        /* \"#utility.yul\":9025:9083   */\n      mstore\n        /* \"#utility.yul\":9117:9129   */\n      0x616e206465706f73697400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9112:9114   */\n      0x20\n        /* \"#utility.yul\":9104:9110   */\n      dup3\n        /* \"#utility.yul\":9100:9115   */\n      add\n        /* \"#utility.yul\":9093:9130   */\n      mstore\n        /* \"#utility.yul\":8908:9137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9509   */\n    tag_315:\n        /* \"#utility.yul\":9285:9288   */\n      0x00\n        /* \"#utility.yul\":9306:9373   */\n      tag_432\n        /* \"#utility.yul\":9370:9372   */\n      0x2a\n        /* \"#utility.yul\":9365:9368   */\n      dup4\n        /* \"#utility.yul\":9306:9373   */\n      tag_313\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9299:9373   */\n      swap2\n      pop\n        /* \"#utility.yul\":9382:9475   */\n      tag_433\n        /* \"#utility.yul\":9471:9474   */\n      dup3\n        /* \"#utility.yul\":9382:9475   */\n      tag_314\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9500:9502   */\n      0x40\n        /* \"#utility.yul\":9495:9498   */\n      dup3\n        /* \"#utility.yul\":9491:9503   */\n      add\n        /* \"#utility.yul\":9484:9503   */\n      swap1\n      pop\n        /* \"#utility.yul\":9143:9509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9515:9934   */\n    tag_145:\n        /* \"#utility.yul\":9681:9685   */\n      0x00\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9708:9717   */\n      dup3\n        /* \"#utility.yul\":9704:9722   */\n      add\n        /* \"#utility.yul\":9696:9722   */\n      swap1\n      pop\n        /* \"#utility.yul\":9768:9777   */\n      dup2\n        /* \"#utility.yul\":9762:9766   */\n      dup2\n        /* \"#utility.yul\":9758:9778   */\n      sub\n        /* \"#utility.yul\":9754:9755   */\n      0x00\n        /* \"#utility.yul\":9743:9752   */\n      dup4\n        /* \"#utility.yul\":9739:9756   */\n      add\n        /* \"#utility.yul\":9732:9779   */\n      mstore\n        /* \"#utility.yul\":9796:9927   */\n      tag_435\n        /* \"#utility.yul\":9922:9926   */\n      dup2\n        /* \"#utility.yul\":9796:9927   */\n      tag_315\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9788:9927   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9940:10120   */\n    tag_316:\n        /* \"#utility.yul\":9988:10065   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9985:9986   */\n      0x00\n        /* \"#utility.yul\":9978:10066   */\n      mstore\n        /* \"#utility.yul\":10085:10089   */\n      0x12\n        /* \"#utility.yul\":10082:10083   */\n      0x04\n        /* \"#utility.yul\":10075:10090   */\n      mstore\n        /* \"#utility.yul\":10109:10113   */\n      0x24\n        /* \"#utility.yul\":10106:10107   */\n      0x00\n        /* \"#utility.yul\":10099:10114   */\n      revert\n        /* \"#utility.yul\":10126:10311   */\n    tag_149:\n        /* \"#utility.yul\":10166:10167   */\n      0x00\n        /* \"#utility.yul\":10183:10203   */\n      tag_438\n        /* \"#utility.yul\":10201:10202   */\n      dup3\n        /* \"#utility.yul\":10183:10203   */\n      tag_289\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10178:10203   */\n      swap2\n      pop\n        /* \"#utility.yul\":10217:10237   */\n      tag_439\n        /* \"#utility.yul\":10235:10236   */\n      dup4\n        /* \"#utility.yul\":10217:10237   */\n      tag_289\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10212:10237   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10257   */\n      dup3\n        /* \"#utility.yul\":10246:10281   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10261:10279   */\n      tag_441\n      tag_316\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10246:10281   */\n    tag_440:\n        /* \"#utility.yul\":10303:10304   */\n      dup3\n        /* \"#utility.yul\":10300:10301   */\n      dup3\n        /* \"#utility.yul\":10296:10305   */\n      div\n        /* \"#utility.yul\":10291:10305   */\n      swap1\n      pop\n        /* \"#utility.yul\":10126:10311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10317:10538   */\n    tag_317:\n        /* \"#utility.yul\":10457:10491   */\n      0x66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73\n        /* \"#utility.yul\":10453:10454   */\n      0x00\n        /* \"#utility.yul\":10445:10451   */\n      dup3\n        /* \"#utility.yul\":10441:10455   */\n      add\n        /* \"#utility.yul\":10434:10492   */\n      mstore\n        /* \"#utility.yul\":10526:10530   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10521:10523   */\n      0x20\n        /* \"#utility.yul\":10513:10519   */\n      dup3\n        /* \"#utility.yul\":10509:10524   */\n      add\n        /* \"#utility.yul\":10502:10531   */\n      mstore\n        /* \"#utility.yul\":10317:10538   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10544:10910   */\n    tag_318:\n        /* \"#utility.yul\":10686:10689   */\n      0x00\n        /* \"#utility.yul\":10707:10774   */\n      tag_444\n        /* \"#utility.yul\":10771:10773   */\n      0x22\n        /* \"#utility.yul\":10766:10769   */\n      dup4\n        /* \"#utility.yul\":10707:10774   */\n      tag_313\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10700:10774   */\n      swap2\n      pop\n        /* \"#utility.yul\":10783:10876   */\n      tag_445\n        /* \"#utility.yul\":10872:10875   */\n      dup3\n        /* \"#utility.yul\":10783:10876   */\n      tag_317\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10901:10903   */\n      0x40\n        /* \"#utility.yul\":10896:10899   */\n      dup3\n        /* \"#utility.yul\":10892:10904   */\n      add\n        /* \"#utility.yul\":10885:10904   */\n      swap1\n      pop\n        /* \"#utility.yul\":10544:10910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10916:11335   */\n    tag_210:\n        /* \"#utility.yul\":11082:11086   */\n      0x00\n        /* \"#utility.yul\":11120:11122   */\n      0x20\n        /* \"#utility.yul\":11109:11118   */\n      dup3\n        /* \"#utility.yul\":11105:11123   */\n      add\n        /* \"#utility.yul\":11097:11123   */\n      swap1\n      pop\n        /* \"#utility.yul\":11169:11178   */\n      dup2\n        /* \"#utility.yul\":11163:11167   */\n      dup2\n        /* \"#utility.yul\":11159:11179   */\n      sub\n        /* \"#utility.yul\":11155:11156   */\n      0x00\n        /* \"#utility.yul\":11144:11153   */\n      dup4\n        /* \"#utility.yul\":11140:11157   */\n      add\n        /* \"#utility.yul\":11133:11180   */\n      mstore\n        /* \"#utility.yul\":11197:11328   */\n      tag_447\n        /* \"#utility.yul\":11323:11327   */\n      dup2\n        /* \"#utility.yul\":11197:11328   */\n      tag_318\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11189:11328   */\n      swap1\n      pop\n        /* \"#utility.yul\":10916:11335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11341:11673   */\n    tag_267:\n        /* \"#utility.yul\":11462:11466   */\n      0x00\n        /* \"#utility.yul\":11500:11502   */\n      0x40\n        /* \"#utility.yul\":11489:11498   */\n      dup3\n        /* \"#utility.yul\":11485:11503   */\n      add\n        /* \"#utility.yul\":11477:11503   */\n      swap1\n      pop\n        /* \"#utility.yul\":11513:11584   */\n      tag_449\n        /* \"#utility.yul\":11581:11582   */\n      0x00\n        /* \"#utility.yul\":11570:11579   */\n      dup4\n        /* \"#utility.yul\":11566:11583   */\n      add\n        /* \"#utility.yul\":11557:11563   */\n      dup6\n        /* \"#utility.yul\":11513:11584   */\n      tag_309\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11594:11666   */\n      tag_450\n        /* \"#utility.yul\":11662:11664   */\n      0x20\n        /* \"#utility.yul\":11651:11660   */\n      dup4\n        /* \"#utility.yul\":11647:11665   */\n      add\n        /* \"#utility.yul\":11638:11644   */\n      dup5\n        /* \"#utility.yul\":11594:11666   */\n      tag_290\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11341:11673   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11679:11816   */\n    tag_319:\n        /* \"#utility.yul\":11733:11738   */\n      0x00\n        /* \"#utility.yul\":11764:11770   */\n      dup2\n        /* \"#utility.yul\":11758:11771   */\n      mload\n        /* \"#utility.yul\":11749:11771   */\n      swap1\n      pop\n        /* \"#utility.yul\":11780:11810   */\n      tag_452\n        /* \"#utility.yul\":11804:11809   */\n      dup2\n        /* \"#utility.yul\":11780:11810   */\n      tag_307\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11679:11816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11822:12167   */\n    tag_271:\n        /* \"#utility.yul\":11889:11895   */\n      0x00\n        /* \"#utility.yul\":11938:11940   */\n      0x20\n        /* \"#utility.yul\":11926:11935   */\n      dup3\n        /* \"#utility.yul\":11917:11924   */\n      dup5\n        /* \"#utility.yul\":11913:11936   */\n      sub\n        /* \"#utility.yul\":11909:11941   */\n      slt\n        /* \"#utility.yul\":11906:12025   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":11944:12023   */\n      tag_455\n      tag_292\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11906:12025   */\n    tag_454:\n        /* \"#utility.yul\":12064:12065   */\n      0x00\n        /* \"#utility.yul\":12089:12150   */\n      tag_456\n        /* \"#utility.yul\":12142:12149   */\n      dup5\n        /* \"#utility.yul\":12133:12139   */\n      dup3\n        /* \"#utility.yul\":12122:12131   */\n      dup6\n        /* \"#utility.yul\":12118:12140   */\n      add\n        /* \"#utility.yul\":12089:12150   */\n      tag_319\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12079:12150   */\n      swap2\n      pop\n        /* \"#utility.yul\":12035:12160   */\n      pop\n        /* \"#utility.yul\":11822:12167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12173:12615   */\n    tag_281:\n        /* \"#utility.yul\":12322:12326   */\n      0x00\n        /* \"#utility.yul\":12360:12362   */\n      0x60\n        /* \"#utility.yul\":12349:12358   */\n      dup3\n        /* \"#utility.yul\":12345:12363   */\n      add\n        /* \"#utility.yul\":12337:12363   */\n      swap1\n      pop\n        /* \"#utility.yul\":12373:12444   */\n      tag_458\n        /* \"#utility.yul\":12441:12442   */\n      0x00\n        /* \"#utility.yul\":12430:12439   */\n      dup4\n        /* \"#utility.yul\":12426:12443   */\n      add\n        /* \"#utility.yul\":12417:12423   */\n      dup7\n        /* \"#utility.yul\":12373:12444   */\n      tag_309\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12454:12526   */\n      tag_459\n        /* \"#utility.yul\":12522:12524   */\n      0x20\n        /* \"#utility.yul\":12511:12520   */\n      dup4\n        /* \"#utility.yul\":12507:12525   */\n      add\n        /* \"#utility.yul\":12498:12504   */\n      dup6\n        /* \"#utility.yul\":12454:12526   */\n      tag_309\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12536:12608   */\n      tag_460\n        /* \"#utility.yul\":12604:12606   */\n      0x40\n        /* \"#utility.yul\":12593:12602   */\n      dup4\n        /* \"#utility.yul\":12589:12607   */\n      add\n        /* \"#utility.yul\":12580:12586   */\n      dup5\n        /* \"#utility.yul\":12536:12608   */\n      tag_290\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12173:12615   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1286ad8acaa8181c3a24a1fd0bf8ec88e12eff3c1aa592115317d5c36a2a23564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_875": {
									"entryPoint": null,
									"id": 875,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 271,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$315_fromMemory": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$315t_uint256t_uint256_fromMemory": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$315": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$315": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2423:9",
										"nodeType": "YulBlock",
										"src": "0:2423:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "627:51:9",
													"nodeType": "YulBlock",
													"src": "627:51:9",
													"statements": [
														{
															"nativeSrc": "637:35:9",
															"nodeType": "YulAssignment",
															"src": "637:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:9"
																},
																"nativeSrc": "648:24:9",
																"nodeType": "YulFunctionCall",
																"src": "648:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$315",
												"nativeSrc": "568:110:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:9",
														"nodeType": "YulTypedName",
														"src": "609:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:9",
														"nodeType": "YulTypedName",
														"src": "619:7:9",
														"type": ""
													}
												],
												"src": "568:110:9"
											},
											{
												"body": {
													"nativeSrc": "741:93:9",
													"nodeType": "YulBlock",
													"src": "741:93:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:9",
																"nodeType": "YulBlock",
																"src": "812:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:9",
																					"nodeType": "YulLiteral",
																					"src": "821:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:9",
																					"nodeType": "YulLiteral",
																					"src": "824:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:9"
																			},
																			"nativeSrc": "814:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:9"
																		},
																		"nativeSrc": "814:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$315",
																					"nativeSrc": "771:31:9",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:9"
																				},
																				"nativeSrc": "771:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:9"
																		},
																		"nativeSrc": "761:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:9"
																},
																"nativeSrc": "754:57:9",
																"nodeType": "YulFunctionCall",
																"src": "754:57:9"
															},
															"nativeSrc": "751:77:9",
															"nodeType": "YulIf",
															"src": "751:77:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$315",
												"nativeSrc": "684:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:9",
														"nodeType": "YulTypedName",
														"src": "734:5:9",
														"type": ""
													}
												],
												"src": "684:150:9"
											},
											{
												"body": {
													"nativeSrc": "917:94:9",
													"nodeType": "YulBlock",
													"src": "917:94:9",
													"statements": [
														{
															"nativeSrc": "927:22:9",
															"nodeType": "YulAssignment",
															"src": "927:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:9"
																},
																"nativeSrc": "936:13:9",
																"nodeType": "YulFunctionCall",
																"src": "936:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$315",
																	"nativeSrc": "958:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:9"
																},
																"nativeSrc": "958:47:9",
																"nodeType": "YulFunctionCall",
																"src": "958:47:9"
															},
															"nativeSrc": "958:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$315_fromMemory",
												"nativeSrc": "840:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:9",
														"nodeType": "YulTypedName",
														"src": "895:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:9",
														"nodeType": "YulTypedName",
														"src": "903:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:9",
														"nodeType": "YulTypedName",
														"src": "911:5:9",
														"type": ""
													}
												],
												"src": "840:171:9"
											},
											{
												"body": {
													"nativeSrc": "1062:32:9",
													"nodeType": "YulBlock",
													"src": "1062:32:9",
													"statements": [
														{
															"nativeSrc": "1072:16:9",
															"nodeType": "YulAssignment",
															"src": "1072:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1083:5:9",
																"nodeType": "YulIdentifier",
																"src": "1083:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1072:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1072:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1017:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:9",
														"nodeType": "YulTypedName",
														"src": "1044:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1054:7:9",
														"nodeType": "YulTypedName",
														"src": "1054:7:9",
														"type": ""
													}
												],
												"src": "1017:77:9"
											},
											{
												"body": {
													"nativeSrc": "1143:79:9",
													"nodeType": "YulBlock",
													"src": "1143:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1200:16:9",
																"nodeType": "YulBlock",
																"src": "1200:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:9"
																			},
																			"nativeSrc": "1202:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:9"
																		},
																		"nativeSrc": "1202:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1191:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1191:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1173:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1173:17:9"
																				},
																				"nativeSrc": "1173:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1173:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1163:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1163:2:9"
																		},
																		"nativeSrc": "1163:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1156:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:9"
																},
																"nativeSrc": "1156:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1156:43:9"
															},
															"nativeSrc": "1153:63:9",
															"nodeType": "YulIf",
															"src": "1153:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1100:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1136:5:9",
														"nodeType": "YulTypedName",
														"src": "1136:5:9",
														"type": ""
													}
												],
												"src": "1100:122:9"
											},
											{
												"body": {
													"nativeSrc": "1291:80:9",
													"nodeType": "YulBlock",
													"src": "1291:80:9",
													"statements": [
														{
															"nativeSrc": "1301:22:9",
															"nodeType": "YulAssignment",
															"src": "1301:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1316:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1316:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1310:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1310:5:9"
																},
																"nativeSrc": "1310:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1310:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1301:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1301:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1359:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1359:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1332:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1332:26:9"
																},
																"nativeSrc": "1332:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1332:33:9"
															},
															"nativeSrc": "1332:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1332:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1228:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1269:6:9",
														"nodeType": "YulTypedName",
														"src": "1269:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1277:3:9",
														"nodeType": "YulTypedName",
														"src": "1277:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1285:5:9",
														"nodeType": "YulTypedName",
														"src": "1285:5:9",
														"type": ""
													}
												],
												"src": "1228:143:9"
											},
											{
												"body": {
													"nativeSrc": "1502:566:9",
													"nodeType": "YulBlock",
													"src": "1502:566:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1548:83:9",
																"nodeType": "YulBlock",
																"src": "1548:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1550:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:77:9"
																			},
																			"nativeSrc": "1550:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1550:79:9"
																		},
																		"nativeSrc": "1550:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1550:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1523:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1532:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1519:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:9"
																		},
																		"nativeSrc": "1519:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1544:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1544:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1515:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:9"
																},
																"nativeSrc": "1515:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1515:32:9"
															},
															"nativeSrc": "1512:119:9",
															"nodeType": "YulIf",
															"src": "1512:119:9"
														},
														{
															"nativeSrc": "1641:142:9",
															"nodeType": "YulBlock",
															"src": "1641:142:9",
															"statements": [
																{
																	"nativeSrc": "1656:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1656:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1670:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1660:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1660:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1685:88:9",
																	"nodeType": "YulAssignment",
																	"src": "1685:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1745:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1745:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1756:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1756:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1741:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1741:3:9"
																				},
																				"nativeSrc": "1741:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1741:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1765:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1765:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$315_fromMemory",
																			"nativeSrc": "1695:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "1695:45:9"
																		},
																		"nativeSrc": "1695:78:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1695:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1685:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1685:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1793:129:9",
															"nodeType": "YulBlock",
															"src": "1793:129:9",
															"statements": [
																{
																	"nativeSrc": "1808:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1808:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1822:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1812:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1812:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1838:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1838:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1884:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1884:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1895:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1895:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1880:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:9"
																				},
																				"nativeSrc": "1880:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1880:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1904:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1904:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1848:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1848:31:9"
																		},
																		"nativeSrc": "1848:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1838:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1838:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1932:129:9",
															"nodeType": "YulBlock",
															"src": "1932:129:9",
															"statements": [
																{
																	"nativeSrc": "1947:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1947:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1961:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1951:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1951:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1977:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1977:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2023:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2023:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2034:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2019:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2019:3:9"
																				},
																				"nativeSrc": "2019:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2019:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2043:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2043:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1987:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1987:31:9"
																		},
																		"nativeSrc": "1987:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1977:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1977:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$315t_uint256t_uint256_fromMemory",
												"nativeSrc": "1377:691:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1456:9:9",
														"nodeType": "YulTypedName",
														"src": "1456:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1467:7:9",
														"nodeType": "YulTypedName",
														"src": "1467:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1479:6:9",
														"nodeType": "YulTypedName",
														"src": "1479:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1487:6:9",
														"nodeType": "YulTypedName",
														"src": "1487:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1495:6:9",
														"nodeType": "YulTypedName",
														"src": "1495:6:9",
														"type": ""
													}
												],
												"src": "1377:691:9"
											},
											{
												"body": {
													"nativeSrc": "2139:53:9",
													"nodeType": "YulBlock",
													"src": "2139:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2156:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2179:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2179:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2161:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2161:17:9"
																		},
																		"nativeSrc": "2161:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2149:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:9"
																},
																"nativeSrc": "2149:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2149:37:9"
															},
															"nativeSrc": "2149:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2149:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2074:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:9",
														"nodeType": "YulTypedName",
														"src": "2127:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2134:3:9",
														"nodeType": "YulTypedName",
														"src": "2134:3:9",
														"type": ""
													}
												],
												"src": "2074:118:9"
											},
											{
												"body": {
													"nativeSrc": "2296:124:9",
													"nodeType": "YulBlock",
													"src": "2296:124:9",
													"statements": [
														{
															"nativeSrc": "2306:26:9",
															"nodeType": "YulAssignment",
															"src": "2306:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2318:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2318:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2329:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2314:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2314:3:9"
																},
																"nativeSrc": "2314:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2314:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2306:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2386:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2386:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2399:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2410:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2410:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2395:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:9"
																		},
																		"nativeSrc": "2395:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2342:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2342:43:9"
																},
																"nativeSrc": "2342:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2342:71:9"
															},
															"nativeSrc": "2342:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2342:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2198:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2268:9:9",
														"nodeType": "YulTypedName",
														"src": "2268:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2280:6:9",
														"nodeType": "YulTypedName",
														"src": "2280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2291:4:9",
														"nodeType": "YulTypedName",
														"src": "2291:4:9",
														"type": ""
													}
												],
												"src": "2198:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$315(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$315(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$315(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$315_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$315(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$315t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$315_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611e7d380380611e7d83398181016040528101906100319190610272565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102d1565b60405180910390fd5b6100b18161010f60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160038190555080600881905550806009819055505050506102ea565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101fd826101d4565b9050919050565b5f61020e826101f3565b9050919050565b61021e81610204565b8114610228575f80fd5b50565b5f8151905061023981610215565b92915050565b5f819050919050565b6102518161023f565b811461025b575f80fd5b50565b5f8151905061026c81610248565b92915050565b5f805f60608486031215610289576102886101d0565b5b5f6102968682870161022b565b93505060206102a78682870161025e565b92505060406102b88682870161025e565b9150509250925092565b6102cb816101f3565b82525050565b5f6020820190506102e45f8301846102c2565b92915050565b611b86806102f75f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063a85adeab1161007a578063a85adeab1461037f578063ca1d209d1461039d578063e2bbb158146103b9578063e4c75c27146103d5578063e6fd48bc14610405578063f2fde38b1461042357610156565b8063715018a6146102ba578063785e9e86146102c45780638da5cb5b146102e25780638f10369a1461030057806393f1a40b1461031e578063a23831061461034f57610156565b8063441a3e7011610113578063441a3e701461022257806351eb05a61461023e5780635312ea8e1461025a5780635c76ca2d14610276578063630b5ba11461029457806364482f791461029e57610156565b8063081e3eda1461015a5780630e15561a146101785780631526fe271461019657806317caf6f1146101ca5780631eaaa045146101e85780633f90916a14610204575b5f80fd5b61016261043f565b60405161016f9190611494565b60405180910390f35b61018061044b565b60405161018d9190611494565b60405180910390f35b6101b060048036038101906101ab91906114db565b610451565b6040516101c1959493929190611580565b60405180910390f35b6101d26104b1565b6040516101df9190611494565b60405180910390f35b61020260048036038101906101fd9190611652565b6104b7565b005b61020c6105d1565b6040516102199190611494565b60405180910390f35b61023c600480360381019061023791906116a2565b610628565b005b610258600480360381019061025391906114db565b610838565b005b610274600480360381019061026f91906114db565b610932565b005b61027e610a77565b60405161028b9190611494565b60405180910390f35b61029c610a7d565b005b6102b860048036038101906102b391906116e0565b610aa8565b005b6102c2610b2e565b005b6102cc610b41565b6040516102d99190611730565b60405180910390f35b6102ea610b66565b6040516102f79190611758565b60405180910390f35b610308610b8d565b6040516103159190611494565b60405180910390f35b6103386004803603810190610333919061179b565b610b93565b6040516103469291906117d9565b60405180910390f35b6103696004803603810190610364919061179b565b610bbe565b6040516103769190611494565b60405180910390f35b610387610c1b565b6040516103949190611494565b60405180910390f35b6103b760048036038101906103b291906114db565b610c21565b005b6103d360048036038101906103ce91906116a2565b610cef565b005b6103ef60048036038101906103ea919061179b565b610ec7565b6040516103fc9190611494565b60405180910390f35b61040d61104e565b60405161041a9190611494565b60405180910390f35b61043d60048036038101906104389190611800565b611054565b005b5f600580549050905090565b60045481565b60058181548110610460575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b60075481565b6104bf6110d8565b80156104ce576104cd610a7d565b5b5f60085442116104e0576008546104e2565b425b9050836007546104f29190611858565b60078190555060056040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f81526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040155505050505050565b5f60085442116105e3575f9050610625565b5f60095442106105f5576009546105f7565b425b90506002546008548261060a919061188b565b60035461061791906118be565b610621919061188b565b9150505b90565b5f6005838154811061063d5761063c6118ff565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906119ac565b60405180910390fd5b6106e984610838565b5f81600101546ec097ce7bc90715b34b9f10000000008460030154845f015461071291906118be565b61071c91906119f7565b610726919061188b565b9050610732338261115f565b83825f0154610741919061188b565b825f01819055506ec097ce7bc90715b34b9f10000000008360030154835f015461076b91906118be565b61077591906119f7565b82600101819055506107ca3385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112189092919063ffffffff16565b8383600401546107da919061188b565b8360040181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516108299190611494565b60405180910390a35050505050565b5f6005828154811061084d5761084c6118ff565b5b905f5260205f20906005020190505f600954421061086d5760095461086f565b425b90508160020154811161088357505061092f565b5f826004015490505f81036108a35781836002018190555050505061092f565b5f8360020154836108b4919061188b565b90505f6007548560010154600354846108cd91906118be565b6108d791906118be565b6108e1919061188b565b9050826ec097ce7bc90715b34b9f1000000000826108ff91906118be565b61090991906119f7565b85600301546109189190611858565b856003018190555042856002018190555050505050505b50565b5f60058281548110610947576109466118ff565b5b905f5260205f20906005020190505f60065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109f433825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112189092919063ffffffff16565b805f01548260040154610a07919061188b565b8260040181905550823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610a599190611494565b60405180910390a35f815f01819055505f8160010181905550505050565b60025481565b5f60058054905090505f5b81811015610aa457610a9981610838565b806001019050610a88565b5050565b610ab06110d8565b8015610abf57610abe610a7d565b5b8160058481548110610ad457610ad36118ff565b5b905f5260205f20906005020160010154600754610af1919061188b565b610afb9190611858565b6007819055508160058481548110610b1657610b156118ff565b5b905f5260205f20906005020160010181905550505050565b610b366110d8565b610b3f5f611297565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6006602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f8060065f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015491505092915050565b60095481565b6009544210610c65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c90611a97565b60405180910390fd5b610cb333308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611358909392919063ffffffff16565b60035481610cc191906119f7565b60095f828254610cd19190611858565b9250508190555080600454610ce69190611858565b60048190555050565b5f60058381548110610d0457610d036118ff565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610d6a84610838565b5f815f01541115610dc0575f81600101546ec097ce7bc90715b34b9f10000000008460030154845f0154610d9e91906118be565b610da891906119f7565b610db2919061188b565b9050610dbe338261115f565b505b610e0f333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611358909392919063ffffffff16565b828260040154610e1f9190611858565b826004018190555082815f0154610e369190611858565b815f01819055506ec097ce7bc90715b34b9f10000000008260030154825f0154610e6091906118be565b610e6a91906119f7565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610eb99190611494565b60405180910390a350505050565b5f8060058481548110610edd57610edc6118ff565b5b905f5260205f20906005020190505f60065f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f83600401549050836002015442118015610f5d57505f8114155b1561100a575f6009544210610f7457600954610f76565b425b90505f600954866002015410610f8e57600954610f94565b85600201545b90505f8183610fa3919061188b565b90505f600754886001015460035484610fbc91906118be565b610fc691906118be565b610fd091906119f7565b9050846ec097ce7bc90715b34b9f100000000082610fee91906118be565b610ff891906119f7565b866110039190611858565b9550505050505b82600101546ec097ce7bc90715b34b9f100000000083855f015461102e91906118be565b61103891906119f7565b611042919061188b565b94505050505092915050565b60085481565b61105c6110d8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110c39190611758565b60405180910390fd5b6110d581611297565b50565b6110e06113da565b73ffffffffffffffffffffffffffffffffffffffff166110fe610b66565b73ffffffffffffffffffffffffffffffffffffffff161461115d576111216113da565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111549190611758565b60405180910390fd5b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016111bb929190611ab5565b6020604051808303815f875af11580156111d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111fb9190611af0565b508060025f82825461120d9190611858565b925050819055505050565b611292838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161124b929190611ab5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e1565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113d4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161138d93929190611b1b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e1565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611400576040513d5f823e3d81fd5b3d92505f519150505f8214611419576001811415611434565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561147657836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161146d9190611758565b60405180910390fd5b50505050565b5f819050919050565b61148e8161147c565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f80fd5b6114ba8161147c565b81146114c4575f80fd5b50565b5f813590506114d5816114b1565b92915050565b5f602082840312156114f0576114ef6114ad565b5b5f6114fd848285016114c7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61154861154361153e84611506565b611525565b611506565b9050919050565b5f6115598261152e565b9050919050565b5f61156a8261154f565b9050919050565b61157a81611560565b82525050565b5f60a0820190506115935f830188611571565b6115a06020830187611485565b6115ad6040830186611485565b6115ba6060830185611485565b6115c76080830184611485565b9695505050505050565b5f6115db82611506565b9050919050565b5f6115ec826115d1565b9050919050565b6115fc816115e2565b8114611606575f80fd5b50565b5f81359050611617816115f3565b92915050565b5f8115159050919050565b6116318161161d565b811461163b575f80fd5b50565b5f8135905061164c81611628565b92915050565b5f805f60608486031215611669576116686114ad565b5b5f611676868287016114c7565b935050602061168786828701611609565b92505060406116988682870161163e565b9150509250925092565b5f80604083850312156116b8576116b76114ad565b5b5f6116c5858286016114c7565b92505060206116d6858286016114c7565b9150509250929050565b5f805f606084860312156116f7576116f66114ad565b5b5f611704868287016114c7565b9350506020611715868287016114c7565b92505060406117268682870161163e565b9150509250925092565b5f6020820190506117435f830184611571565b92915050565b611752816115d1565b82525050565b5f60208201905061176b5f830184611749565b92915050565b61177a816115d1565b8114611784575f80fd5b50565b5f8135905061179581611771565b92915050565b5f80604083850312156117b1576117b06114ad565b5b5f6117be858286016114c7565b92505060206117cf85828601611787565b9150509250929050565b5f6040820190506117ec5f830185611485565b6117f96020830184611485565b9392505050565b5f60208284031215611815576118146114ad565b5b5f61182284828501611787565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118628261147c565b915061186d8361147c565b92508282019050808211156118855761188461182b565b5b92915050565b5f6118958261147c565b91506118a08361147c565b92508282039050818111156118b8576118b761182b565b5b92915050565b5f6118c88261147c565b91506118d38361147c565b92508282026118e18161147c565b915082820484148315176118f8576118f761182b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f77697468647261773a2063616e2774207769746864726177206d6f72652074685f8201527f616e206465706f73697400000000000000000000000000000000000000000000602082015250565b5f611996602a8361192c565b91506119a18261193c565b604082019050919050565b5f6020820190508181035f8301526119c38161198a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a018261147c565b9150611a0c8361147c565b925082611a1c57611a1b6119ca565b5b828204905092915050565b7f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f735f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a8160228361192c565b9150611a8c82611a27565b604082019050919050565b5f6020820190508181035f830152611aae81611a75565b9050919050565b5f604082019050611ac85f830185611749565b611ad56020830184611485565b9392505050565b5f81519050611aea81611628565b92915050565b5f60208284031215611b0557611b046114ad565b5b5f611b1284828501611adc565b91505092915050565b5f606082019050611b2e5f830186611749565b611b3b6020830185611749565b611b486040830184611485565b94935050505056fea2646970667358221220e1286ad8acaa8181c3a24a1fd0bf8ec88e12eff3c1aa592115317d5c36a2a23564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E7D CODESIZE SUB DUP1 PUSH2 0x1E7D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x272 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x10F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x2EA JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD DUP3 PUSH2 0x1D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20E DUP3 PUSH2 0x1F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x204 JUMP JUMPDEST DUP2 EQ PUSH2 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x239 DUP2 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x251 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP2 EQ PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26C DUP2 PUSH2 0x248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x289 JUMPI PUSH2 0x288 PUSH2 0x1D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x296 DUP7 DUP3 DUP8 ADD PUSH2 0x22B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A7 DUP7 DUP3 DUP8 ADD PUSH2 0x25E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B8 DUP7 DUP3 DUP8 ADD PUSH2 0x25E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B86 DUP1 PUSH2 0x2F7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA85ADEAB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x423 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x34F JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x29E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xA7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xB2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP3 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH2 0x1054 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x10D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0xA7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x7 SLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x5E3 JUMPI PUSH0 SWAP1 POP PUSH2 0x625 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x5F5 JUMPI PUSH1 0x9 SLOAD PUSH2 0x5F7 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D7 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP5 PUSH2 0x838 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH2 0x732 CALLER DUP3 PUSH2 0x115F JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7CA CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1218 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x86D JUMPI PUSH1 0x9 SLOAD PUSH2 0x86F JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x883 JUMPI POP POP PUSH2 0x92F JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x8A3 JUMPI DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x92F JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP6 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x946 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x9F4 CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1218 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA4 JUMPI PUSH2 0xA99 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x10D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA7D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAD4 JUMPI PUSH2 0xAD3 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xB3F PUSH0 PUSH2 0x1297 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5C SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB3 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 SLOAD PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xD6A DUP5 PUSH2 0x838 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xDC0 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH2 0xDBE CALLER DUP3 PUSH2 0x115F JUMP JUMPDEST POP JUMPDEST PUSH2 0xE0F CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD SLOAD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDC PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xF5D JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x100A JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xF74 JUMPI PUSH1 0x9 SLOAD PUSH2 0xF76 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP7 PUSH1 0x2 ADD SLOAD LT PUSH2 0xF8E JUMPI PUSH1 0x9 SLOAD PUSH2 0xF94 JUMP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP9 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP DUP5 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFF8 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP7 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP6 POP POP POP POP POP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1042 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x10D8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D5 DUP2 PUSH2 0x1297 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E0 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FE PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115D JUMPI PUSH2 0x1121 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP3 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1292 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x124B SWAP3 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x138D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1419 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1476 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x147C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x147C JUMP JUMPDEST DUP2 EQ PUSH2 0x14C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D5 DUP2 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F0 JUMPI PUSH2 0x14EF PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FD DUP5 DUP3 DUP6 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1543 PUSH2 0x153E DUP5 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1559 DUP3 PUSH2 0x152E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x156A DUP3 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1593 PUSH0 DUP4 ADD DUP9 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x15A0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15AD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15BA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15C7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15DB DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EC DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1617 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x161D JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164C DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1687 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1698 DUP7 DUP3 DUP8 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F7 JUMPI PUSH2 0x16F6 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1704 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1715 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1726 DUP7 DUP3 DUP8 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1743 PUSH0 DUP4 ADD DUP5 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1752 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176B PUSH0 DUP4 ADD DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1784 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1795 DUP2 PUSH2 0x1771 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17B0 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BE DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17CF DUP6 DUP3 DUP7 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17EC PUSH0 DUP4 ADD DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x17F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1822 DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1862 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x186D DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1885 JUMPI PUSH2 0x1884 PUSH2 0x182B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x182B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C8 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x18D3 DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18E1 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18F8 JUMPI PUSH2 0x18F7 PUSH2 0x182B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E206465706F73697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1996 PUSH1 0x2A DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x19A1 DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C3 DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A01 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A1C JUMPI PUSH2 0x1A1B PUSH2 0x19CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 PUSH1 0x22 DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP3 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AAE DUP2 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AC8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AEA DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B05 JUMPI PUSH2 0x1B04 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B12 DUP5 DUP3 DUP6 ADD PUSH2 0x1ADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH0 DUP4 ADD DUP7 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1B3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1B48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x28 PUSH11 0xD8ACAA8181C3A24A1FD0BF DUP15 0xC8 DUP15 SLT 0xEF RETURN 0xC1 0xAA MSIZE 0x21 ISZERO BALANCE PUSH30 0x5C36A2A23564736F6C634300081A00330000000000000000000000000000 ",
							"sourceMap": "478:9366:8:-:0;;;2907:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2993:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3026:6:8::1;3018:5;;:14;;;;;;;;;;;;;;;;;;3061:16;3043:15;:34;;;;3105:15;3088:14;:32;;;;3146:15;3131:12;:30;;;;2907:262:::0;;;478:9366;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:143::-;1285:5;1316:6;1310:13;1301:22;;1332:33;1359:5;1332:33;:::i;:::-;1228:143;;;;:::o;1377:691::-;1479:6;1487;1495;1544:2;1532:9;1523:7;1519:23;1515:32;1512:119;;;1550:79;;:::i;:::-;1512:119;1670:1;1695:78;1765:7;1756:6;1745:9;1741:22;1695:78;:::i;:::-;1685:88;;1641:142;1822:2;1848:64;1904:7;1895:6;1884:9;1880:22;1848:64;:::i;:::-;1838:74;;1793:129;1961:2;1987:64;2043:7;2034:6;2023:9;2019:22;1987:64;:::i;:::-;1977:74;;1932:129;1377:691;;;;;:::o;2074:118::-;2161:24;2179:5;2161:24;:::i;:::-;2156:3;2149:37;2074:118;;:::o;2198:222::-;2291:4;2329:2;2318:9;2314:18;2306:26;;2342:71;2410:1;2399:9;2395:17;2386:6;2342:71;:::i;:::-;2198:222;;;;:::o;478:9366:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_682": {
									"entryPoint": 5089,
									"id": 682,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4312,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_736": {
									"entryPoint": 5082,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4759,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_973": {
									"entryPoint": 1207,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@deposit_1391": {
									"entryPoint": 3311,
									"id": 1391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposited_1031": {
									"entryPoint": 3006,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_1564": {
									"entryPoint": 2354,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@endTimestamp_820": {
									"entryPoint": 3099,
									"id": 820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Transfer_1583": {
									"entryPoint": 4447,
									"id": 1583,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@erc20_797": {
									"entryPoint": 2881,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fund_925": {
									"entryPoint": 3105,
									"id": 925,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1197": {
									"entryPoint": 2685,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2918,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paidOut_799": {
									"entryPoint": 2679,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pending_1138": {
									"entryPoint": 3783,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_807": {
									"entryPoint": 1105,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_884": {
									"entryPoint": 1087,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2862,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerSecond_801": {
									"entryPoint": 2957,
									"id": 801,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 4952,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 4632,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@set_1009": {
									"entryPoint": 2728,
									"id": 1009,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startTimestamp_818": {
									"entryPoint": 4174,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocPoint_816": {
									"entryPoint": 1201,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPending_1172": {
									"entryPoint": 1489,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_803": {
									"entryPoint": 1099,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4180,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1283": {
									"entryPoint": 2104,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_814": {
									"entryPoint": 2963,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1497": {
									"entryPoint": 1576,
									"id": 1497,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$315": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$315t_bool": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 5489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5504,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$315": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6399,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$315": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12618:9",
										"nodeType": "YulBlock",
										"src": "0:12618:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:9",
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nativeSrc": "62:16:9",
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:9",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nativeSrc": "155:53:9",
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nativeSrc": "177:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nativeSrc": "165:37:9",
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nativeSrc": "165:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:9",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:9",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nativeSrc": "312:124:9",
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nativeSrc": "322:26:9",
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:9",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nativeSrc": "330:18:9",
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:9",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nativeSrc": "411:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nativeSrc": "358:71:9",
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nativeSrc": "358:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:9",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:9",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:9",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nativeSrc": "482:35:9",
													"nodeType": "YulBlock",
													"src": "482:35:9",
													"statements": [
														{
															"nativeSrc": "492:19:9",
															"nodeType": "YulAssignment",
															"src": "492:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:9",
																		"nodeType": "YulLiteral",
																		"src": "508:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:9"
																},
																"nativeSrc": "502:9:9",
																"nodeType": "YulFunctionCall",
																"src": "502:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:9",
														"nodeType": "YulTypedName",
														"src": "475:6:9",
														"type": ""
													}
												],
												"src": "442:75:9"
											},
											{
												"body": {
													"nativeSrc": "612:28:9",
													"nodeType": "YulBlock",
													"src": "612:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:9",
																		"nodeType": "YulLiteral",
																		"src": "629:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:9",
																		"nodeType": "YulLiteral",
																		"src": "632:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:9"
																},
																"nativeSrc": "622:12:9",
																"nodeType": "YulFunctionCall",
																"src": "622:12:9"
															},
															"nativeSrc": "622:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:9"
											},
											{
												"body": {
													"nativeSrc": "735:28:9",
													"nodeType": "YulBlock",
													"src": "735:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:9",
																		"nodeType": "YulLiteral",
																		"src": "752:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:9",
																		"nodeType": "YulLiteral",
																		"src": "755:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:9"
																},
																"nativeSrc": "745:12:9",
																"nodeType": "YulFunctionCall",
																"src": "745:12:9"
															},
															"nativeSrc": "745:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:9"
											},
											{
												"body": {
													"nativeSrc": "812:79:9",
													"nodeType": "YulBlock",
													"src": "812:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:9",
																"nodeType": "YulBlock",
																"src": "869:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:9",
																					"nodeType": "YulLiteral",
																					"src": "878:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:9",
																					"nodeType": "YulLiteral",
																					"src": "881:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:9"
																			},
																			"nativeSrc": "871:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:9"
																		},
																		"nativeSrc": "871:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:9"
																				},
																				"nativeSrc": "842:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:9"
																		},
																		"nativeSrc": "832:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:9"
																},
																"nativeSrc": "825:43:9",
																"nodeType": "YulFunctionCall",
																"src": "825:43:9"
															},
															"nativeSrc": "822:63:9",
															"nodeType": "YulIf",
															"src": "822:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:9",
														"nodeType": "YulTypedName",
														"src": "805:5:9",
														"type": ""
													}
												],
												"src": "769:122:9"
											},
											{
												"body": {
													"nativeSrc": "949:87:9",
													"nodeType": "YulBlock",
													"src": "949:87:9",
													"statements": [
														{
															"nativeSrc": "959:29:9",
															"nodeType": "YulAssignment",
															"src": "959:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:9"
																},
																"nativeSrc": "968:20:9",
																"nodeType": "YulFunctionCall",
																"src": "968:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:9"
																},
																"nativeSrc": "997:33:9",
																"nodeType": "YulFunctionCall",
																"src": "997:33:9"
															},
															"nativeSrc": "997:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:9",
														"nodeType": "YulTypedName",
														"src": "927:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:9",
														"nodeType": "YulTypedName",
														"src": "935:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:9",
														"nodeType": "YulTypedName",
														"src": "943:5:9",
														"type": ""
													}
												],
												"src": "897:139:9"
											},
											{
												"body": {
													"nativeSrc": "1108:263:9",
													"nodeType": "YulBlock",
													"src": "1108:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:9",
																"nodeType": "YulBlock",
																"src": "1154:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:9"
																			},
																			"nativeSrc": "1156:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:9"
																		},
																		"nativeSrc": "1156:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:9"
																		},
																		"nativeSrc": "1125:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:9"
																},
																"nativeSrc": "1121:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:9"
															},
															"nativeSrc": "1118:119:9",
															"nodeType": "YulIf",
															"src": "1118:119:9"
														},
														{
															"nativeSrc": "1247:117:9",
															"nodeType": "YulBlock",
															"src": "1247:117:9",
															"statements": [
																{
																	"nativeSrc": "1262:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:9"
																				},
																				"nativeSrc": "1322:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:9"
																		},
																		"nativeSrc": "1301:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:9",
														"nodeType": "YulTypedName",
														"src": "1078:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:9",
														"nodeType": "YulTypedName",
														"src": "1089:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:9",
														"nodeType": "YulTypedName",
														"src": "1101:6:9",
														"type": ""
													}
												],
												"src": "1042:329:9"
											},
											{
												"body": {
													"nativeSrc": "1422:81:9",
													"nodeType": "YulBlock",
													"src": "1422:81:9",
													"statements": [
														{
															"nativeSrc": "1432:65:9",
															"nodeType": "YulAssignment",
															"src": "1432:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:9"
																},
																"nativeSrc": "1443:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:9",
														"nodeType": "YulTypedName",
														"src": "1404:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:9",
														"nodeType": "YulTypedName",
														"src": "1414:7:9",
														"type": ""
													}
												],
												"src": "1377:126:9"
											},
											{
												"body": {
													"nativeSrc": "1541:28:9",
													"nodeType": "YulBlock",
													"src": "1541:28:9",
													"statements": [
														{
															"nativeSrc": "1551:12:9",
															"nodeType": "YulAssignment",
															"src": "1551:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:9",
																"nodeType": "YulIdentifier",
																"src": "1558:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:9",
														"nodeType": "YulTypedName",
														"src": "1527:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:9",
														"nodeType": "YulTypedName",
														"src": "1537:3:9",
														"type": ""
													}
												],
												"src": "1509:60:9"
											},
											{
												"body": {
													"nativeSrc": "1635:82:9",
													"nodeType": "YulBlock",
													"src": "1635:82:9",
													"statements": [
														{
															"nativeSrc": "1645:66:9",
															"nodeType": "YulAssignment",
															"src": "1645:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:9"
																				},
																				"nativeSrc": "1685:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:9"
																		},
																		"nativeSrc": "1676:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:9"
																},
																"nativeSrc": "1658:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:9",
														"nodeType": "YulTypedName",
														"src": "1615:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:9",
														"nodeType": "YulTypedName",
														"src": "1625:9:9",
														"type": ""
													}
												],
												"src": "1575:142:9"
											},
											{
												"body": {
													"nativeSrc": "1783:66:9",
													"nodeType": "YulBlock",
													"src": "1783:66:9",
													"statements": [
														{
															"nativeSrc": "1793:50:9",
															"nodeType": "YulAssignment",
															"src": "1793:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:9"
																},
																"nativeSrc": "1806:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:9",
														"nodeType": "YulTypedName",
														"src": "1763:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:9",
														"nodeType": "YulTypedName",
														"src": "1773:9:9",
														"type": ""
													}
												],
												"src": "1723:126:9"
											},
											{
												"body": {
													"nativeSrc": "1929:66:9",
													"nodeType": "YulBlock",
													"src": "1929:66:9",
													"statements": [
														{
															"nativeSrc": "1939:50:9",
															"nodeType": "YulAssignment",
															"src": "1939:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1983:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1952:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:9"
																},
																"nativeSrc": "1952:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1952:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1939:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "1855:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1909:5:9",
														"nodeType": "YulTypedName",
														"src": "1909:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1919:9:9",
														"nodeType": "YulTypedName",
														"src": "1919:9:9",
														"type": ""
													}
												],
												"src": "1855:140:9"
											},
											{
												"body": {
													"nativeSrc": "2080:80:9",
													"nodeType": "YulBlock",
													"src": "2080:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2147:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "2102:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:9"
																		},
																		"nativeSrc": "2102:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:9"
																},
																"nativeSrc": "2090:64:9",
																"nodeType": "YulFunctionCall",
																"src": "2090:64:9"
															},
															"nativeSrc": "2090:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "2001:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2068:5:9",
														"nodeType": "YulTypedName",
														"src": "2068:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2075:3:9",
														"nodeType": "YulTypedName",
														"src": "2075:3:9",
														"type": ""
													}
												],
												"src": "2001:159:9"
											},
											{
												"body": {
													"nativeSrc": "2390:468:9",
													"nodeType": "YulBlock",
													"src": "2390:468:9",
													"statements": [
														{
															"nativeSrc": "2400:27:9",
															"nodeType": "YulAssignment",
															"src": "2400:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2412:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2423:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2408:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:9"
																},
																"nativeSrc": "2408:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2408:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2400:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2495:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2495:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2508:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2508:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2519:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2519:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:9"
																		},
																		"nativeSrc": "2504:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2504:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "2437:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:57:9"
																},
																"nativeSrc": "2437:85:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:85:9"
															},
															"nativeSrc": "2437:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "2437:85:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2576:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2589:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2589:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2600:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2600:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2585:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:9"
																		},
																		"nativeSrc": "2585:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2585:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2532:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2532:43:9"
																},
																"nativeSrc": "2532:72:9",
																"nodeType": "YulFunctionCall",
																"src": "2532:72:9"
															},
															"nativeSrc": "2532:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "2532:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2671:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2671:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2682:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2682:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2667:3:9"
																		},
																		"nativeSrc": "2667:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2667:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2614:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2614:43:9"
																},
																"nativeSrc": "2614:72:9",
																"nodeType": "YulFunctionCall",
																"src": "2614:72:9"
															},
															"nativeSrc": "2614:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "2614:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2740:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2740:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2753:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2764:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2764:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2749:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2749:3:9"
																		},
																		"nativeSrc": "2749:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2749:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2696:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2696:43:9"
																},
																"nativeSrc": "2696:72:9",
																"nodeType": "YulFunctionCall",
																"src": "2696:72:9"
															},
															"nativeSrc": "2696:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "2696:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "2822:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2835:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2835:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2846:3:9",
																				"nodeType": "YulLiteral",
																				"src": "2846:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2831:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:9"
																		},
																		"nativeSrc": "2831:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2778:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2778:43:9"
																},
																"nativeSrc": "2778:73:9",
																"nodeType": "YulFunctionCall",
																"src": "2778:73:9"
															},
															"nativeSrc": "2778:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "2778:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2166:692:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2330:9:9",
														"nodeType": "YulTypedName",
														"src": "2330:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2342:6:9",
														"nodeType": "YulTypedName",
														"src": "2342:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2350:6:9",
														"nodeType": "YulTypedName",
														"src": "2350:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2358:6:9",
														"nodeType": "YulTypedName",
														"src": "2358:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2366:6:9",
														"nodeType": "YulTypedName",
														"src": "2366:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2374:6:9",
														"nodeType": "YulTypedName",
														"src": "2374:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2385:4:9",
														"nodeType": "YulTypedName",
														"src": "2385:4:9",
														"type": ""
													}
												],
												"src": "2166:692:9"
											},
											{
												"body": {
													"nativeSrc": "2909:51:9",
													"nodeType": "YulBlock",
													"src": "2909:51:9",
													"statements": [
														{
															"nativeSrc": "2919:35:9",
															"nodeType": "YulAssignment",
															"src": "2919:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2948:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2948:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2930:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2930:17:9"
																},
																"nativeSrc": "2930:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2930:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2919:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2919:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2864:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2891:5:9",
														"nodeType": "YulTypedName",
														"src": "2891:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2901:7:9",
														"nodeType": "YulTypedName",
														"src": "2901:7:9",
														"type": ""
													}
												],
												"src": "2864:96:9"
											},
											{
												"body": {
													"nativeSrc": "3025:51:9",
													"nodeType": "YulBlock",
													"src": "3025:51:9",
													"statements": [
														{
															"nativeSrc": "3035:35:9",
															"nodeType": "YulAssignment",
															"src": "3035:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3064:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "3046:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3046:17:9"
																},
																"nativeSrc": "3046:24:9",
																"nodeType": "YulFunctionCall",
																"src": "3046:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3035:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3035:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$315",
												"nativeSrc": "2966:110:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3007:5:9",
														"nodeType": "YulTypedName",
														"src": "3007:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3017:7:9",
														"nodeType": "YulTypedName",
														"src": "3017:7:9",
														"type": ""
													}
												],
												"src": "2966:110:9"
											},
											{
												"body": {
													"nativeSrc": "3139:93:9",
													"nodeType": "YulBlock",
													"src": "3139:93:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3210:16:9",
																"nodeType": "YulBlock",
																"src": "3210:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3222:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3222:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3212:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:9"
																			},
																			"nativeSrc": "3212:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:12:9"
																		},
																		"nativeSrc": "3212:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3162:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3162:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3201:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3201:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$315",
																					"nativeSrc": "3169:31:9",
																					"nodeType": "YulIdentifier",
																					"src": "3169:31:9"
																				},
																				"nativeSrc": "3169:38:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3169:38:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3159:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3159:2:9"
																		},
																		"nativeSrc": "3159:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3159:49:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3152:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:9"
																},
																"nativeSrc": "3152:57:9",
																"nodeType": "YulFunctionCall",
																"src": "3152:57:9"
															},
															"nativeSrc": "3149:77:9",
															"nodeType": "YulIf",
															"src": "3149:77:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$315",
												"nativeSrc": "3082:150:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3132:5:9",
														"nodeType": "YulTypedName",
														"src": "3132:5:9",
														"type": ""
													}
												],
												"src": "3082:150:9"
											},
											{
												"body": {
													"nativeSrc": "3304:101:9",
													"nodeType": "YulBlock",
													"src": "3304:101:9",
													"statements": [
														{
															"nativeSrc": "3314:29:9",
															"nodeType": "YulAssignment",
															"src": "3314:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3336:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3336:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3323:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3323:12:9"
																},
																"nativeSrc": "3323:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3323:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3314:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3314:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3393:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3393:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$315",
																	"nativeSrc": "3352:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "3352:40:9"
																},
																"nativeSrc": "3352:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3352:47:9"
															},
															"nativeSrc": "3352:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3352:47:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$315",
												"nativeSrc": "3238:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3282:6:9",
														"nodeType": "YulTypedName",
														"src": "3282:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3290:3:9",
														"nodeType": "YulTypedName",
														"src": "3290:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3298:5:9",
														"nodeType": "YulTypedName",
														"src": "3298:5:9",
														"type": ""
													}
												],
												"src": "3238:167:9"
											},
											{
												"body": {
													"nativeSrc": "3453:48:9",
													"nodeType": "YulBlock",
													"src": "3453:48:9",
													"statements": [
														{
															"nativeSrc": "3463:32:9",
															"nodeType": "YulAssignment",
															"src": "3463:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3488:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3488:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3481:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3481:6:9"
																		},
																		"nativeSrc": "3481:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3474:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:9"
																},
																"nativeSrc": "3474:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3474:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3463:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3463:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3411:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3435:5:9",
														"nodeType": "YulTypedName",
														"src": "3435:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3445:7:9",
														"nodeType": "YulTypedName",
														"src": "3445:7:9",
														"type": ""
													}
												],
												"src": "3411:90:9"
											},
											{
												"body": {
													"nativeSrc": "3547:76:9",
													"nodeType": "YulBlock",
													"src": "3547:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3601:16:9",
																"nodeType": "YulBlock",
																"src": "3601:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3613:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3613:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3603:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:9"
																			},
																			"nativeSrc": "3603:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3603:12:9"
																		},
																		"nativeSrc": "3603:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3603:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3570:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3570:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3592:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3592:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3577:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "3577:14:9"
																				},
																				"nativeSrc": "3577:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3577:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3567:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3567:2:9"
																		},
																		"nativeSrc": "3567:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3567:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3560:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3560:6:9"
																},
																"nativeSrc": "3560:40:9",
																"nodeType": "YulFunctionCall",
																"src": "3560:40:9"
															},
															"nativeSrc": "3557:60:9",
															"nodeType": "YulIf",
															"src": "3557:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3507:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3540:5:9",
														"nodeType": "YulTypedName",
														"src": "3540:5:9",
														"type": ""
													}
												],
												"src": "3507:116:9"
											},
											{
												"body": {
													"nativeSrc": "3678:84:9",
													"nodeType": "YulBlock",
													"src": "3678:84:9",
													"statements": [
														{
															"nativeSrc": "3688:29:9",
															"nodeType": "YulAssignment",
															"src": "3688:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3710:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3697:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:9"
																},
																"nativeSrc": "3697:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3697:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3688:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3750:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3750:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3726:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "3726:23:9"
																},
																"nativeSrc": "3726:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3726:30:9"
															},
															"nativeSrc": "3726:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3726:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3629:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3656:6:9",
														"nodeType": "YulTypedName",
														"src": "3656:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3664:3:9",
														"nodeType": "YulTypedName",
														"src": "3664:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3672:5:9",
														"nodeType": "YulTypedName",
														"src": "3672:5:9",
														"type": ""
													}
												],
												"src": "3629:133:9"
											},
											{
												"body": {
													"nativeSrc": "3879:530:9",
													"nodeType": "YulBlock",
													"src": "3879:530:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3925:83:9",
																"nodeType": "YulBlock",
																"src": "3925:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3927:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3927:77:9"
																			},
																			"nativeSrc": "3927:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3927:79:9"
																		},
																		"nativeSrc": "3927:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3927:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3900:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3909:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3909:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3896:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:9"
																		},
																		"nativeSrc": "3896:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3896:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3921:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3892:3:9"
																},
																"nativeSrc": "3892:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3892:32:9"
															},
															"nativeSrc": "3889:119:9",
															"nodeType": "YulIf",
															"src": "3889:119:9"
														},
														{
															"nativeSrc": "4018:117:9",
															"nodeType": "YulBlock",
															"src": "4018:117:9",
															"statements": [
																{
																	"nativeSrc": "4033:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4033:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4047:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4047:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4037:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4037:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4062:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4062:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4097:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4097:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4108:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4108:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4093:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4093:3:9"
																				},
																				"nativeSrc": "4093:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4093:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4117:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4117:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4072:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4072:20:9"
																		},
																		"nativeSrc": "4072:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4062:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4062:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4145:132:9",
															"nodeType": "YulBlock",
															"src": "4145:132:9",
															"statements": [
																{
																	"nativeSrc": "4160:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4160:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4174:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4164:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4164:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4190:77:9",
																	"nodeType": "YulAssignment",
																	"src": "4190:77:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4239:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4239:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4250:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4250:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4235:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:9"
																				},
																				"nativeSrc": "4235:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4235:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4259:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4259:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$315",
																			"nativeSrc": "4200:34:9",
																			"nodeType": "YulIdentifier",
																			"src": "4200:34:9"
																		},
																		"nativeSrc": "4200:67:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:67:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4190:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4190:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4287:115:9",
															"nodeType": "YulBlock",
															"src": "4287:115:9",
															"statements": [
																{
																	"nativeSrc": "4302:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4302:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4316:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4306:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4306:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4332:60:9",
																	"nodeType": "YulAssignment",
																	"src": "4332:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4364:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4364:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4375:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4375:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4360:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4360:3:9"
																				},
																				"nativeSrc": "4360:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4360:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4384:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4384:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4342:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4342:17:9"
																		},
																		"nativeSrc": "4342:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4342:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4332:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4332:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$315t_bool",
												"nativeSrc": "3768:641:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3833:9:9",
														"nodeType": "YulTypedName",
														"src": "3833:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3844:7:9",
														"nodeType": "YulTypedName",
														"src": "3844:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3856:6:9",
														"nodeType": "YulTypedName",
														"src": "3856:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3864:6:9",
														"nodeType": "YulTypedName",
														"src": "3864:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3872:6:9",
														"nodeType": "YulTypedName",
														"src": "3872:6:9",
														"type": ""
													}
												],
												"src": "3768:641:9"
											},
											{
												"body": {
													"nativeSrc": "4498:391:9",
													"nodeType": "YulBlock",
													"src": "4498:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4544:83:9",
																"nodeType": "YulBlock",
																"src": "4544:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4546:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4546:77:9"
																			},
																			"nativeSrc": "4546:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4546:79:9"
																		},
																		"nativeSrc": "4546:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4546:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4519:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4519:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4515:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4515:3:9"
																		},
																		"nativeSrc": "4515:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4515:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4540:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4540:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:9"
																},
																"nativeSrc": "4511:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4511:32:9"
															},
															"nativeSrc": "4508:119:9",
															"nodeType": "YulIf",
															"src": "4508:119:9"
														},
														{
															"nativeSrc": "4637:117:9",
															"nodeType": "YulBlock",
															"src": "4637:117:9",
															"statements": [
																{
																	"nativeSrc": "4652:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4652:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4666:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4666:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4656:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4656:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4681:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4681:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4716:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4716:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4727:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4727:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4712:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4712:3:9"
																				},
																				"nativeSrc": "4712:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4712:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4736:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4736:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4691:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4691:20:9"
																		},
																		"nativeSrc": "4691:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4681:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4681:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4764:118:9",
															"nodeType": "YulBlock",
															"src": "4764:118:9",
															"statements": [
																{
																	"nativeSrc": "4779:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4779:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4793:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4783:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4783:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4809:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4809:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4844:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4844:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4855:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4855:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4840:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4840:3:9"
																				},
																				"nativeSrc": "4840:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4840:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4864:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4864:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4819:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4819:20:9"
																		},
																		"nativeSrc": "4819:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4819:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4809:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4809:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4415:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4460:9:9",
														"nodeType": "YulTypedName",
														"src": "4460:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4471:7:9",
														"nodeType": "YulTypedName",
														"src": "4471:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4483:6:9",
														"nodeType": "YulTypedName",
														"src": "4483:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4491:6:9",
														"nodeType": "YulTypedName",
														"src": "4491:6:9",
														"type": ""
													}
												],
												"src": "4415:474:9"
											},
											{
												"body": {
													"nativeSrc": "4992:516:9",
													"nodeType": "YulBlock",
													"src": "4992:516:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5038:83:9",
																"nodeType": "YulBlock",
																"src": "5038:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5040:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5040:77:9"
																			},
																			"nativeSrc": "5040:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5040:79:9"
																		},
																		"nativeSrc": "5040:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5013:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5013:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5022:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:9"
																		},
																		"nativeSrc": "5009:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5034:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5005:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:9"
																},
																"nativeSrc": "5005:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5005:32:9"
															},
															"nativeSrc": "5002:119:9",
															"nodeType": "YulIf",
															"src": "5002:119:9"
														},
														{
															"nativeSrc": "5131:117:9",
															"nodeType": "YulBlock",
															"src": "5131:117:9",
															"statements": [
																{
																	"nativeSrc": "5146:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5146:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5160:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5160:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5150:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5150:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5175:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5175:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5210:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5210:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5221:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5221:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5206:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5206:3:9"
																				},
																				"nativeSrc": "5206:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5206:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5230:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5230:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5185:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5185:20:9"
																		},
																		"nativeSrc": "5185:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5185:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5175:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5175:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5258:118:9",
															"nodeType": "YulBlock",
															"src": "5258:118:9",
															"statements": [
																{
																	"nativeSrc": "5273:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5273:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5287:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5277:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5277:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5303:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5303:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5338:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5338:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5349:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5349:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5334:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5334:3:9"
																				},
																				"nativeSrc": "5334:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5334:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5358:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5358:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5313:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5313:20:9"
																		},
																		"nativeSrc": "5313:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5313:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5303:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5303:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5386:115:9",
															"nodeType": "YulBlock",
															"src": "5386:115:9",
															"statements": [
																{
																	"nativeSrc": "5401:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5401:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5405:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5405:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5431:60:9",
																	"nodeType": "YulAssignment",
																	"src": "5431:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5463:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5463:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5474:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5474:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5459:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5459:3:9"
																				},
																				"nativeSrc": "5459:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5459:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5483:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5483:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5441:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5441:17:9"
																		},
																		"nativeSrc": "5441:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5431:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5431:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "4895:613:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4946:9:9",
														"nodeType": "YulTypedName",
														"src": "4946:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4957:7:9",
														"nodeType": "YulTypedName",
														"src": "4957:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4969:6:9",
														"nodeType": "YulTypedName",
														"src": "4969:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4977:6:9",
														"nodeType": "YulTypedName",
														"src": "4977:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4985:6:9",
														"nodeType": "YulTypedName",
														"src": "4985:6:9",
														"type": ""
													}
												],
												"src": "4895:613:9"
											},
											{
												"body": {
													"nativeSrc": "5626:138:9",
													"nodeType": "YulBlock",
													"src": "5626:138:9",
													"statements": [
														{
															"nativeSrc": "5636:26:9",
															"nodeType": "YulAssignment",
															"src": "5636:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5648:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5648:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5659:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5659:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5644:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5644:3:9"
																},
																"nativeSrc": "5644:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5644:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5636:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5636:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5730:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5730:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5743:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5754:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5739:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:9"
																		},
																		"nativeSrc": "5739:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "5672:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "5672:57:9"
																},
																"nativeSrc": "5672:85:9",
																"nodeType": "YulFunctionCall",
																"src": "5672:85:9"
															},
															"nativeSrc": "5672:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "5672:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "5514:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5598:9:9",
														"nodeType": "YulTypedName",
														"src": "5598:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5610:6:9",
														"nodeType": "YulTypedName",
														"src": "5610:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5621:4:9",
														"nodeType": "YulTypedName",
														"src": "5621:4:9",
														"type": ""
													}
												],
												"src": "5514:250:9"
											},
											{
												"body": {
													"nativeSrc": "5835:53:9",
													"nodeType": "YulBlock",
													"src": "5835:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5852:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5852:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5875:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5875:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5857:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5857:17:9"
																		},
																		"nativeSrc": "5857:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5845:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:9"
																},
																"nativeSrc": "5845:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5845:37:9"
															},
															"nativeSrc": "5845:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5845:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5770:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5823:5:9",
														"nodeType": "YulTypedName",
														"src": "5823:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5830:3:9",
														"nodeType": "YulTypedName",
														"src": "5830:3:9",
														"type": ""
													}
												],
												"src": "5770:118:9"
											},
											{
												"body": {
													"nativeSrc": "5992:124:9",
													"nodeType": "YulBlock",
													"src": "5992:124:9",
													"statements": [
														{
															"nativeSrc": "6002:26:9",
															"nodeType": "YulAssignment",
															"src": "6002:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6014:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6025:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6025:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6010:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6010:3:9"
																},
																"nativeSrc": "6010:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6010:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6002:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6002:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6082:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6082:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6095:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6095:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6106:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6106:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6091:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6091:3:9"
																		},
																		"nativeSrc": "6091:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6091:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6038:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6038:43:9"
																},
																"nativeSrc": "6038:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6038:71:9"
															},
															"nativeSrc": "6038:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6038:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5894:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5964:9:9",
														"nodeType": "YulTypedName",
														"src": "5964:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5976:6:9",
														"nodeType": "YulTypedName",
														"src": "5976:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5987:4:9",
														"nodeType": "YulTypedName",
														"src": "5987:4:9",
														"type": ""
													}
												],
												"src": "5894:222:9"
											},
											{
												"body": {
													"nativeSrc": "6165:79:9",
													"nodeType": "YulBlock",
													"src": "6165:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6222:16:9",
																"nodeType": "YulBlock",
																"src": "6222:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6231:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6231:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6234:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6234:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6224:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6224:6:9"
																			},
																			"nativeSrc": "6224:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6224:12:9"
																		},
																		"nativeSrc": "6224:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6224:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6188:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6188:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6213:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6195:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6195:17:9"
																				},
																				"nativeSrc": "6195:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6195:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6185:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6185:2:9"
																		},
																		"nativeSrc": "6185:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6178:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:9"
																},
																"nativeSrc": "6178:43:9",
																"nodeType": "YulFunctionCall",
																"src": "6178:43:9"
															},
															"nativeSrc": "6175:63:9",
															"nodeType": "YulIf",
															"src": "6175:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6122:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6158:5:9",
														"nodeType": "YulTypedName",
														"src": "6158:5:9",
														"type": ""
													}
												],
												"src": "6122:122:9"
											},
											{
												"body": {
													"nativeSrc": "6302:87:9",
													"nodeType": "YulBlock",
													"src": "6302:87:9",
													"statements": [
														{
															"nativeSrc": "6312:29:9",
															"nodeType": "YulAssignment",
															"src": "6312:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6334:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6334:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6321:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6321:12:9"
																},
																"nativeSrc": "6321:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6321:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6312:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6312:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6377:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6377:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6350:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "6350:26:9"
																},
																"nativeSrc": "6350:33:9",
																"nodeType": "YulFunctionCall",
																"src": "6350:33:9"
															},
															"nativeSrc": "6350:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "6350:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6250:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6280:6:9",
														"nodeType": "YulTypedName",
														"src": "6280:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6288:3:9",
														"nodeType": "YulTypedName",
														"src": "6288:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6296:5:9",
														"nodeType": "YulTypedName",
														"src": "6296:5:9",
														"type": ""
													}
												],
												"src": "6250:139:9"
											},
											{
												"body": {
													"nativeSrc": "6478:391:9",
													"nodeType": "YulBlock",
													"src": "6478:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6524:83:9",
																"nodeType": "YulBlock",
																"src": "6524:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6526:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6526:77:9"
																			},
																			"nativeSrc": "6526:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6526:79:9"
																		},
																		"nativeSrc": "6526:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6526:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6499:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6499:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6508:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6508:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6495:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6495:3:9"
																		},
																		"nativeSrc": "6495:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6520:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6520:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6491:3:9"
																},
																"nativeSrc": "6491:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6491:32:9"
															},
															"nativeSrc": "6488:119:9",
															"nodeType": "YulIf",
															"src": "6488:119:9"
														},
														{
															"nativeSrc": "6617:117:9",
															"nodeType": "YulBlock",
															"src": "6617:117:9",
															"statements": [
																{
																	"nativeSrc": "6632:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6632:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6646:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6646:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6636:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6636:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6661:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6661:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6696:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6696:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6707:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6707:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6692:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6692:3:9"
																				},
																				"nativeSrc": "6692:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6692:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6716:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6716:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6671:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6671:20:9"
																		},
																		"nativeSrc": "6671:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6661:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6661:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6744:118:9",
															"nodeType": "YulBlock",
															"src": "6744:118:9",
															"statements": [
																{
																	"nativeSrc": "6759:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6759:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6773:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6773:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6763:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6763:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6789:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6789:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6824:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6824:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6835:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6835:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6820:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6820:3:9"
																				},
																				"nativeSrc": "6820:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6820:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6844:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6844:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6799:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6799:20:9"
																		},
																		"nativeSrc": "6799:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6799:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6789:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6789:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "6395:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6440:9:9",
														"nodeType": "YulTypedName",
														"src": "6440:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6451:7:9",
														"nodeType": "YulTypedName",
														"src": "6451:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6463:6:9",
														"nodeType": "YulTypedName",
														"src": "6463:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6471:6:9",
														"nodeType": "YulTypedName",
														"src": "6471:6:9",
														"type": ""
													}
												],
												"src": "6395:474:9"
											},
											{
												"body": {
													"nativeSrc": "7001:206:9",
													"nodeType": "YulBlock",
													"src": "7001:206:9",
													"statements": [
														{
															"nativeSrc": "7011:26:9",
															"nodeType": "YulAssignment",
															"src": "7011:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7023:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7023:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7034:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7019:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:9"
																},
																"nativeSrc": "7019:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7019:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7011:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7011:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7091:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7091:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7104:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7104:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7115:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7115:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7100:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:9"
																		},
																		"nativeSrc": "7100:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7100:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7047:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7047:43:9"
																},
																"nativeSrc": "7047:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7047:71:9"
															},
															"nativeSrc": "7047:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7047:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7172:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7185:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7196:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7196:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7181:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7181:3:9"
																		},
																		"nativeSrc": "7181:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7181:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7128:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7128:43:9"
																},
																"nativeSrc": "7128:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7128:72:9"
															},
															"nativeSrc": "7128:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7128:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6875:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6965:9:9",
														"nodeType": "YulTypedName",
														"src": "6965:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6977:6:9",
														"nodeType": "YulTypedName",
														"src": "6977:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6985:6:9",
														"nodeType": "YulTypedName",
														"src": "6985:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6996:4:9",
														"nodeType": "YulTypedName",
														"src": "6996:4:9",
														"type": ""
													}
												],
												"src": "6875:332:9"
											},
											{
												"body": {
													"nativeSrc": "7279:263:9",
													"nodeType": "YulBlock",
													"src": "7279:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7325:83:9",
																"nodeType": "YulBlock",
																"src": "7325:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7327:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7327:77:9"
																			},
																			"nativeSrc": "7327:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7327:79:9"
																		},
																		"nativeSrc": "7327:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7327:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7309:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7296:3:9"
																		},
																		"nativeSrc": "7296:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7296:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:9"
																},
																"nativeSrc": "7292:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7292:32:9"
															},
															"nativeSrc": "7289:119:9",
															"nodeType": "YulIf",
															"src": "7289:119:9"
														},
														{
															"nativeSrc": "7418:117:9",
															"nodeType": "YulBlock",
															"src": "7418:117:9",
															"statements": [
																{
																	"nativeSrc": "7433:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7433:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7447:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7447:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7437:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7437:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7462:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7462:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7497:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7497:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7508:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7508:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7493:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7493:3:9"
																				},
																				"nativeSrc": "7493:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7493:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7517:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7517:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7472:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7472:20:9"
																		},
																		"nativeSrc": "7472:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7472:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7462:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7462:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7213:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7249:9:9",
														"nodeType": "YulTypedName",
														"src": "7249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7260:7:9",
														"nodeType": "YulTypedName",
														"src": "7260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7272:6:9",
														"nodeType": "YulTypedName",
														"src": "7272:6:9",
														"type": ""
													}
												],
												"src": "7213:329:9"
											},
											{
												"body": {
													"nativeSrc": "7576:152:9",
													"nodeType": "YulBlock",
													"src": "7576:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7593:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7593:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7596:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7596:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7586:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:9"
																},
																"nativeSrc": "7586:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7586:88:9"
															},
															"nativeSrc": "7586:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7586:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7690:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7690:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7693:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7693:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7683:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7683:6:9"
																},
																"nativeSrc": "7683:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7683:15:9"
															},
															"nativeSrc": "7683:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7683:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7714:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7714:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7717:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7717:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7707:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:9"
																},
																"nativeSrc": "7707:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7707:15:9"
															},
															"nativeSrc": "7707:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7707:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7548:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7548:180:9"
											},
											{
												"body": {
													"nativeSrc": "7778:147:9",
													"nodeType": "YulBlock",
													"src": "7778:147:9",
													"statements": [
														{
															"nativeSrc": "7788:25:9",
															"nodeType": "YulAssignment",
															"src": "7788:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7811:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7811:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7793:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7793:17:9"
																},
																"nativeSrc": "7793:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7793:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7788:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7788:1:9"
																}
															]
														},
														{
															"nativeSrc": "7822:25:9",
															"nodeType": "YulAssignment",
															"src": "7822:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7845:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7845:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7827:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7827:17:9"
																},
																"nativeSrc": "7827:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7827:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7822:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7822:1:9"
																}
															]
														},
														{
															"nativeSrc": "7856:16:9",
															"nodeType": "YulAssignment",
															"src": "7856:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7867:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7870:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7870:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7863:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:9"
																},
																"nativeSrc": "7863:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7863:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7856:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7896:22:9",
																"nodeType": "YulBlock",
																"src": "7896:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7898:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7898:16:9"
																			},
																			"nativeSrc": "7898:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7898:18:9"
																		},
																		"nativeSrc": "7898:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7898:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7888:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7888:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7891:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7891:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7885:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7885:2:9"
																},
																"nativeSrc": "7885:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7885:10:9"
															},
															"nativeSrc": "7882:36:9",
															"nodeType": "YulIf",
															"src": "7882:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7734:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7765:1:9",
														"nodeType": "YulTypedName",
														"src": "7765:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7768:1:9",
														"nodeType": "YulTypedName",
														"src": "7768:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7774:3:9",
														"nodeType": "YulTypedName",
														"src": "7774:3:9",
														"type": ""
													}
												],
												"src": "7734:191:9"
											},
											{
												"body": {
													"nativeSrc": "7976:149:9",
													"nodeType": "YulBlock",
													"src": "7976:149:9",
													"statements": [
														{
															"nativeSrc": "7986:25:9",
															"nodeType": "YulAssignment",
															"src": "7986:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8009:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8009:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7991:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7991:17:9"
																},
																"nativeSrc": "7991:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7991:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7986:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7986:1:9"
																}
															]
														},
														{
															"nativeSrc": "8020:25:9",
															"nodeType": "YulAssignment",
															"src": "8020:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8043:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8043:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8025:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8025:17:9"
																},
																"nativeSrc": "8025:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8025:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8020:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8020:1:9"
																}
															]
														},
														{
															"nativeSrc": "8054:17:9",
															"nodeType": "YulAssignment",
															"src": "8054:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8066:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8066:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8069:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8069:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8062:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:9"
																},
																"nativeSrc": "8062:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8062:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8054:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8054:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8096:22:9",
																"nodeType": "YulBlock",
																"src": "8096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8098:16:9"
																			},
																			"nativeSrc": "8098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8098:18:9"
																		},
																		"nativeSrc": "8098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8087:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8087:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8093:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8093:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8084:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8084:2:9"
																},
																"nativeSrc": "8084:11:9",
																"nodeType": "YulFunctionCall",
																"src": "8084:11:9"
															},
															"nativeSrc": "8081:37:9",
															"nodeType": "YulIf",
															"src": "8081:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7931:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7962:1:9",
														"nodeType": "YulTypedName",
														"src": "7962:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7965:1:9",
														"nodeType": "YulTypedName",
														"src": "7965:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7971:4:9",
														"nodeType": "YulTypedName",
														"src": "7971:4:9",
														"type": ""
													}
												],
												"src": "7931:194:9"
											},
											{
												"body": {
													"nativeSrc": "8179:362:9",
													"nodeType": "YulBlock",
													"src": "8179:362:9",
													"statements": [
														{
															"nativeSrc": "8189:25:9",
															"nodeType": "YulAssignment",
															"src": "8189:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8212:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8212:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8194:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8194:17:9"
																},
																"nativeSrc": "8194:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8194:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8189:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8189:1:9"
																}
															]
														},
														{
															"nativeSrc": "8223:25:9",
															"nodeType": "YulAssignment",
															"src": "8223:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8246:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8246:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8228:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8228:17:9"
																},
																"nativeSrc": "8228:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8228:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8223:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8223:1:9"
																}
															]
														},
														{
															"nativeSrc": "8257:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8257:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8280:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8280:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8283:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8283:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8276:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8276:3:9"
																},
																"nativeSrc": "8276:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8276:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8261:11:9",
																	"nodeType": "YulTypedName",
																	"src": "8261:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8294:41:9",
															"nodeType": "YulAssignment",
															"src": "8294:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8323:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "8323:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8305:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8305:17:9"
																},
																"nativeSrc": "8305:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8305:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8294:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8294:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8512:22:9",
																"nodeType": "YulBlock",
																"src": "8512:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8514:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8514:16:9"
																			},
																			"nativeSrc": "8514:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8514:18:9"
																		},
																		"nativeSrc": "8514:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8514:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8445:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "8445:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8438:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8438:6:9"
																				},
																				"nativeSrc": "8438:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8438:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8468:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "8468:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8475:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "8475:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8484:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "8484:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8471:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8471:3:9"
																						},
																						"nativeSrc": "8471:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8471:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8465:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8465:2:9"
																				},
																				"nativeSrc": "8465:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8465:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8418:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8418:2:9"
																		},
																		"nativeSrc": "8418:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8418:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8398:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:9"
																},
																"nativeSrc": "8398:113:9",
																"nodeType": "YulFunctionCall",
																"src": "8398:113:9"
															},
															"nativeSrc": "8395:139:9",
															"nodeType": "YulIf",
															"src": "8395:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8131:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8162:1:9",
														"nodeType": "YulTypedName",
														"src": "8162:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8165:1:9",
														"nodeType": "YulTypedName",
														"src": "8165:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8171:7:9",
														"nodeType": "YulTypedName",
														"src": "8171:7:9",
														"type": ""
													}
												],
												"src": "8131:410:9"
											},
											{
												"body": {
													"nativeSrc": "8575:152:9",
													"nodeType": "YulBlock",
													"src": "8575:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8592:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8592:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8595:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8595:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8585:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8585:6:9"
																},
																"nativeSrc": "8585:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8585:88:9"
															},
															"nativeSrc": "8585:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8585:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8689:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8692:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8682:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:9"
																},
																"nativeSrc": "8682:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8682:15:9"
															},
															"nativeSrc": "8682:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8682:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8713:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8713:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8716:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8716:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8706:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:9"
																},
																"nativeSrc": "8706:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8706:15:9"
															},
															"nativeSrc": "8706:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8706:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8547:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8547:180:9"
											},
											{
												"body": {
													"nativeSrc": "8829:73:9",
													"nodeType": "YulBlock",
													"src": "8829:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8846:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8846:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8851:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8839:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:9"
																},
																"nativeSrc": "8839:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8839:19:9"
															},
															"nativeSrc": "8839:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "8839:19:9"
														},
														{
															"nativeSrc": "8867:29:9",
															"nodeType": "YulAssignment",
															"src": "8867:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8886:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8886:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8891:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8891:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8882:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8882:3:9"
																},
																"nativeSrc": "8882:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8882:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8867:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8867:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8733:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8801:3:9",
														"nodeType": "YulTypedName",
														"src": "8801:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8806:6:9",
														"nodeType": "YulTypedName",
														"src": "8806:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8817:11:9",
														"nodeType": "YulTypedName",
														"src": "8817:11:9",
														"type": ""
													}
												],
												"src": "8733:169:9"
											},
											{
												"body": {
													"nativeSrc": "9014:123:9",
													"nodeType": "YulBlock",
													"src": "9014:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9036:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9036:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9044:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9044:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9032:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9032:3:9"
																		},
																		"nativeSrc": "9032:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9032:14:9"
																	},
																	{
																		"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468",
																		"kind": "string",
																		"nativeSrc": "9048:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9048:34:9",
																		"type": "",
																		"value": "withdraw: can't withdraw more th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9025:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9025:6:9"
																},
																"nativeSrc": "9025:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9025:58:9"
															},
															"nativeSrc": "9025:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9025:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9104:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9104:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9112:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9112:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9100:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9100:3:9"
																		},
																		"nativeSrc": "9100:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9100:15:9"
																	},
																	{
																		"hexValue": "616e206465706f736974",
																		"kind": "string",
																		"nativeSrc": "9117:12:9",
																		"nodeType": "YulLiteral",
																		"src": "9117:12:9",
																		"type": "",
																		"value": "an deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9093:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9093:6:9"
																},
																"nativeSrc": "9093:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9093:37:9"
															},
															"nativeSrc": "9093:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9093:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
												"nativeSrc": "8908:229:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9006:6:9",
														"nodeType": "YulTypedName",
														"src": "9006:6:9",
														"type": ""
													}
												],
												"src": "8908:229:9"
											},
											{
												"body": {
													"nativeSrc": "9289:220:9",
													"nodeType": "YulBlock",
													"src": "9289:220:9",
													"statements": [
														{
															"nativeSrc": "9299:74:9",
															"nodeType": "YulAssignment",
															"src": "9299:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9365:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9365:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9370:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9370:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9306:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9306:58:9"
																},
																"nativeSrc": "9306:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9306:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9299:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9299:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9471:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																	"nativeSrc": "9382:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9382:88:9"
																},
																"nativeSrc": "9382:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9382:93:9"
															},
															"nativeSrc": "9382:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9382:93:9"
														},
														{
															"nativeSrc": "9484:19:9",
															"nodeType": "YulAssignment",
															"src": "9484:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9495:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9495:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9500:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9491:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9491:3:9"
																},
																"nativeSrc": "9491:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9491:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9143:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9277:3:9",
														"nodeType": "YulTypedName",
														"src": "9277:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9285:3:9",
														"nodeType": "YulTypedName",
														"src": "9285:3:9",
														"type": ""
													}
												],
												"src": "9143:366:9"
											},
											{
												"body": {
													"nativeSrc": "9686:248:9",
													"nodeType": "YulBlock",
													"src": "9686:248:9",
													"statements": [
														{
															"nativeSrc": "9696:26:9",
															"nodeType": "YulAssignment",
															"src": "9696:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9708:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:9"
																},
																"nativeSrc": "9704:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9704:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9696:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9743:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9754:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9739:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:9"
																		},
																		"nativeSrc": "9739:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9762:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9762:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9768:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9768:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9758:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:9"
																		},
																		"nativeSrc": "9758:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9758:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9732:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9732:6:9"
																},
																"nativeSrc": "9732:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9732:47:9"
															},
															"nativeSrc": "9732:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9732:47:9"
														},
														{
															"nativeSrc": "9788:139:9",
															"nodeType": "YulAssignment",
															"src": "9788:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9922:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9922:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9796:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9796:124:9"
																},
																"nativeSrc": "9796:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9796:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9788:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9788:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9515:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9666:9:9",
														"nodeType": "YulTypedName",
														"src": "9666:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9681:4:9",
														"nodeType": "YulTypedName",
														"src": "9681:4:9",
														"type": ""
													}
												],
												"src": "9515:419:9"
											},
											{
												"body": {
													"nativeSrc": "9968:152:9",
													"nodeType": "YulBlock",
													"src": "9968:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9985:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9985:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9988:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9988:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9978:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:9"
																},
																"nativeSrc": "9978:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9978:88:9"
															},
															"nativeSrc": "9978:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9978:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10082:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10082:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10085:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10085:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:9"
																},
																"nativeSrc": "10075:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10075:15:9"
															},
															"nativeSrc": "10075:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10075:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10106:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10109:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10109:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10099:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:9"
																},
																"nativeSrc": "10099:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10099:15:9"
															},
															"nativeSrc": "10099:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10099:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9940:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9940:180:9"
											},
											{
												"body": {
													"nativeSrc": "10168:143:9",
													"nodeType": "YulBlock",
													"src": "10168:143:9",
													"statements": [
														{
															"nativeSrc": "10178:25:9",
															"nodeType": "YulAssignment",
															"src": "10178:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10201:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10201:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10183:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10183:17:9"
																},
																"nativeSrc": "10183:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10183:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10178:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10178:1:9"
																}
															]
														},
														{
															"nativeSrc": "10212:25:9",
															"nodeType": "YulAssignment",
															"src": "10212:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10235:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10235:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10217:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10217:17:9"
																},
																"nativeSrc": "10217:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10217:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10212:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10212:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10259:22:9",
																"nodeType": "YulBlock",
																"src": "10259:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10261:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10261:16:9"
																			},
																			"nativeSrc": "10261:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10261:18:9"
																		},
																		"nativeSrc": "10261:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10261:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10256:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10256:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10249:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10249:6:9"
																},
																"nativeSrc": "10249:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10249:9:9"
															},
															"nativeSrc": "10246:35:9",
															"nodeType": "YulIf",
															"src": "10246:35:9"
														},
														{
															"nativeSrc": "10291:14:9",
															"nodeType": "YulAssignment",
															"src": "10291:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10300:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10300:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10303:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10303:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10296:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:9"
																},
																"nativeSrc": "10296:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10296:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10291:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10291:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10126:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10157:1:9",
														"nodeType": "YulTypedName",
														"src": "10157:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10160:1:9",
														"nodeType": "YulTypedName",
														"src": "10160:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10166:1:9",
														"nodeType": "YulTypedName",
														"src": "10166:1:9",
														"type": ""
													}
												],
												"src": "10126:185:9"
											},
											{
												"body": {
													"nativeSrc": "10423:115:9",
													"nodeType": "YulBlock",
													"src": "10423:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10445:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10445:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10453:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10453:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10441:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10441:3:9"
																		},
																		"nativeSrc": "10441:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10441:14:9"
																	},
																	{
																		"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73",
																		"kind": "string",
																		"nativeSrc": "10457:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10457:34:9",
																		"type": "",
																		"value": "fund: too late, the farm is clos"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10434:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10434:6:9"
																},
																"nativeSrc": "10434:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10434:58:9"
															},
															"nativeSrc": "10434:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10434:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10513:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10513:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10521:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10521:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10509:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10509:3:9"
																		},
																		"nativeSrc": "10509:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10509:15:9"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "10526:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10526:4:9",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10502:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10502:6:9"
																},
																"nativeSrc": "10502:29:9",
																"nodeType": "YulFunctionCall",
																"src": "10502:29:9"
															},
															"nativeSrc": "10502:29:9",
															"nodeType": "YulExpressionStatement",
															"src": "10502:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
												"nativeSrc": "10317:221:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10415:6:9",
														"nodeType": "YulTypedName",
														"src": "10415:6:9",
														"type": ""
													}
												],
												"src": "10317:221:9"
											},
											{
												"body": {
													"nativeSrc": "10690:220:9",
													"nodeType": "YulBlock",
													"src": "10690:220:9",
													"statements": [
														{
															"nativeSrc": "10700:74:9",
															"nodeType": "YulAssignment",
															"src": "10700:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10766:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10766:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10771:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10707:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10707:58:9"
																},
																"nativeSrc": "10707:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10707:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10872:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10872:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																	"nativeSrc": "10783:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10783:88:9"
																},
																"nativeSrc": "10783:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10783:93:9"
															},
															"nativeSrc": "10783:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10783:93:9"
														},
														{
															"nativeSrc": "10885:19:9",
															"nodeType": "YulAssignment",
															"src": "10885:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10896:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10901:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10892:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10892:3:9"
																},
																"nativeSrc": "10892:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10892:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10885:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10544:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10678:3:9",
														"nodeType": "YulTypedName",
														"src": "10678:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10686:3:9",
														"nodeType": "YulTypedName",
														"src": "10686:3:9",
														"type": ""
													}
												],
												"src": "10544:366:9"
											},
											{
												"body": {
													"nativeSrc": "11087:248:9",
													"nodeType": "YulBlock",
													"src": "11087:248:9",
													"statements": [
														{
															"nativeSrc": "11097:26:9",
															"nodeType": "YulAssignment",
															"src": "11097:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11109:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11109:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11120:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11120:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11105:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11105:3:9"
																},
																"nativeSrc": "11105:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11105:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11097:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11097:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11144:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11144:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11155:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11155:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11140:3:9"
																		},
																		"nativeSrc": "11140:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11140:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11163:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11163:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11169:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11159:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11159:3:9"
																		},
																		"nativeSrc": "11159:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11159:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11133:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11133:6:9"
																},
																"nativeSrc": "11133:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11133:47:9"
															},
															"nativeSrc": "11133:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11133:47:9"
														},
														{
															"nativeSrc": "11189:139:9",
															"nodeType": "YulAssignment",
															"src": "11189:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11323:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11323:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11197:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11197:124:9"
																},
																"nativeSrc": "11197:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11197:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11189:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11189:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10916:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11067:9:9",
														"nodeType": "YulTypedName",
														"src": "11067:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11082:4:9",
														"nodeType": "YulTypedName",
														"src": "11082:4:9",
														"type": ""
													}
												],
												"src": "10916:419:9"
											},
											{
												"body": {
													"nativeSrc": "11467:206:9",
													"nodeType": "YulBlock",
													"src": "11467:206:9",
													"statements": [
														{
															"nativeSrc": "11477:26:9",
															"nodeType": "YulAssignment",
															"src": "11477:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11489:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11489:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11500:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:9"
																},
																"nativeSrc": "11485:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11485:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11477:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11477:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11557:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11557:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11570:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11570:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11581:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11581:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11566:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11566:3:9"
																		},
																		"nativeSrc": "11566:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11566:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11513:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11513:43:9"
																},
																"nativeSrc": "11513:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11513:71:9"
															},
															"nativeSrc": "11513:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11513:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11638:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11638:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11651:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11651:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11662:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11662:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11647:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11647:3:9"
																		},
																		"nativeSrc": "11647:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11647:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11594:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11594:43:9"
																},
																"nativeSrc": "11594:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11594:72:9"
															},
															"nativeSrc": "11594:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11594:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11341:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11431:9:9",
														"nodeType": "YulTypedName",
														"src": "11431:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11443:6:9",
														"nodeType": "YulTypedName",
														"src": "11443:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11451:6:9",
														"nodeType": "YulTypedName",
														"src": "11451:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11462:4:9",
														"nodeType": "YulTypedName",
														"src": "11462:4:9",
														"type": ""
													}
												],
												"src": "11341:332:9"
											},
											{
												"body": {
													"nativeSrc": "11739:77:9",
													"nodeType": "YulBlock",
													"src": "11739:77:9",
													"statements": [
														{
															"nativeSrc": "11749:22:9",
															"nodeType": "YulAssignment",
															"src": "11749:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11764:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11758:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11758:5:9"
																},
																"nativeSrc": "11758:13:9",
																"nodeType": "YulFunctionCall",
																"src": "11758:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11749:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11749:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11804:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11804:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11780:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "11780:23:9"
																},
																"nativeSrc": "11780:30:9",
																"nodeType": "YulFunctionCall",
																"src": "11780:30:9"
															},
															"nativeSrc": "11780:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "11780:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11679:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11717:6:9",
														"nodeType": "YulTypedName",
														"src": "11717:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11725:3:9",
														"nodeType": "YulTypedName",
														"src": "11725:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11733:5:9",
														"nodeType": "YulTypedName",
														"src": "11733:5:9",
														"type": ""
													}
												],
												"src": "11679:137:9"
											},
											{
												"body": {
													"nativeSrc": "11896:271:9",
													"nodeType": "YulBlock",
													"src": "11896:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "11942:83:9",
																"nodeType": "YulBlock",
																"src": "11942:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11944:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "11944:77:9"
																			},
																			"nativeSrc": "11944:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11944:79:9"
																		},
																		"nativeSrc": "11944:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11944:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11917:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "11917:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11926:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11926:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11913:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11913:3:9"
																		},
																		"nativeSrc": "11913:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11913:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11938:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11938:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11909:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11909:3:9"
																},
																"nativeSrc": "11909:32:9",
																"nodeType": "YulFunctionCall",
																"src": "11909:32:9"
															},
															"nativeSrc": "11906:119:9",
															"nodeType": "YulIf",
															"src": "11906:119:9"
														},
														{
															"nativeSrc": "12035:125:9",
															"nodeType": "YulBlock",
															"src": "12035:125:9",
															"statements": [
																{
																	"nativeSrc": "12050:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12050:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12064:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12064:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12054:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12054:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12079:71:9",
																	"nodeType": "YulAssignment",
																	"src": "12079:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12122:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "12122:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12133:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "12133:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12118:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "12118:3:9"
																				},
																				"nativeSrc": "12118:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12118:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12142:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12142:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12089:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "12089:28:9"
																		},
																		"nativeSrc": "12089:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12079:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12079:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11822:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11866:9:9",
														"nodeType": "YulTypedName",
														"src": "11866:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11877:7:9",
														"nodeType": "YulTypedName",
														"src": "11877:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11889:6:9",
														"nodeType": "YulTypedName",
														"src": "11889:6:9",
														"type": ""
													}
												],
												"src": "11822:345:9"
											},
											{
												"body": {
													"nativeSrc": "12327:288:9",
													"nodeType": "YulBlock",
													"src": "12327:288:9",
													"statements": [
														{
															"nativeSrc": "12337:26:9",
															"nodeType": "YulAssignment",
															"src": "12337:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12349:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12349:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12360:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12360:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12345:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:9"
																},
																"nativeSrc": "12345:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12345:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12337:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12337:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12417:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12417:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12430:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12430:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12441:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12441:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12426:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12426:3:9"
																		},
																		"nativeSrc": "12426:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12426:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12373:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12373:43:9"
																},
																"nativeSrc": "12373:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12373:71:9"
															},
															"nativeSrc": "12373:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12373:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12498:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12498:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12511:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12511:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12522:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12522:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12507:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12507:3:9"
																		},
																		"nativeSrc": "12507:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12507:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12454:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12454:43:9"
																},
																"nativeSrc": "12454:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12454:72:9"
															},
															"nativeSrc": "12454:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12454:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12580:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12580:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12593:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12593:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12604:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12604:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12589:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12589:3:9"
																		},
																		"nativeSrc": "12589:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12589:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12536:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12536:43:9"
																},
																"nativeSrc": "12536:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12536:72:9"
															},
															"nativeSrc": "12536:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12536:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12173:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12283:9:9",
														"nodeType": "YulTypedName",
														"src": "12283:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12295:6:9",
														"nodeType": "YulTypedName",
														"src": "12295:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12303:6:9",
														"nodeType": "YulTypedName",
														"src": "12303:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12311:6:9",
														"nodeType": "YulTypedName",
														"src": "12311:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12322:4:9",
														"nodeType": "YulTypedName",
														"src": "12322:4:9",
														"type": ""
													}
												],
												"src": "12173:442:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$315(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$315(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$315(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$315(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$315(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$315t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$315(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: can't withdraw more th\")\n\n        mstore(add(memPtr, 32), \"an deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"fund: too late, the farm is clos\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c8063715018a6116100c1578063a85adeab1161007a578063a85adeab1461037f578063ca1d209d1461039d578063e2bbb158146103b9578063e4c75c27146103d5578063e6fd48bc14610405578063f2fde38b1461042357610156565b8063715018a6146102ba578063785e9e86146102c45780638da5cb5b146102e25780638f10369a1461030057806393f1a40b1461031e578063a23831061461034f57610156565b8063441a3e7011610113578063441a3e701461022257806351eb05a61461023e5780635312ea8e1461025a5780635c76ca2d14610276578063630b5ba11461029457806364482f791461029e57610156565b8063081e3eda1461015a5780630e15561a146101785780631526fe271461019657806317caf6f1146101ca5780631eaaa045146101e85780633f90916a14610204575b5f80fd5b61016261043f565b60405161016f9190611494565b60405180910390f35b61018061044b565b60405161018d9190611494565b60405180910390f35b6101b060048036038101906101ab91906114db565b610451565b6040516101c1959493929190611580565b60405180910390f35b6101d26104b1565b6040516101df9190611494565b60405180910390f35b61020260048036038101906101fd9190611652565b6104b7565b005b61020c6105d1565b6040516102199190611494565b60405180910390f35b61023c600480360381019061023791906116a2565b610628565b005b610258600480360381019061025391906114db565b610838565b005b610274600480360381019061026f91906114db565b610932565b005b61027e610a77565b60405161028b9190611494565b60405180910390f35b61029c610a7d565b005b6102b860048036038101906102b391906116e0565b610aa8565b005b6102c2610b2e565b005b6102cc610b41565b6040516102d99190611730565b60405180910390f35b6102ea610b66565b6040516102f79190611758565b60405180910390f35b610308610b8d565b6040516103159190611494565b60405180910390f35b6103386004803603810190610333919061179b565b610b93565b6040516103469291906117d9565b60405180910390f35b6103696004803603810190610364919061179b565b610bbe565b6040516103769190611494565b60405180910390f35b610387610c1b565b6040516103949190611494565b60405180910390f35b6103b760048036038101906103b291906114db565b610c21565b005b6103d360048036038101906103ce91906116a2565b610cef565b005b6103ef60048036038101906103ea919061179b565b610ec7565b6040516103fc9190611494565b60405180910390f35b61040d61104e565b60405161041a9190611494565b60405180910390f35b61043d60048036038101906104389190611800565b611054565b005b5f600580549050905090565b60045481565b60058181548110610460575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b60075481565b6104bf6110d8565b80156104ce576104cd610a7d565b5b5f60085442116104e0576008546104e2565b425b9050836007546104f29190611858565b60078190555060056040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020015f81526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040155505050505050565b5f60085442116105e3575f9050610625565b5f60095442106105f5576009546105f7565b425b90506002546008548261060a919061188b565b60035461061791906118be565b610621919061188b565b9150505b90565b5f6005838154811061063d5761063c6118ff565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015410156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906119ac565b60405180910390fd5b6106e984610838565b5f81600101546ec097ce7bc90715b34b9f10000000008460030154845f015461071291906118be565b61071c91906119f7565b610726919061188b565b9050610732338261115f565b83825f0154610741919061188b565b825f01819055506ec097ce7bc90715b34b9f10000000008360030154835f015461076b91906118be565b61077591906119f7565b82600101819055506107ca3385855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112189092919063ffffffff16565b8383600401546107da919061188b565b8360040181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516108299190611494565b60405180910390a35050505050565b5f6005828154811061084d5761084c6118ff565b5b905f5260205f20906005020190505f600954421061086d5760095461086f565b425b90508160020154811161088357505061092f565b5f826004015490505f81036108a35781836002018190555050505061092f565b5f8360020154836108b4919061188b565b90505f6007548560010154600354846108cd91906118be565b6108d791906118be565b6108e1919061188b565b9050826ec097ce7bc90715b34b9f1000000000826108ff91906118be565b61090991906119f7565b85600301546109189190611858565b856003018190555042856002018190555050505050505b50565b5f60058281548110610947576109466118ff565b5b905f5260205f20906005020190505f60065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506109f433825f0154845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112189092919063ffffffff16565b805f01548260040154610a07919061188b565b8260040181905550823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610a599190611494565b60405180910390a35f815f01819055505f8160010181905550505050565b60025481565b5f60058054905090505f5b81811015610aa457610a9981610838565b806001019050610a88565b5050565b610ab06110d8565b8015610abf57610abe610a7d565b5b8160058481548110610ad457610ad36118ff565b5b905f5260205f20906005020160010154600754610af1919061188b565b610afb9190611858565b6007819055508160058481548110610b1657610b156118ff565b5b905f5260205f20906005020160010181905550505050565b610b366110d8565b610b3f5f611297565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6006602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154905082565b5f8060065f8581526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050805f015491505092915050565b60095481565b6009544210610c65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5c90611a97565b60405180910390fd5b610cb333308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611358909392919063ffffffff16565b60035481610cc191906119f7565b60095f828254610cd19190611858565b9250508190555080600454610ce69190611858565b60048190555050565b5f60058381548110610d0457610d036118ff565b5b905f5260205f20906005020190505f60065f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050610d6a84610838565b5f815f01541115610dc0575f81600101546ec097ce7bc90715b34b9f10000000008460030154845f0154610d9e91906118be565b610da891906119f7565b610db2919061188b565b9050610dbe338261115f565b505b610e0f333085855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611358909392919063ffffffff16565b828260040154610e1f9190611858565b826004018190555082815f0154610e369190611858565b815f01819055506ec097ce7bc90715b34b9f10000000008260030154825f0154610e6091906118be565b610e6a91906119f7565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051610eb99190611494565b60405180910390a350505050565b5f8060058481548110610edd57610edc6118ff565b5b905f5260205f20906005020190505f60065f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f83600401549050836002015442118015610f5d57505f8114155b1561100a575f6009544210610f7457600954610f76565b425b90505f600954866002015410610f8e57600954610f94565b85600201545b90505f8183610fa3919061188b565b90505f600754886001015460035484610fbc91906118be565b610fc691906118be565b610fd091906119f7565b9050846ec097ce7bc90715b34b9f100000000082610fee91906118be565b610ff891906119f7565b866110039190611858565b9550505050505b82600101546ec097ce7bc90715b34b9f100000000083855f015461102e91906118be565b61103891906119f7565b611042919061188b565b94505050505092915050565b60085481565b61105c6110d8565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110c39190611758565b60405180910390fd5b6110d581611297565b50565b6110e06113da565b73ffffffffffffffffffffffffffffffffffffffff166110fe610b66565b73ffffffffffffffffffffffffffffffffffffffff161461115d576111216113da565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111549190611758565b60405180910390fd5b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016111bb929190611ab5565b6020604051808303815f875af11580156111d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111fb9190611af0565b508060025f82825461120d9190611858565b925050819055505050565b611292838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161124b929190611ab5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e1565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113d4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161138d93929190611b1b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113e1565b50505050565b5f33905090565b5f8060205f8451602086015f885af180611400576040513d5f823e3d81fd5b3d92505f519150505f8214611419576001811415611434565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561147657836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161146d9190611758565b60405180910390fd5b50505050565b5f819050919050565b61148e8161147c565b82525050565b5f6020820190506114a75f830184611485565b92915050565b5f80fd5b6114ba8161147c565b81146114c4575f80fd5b50565b5f813590506114d5816114b1565b92915050565b5f602082840312156114f0576114ef6114ad565b5b5f6114fd848285016114c7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61154861154361153e84611506565b611525565b611506565b9050919050565b5f6115598261152e565b9050919050565b5f61156a8261154f565b9050919050565b61157a81611560565b82525050565b5f60a0820190506115935f830188611571565b6115a06020830187611485565b6115ad6040830186611485565b6115ba6060830185611485565b6115c76080830184611485565b9695505050505050565b5f6115db82611506565b9050919050565b5f6115ec826115d1565b9050919050565b6115fc816115e2565b8114611606575f80fd5b50565b5f81359050611617816115f3565b92915050565b5f8115159050919050565b6116318161161d565b811461163b575f80fd5b50565b5f8135905061164c81611628565b92915050565b5f805f60608486031215611669576116686114ad565b5b5f611676868287016114c7565b935050602061168786828701611609565b92505060406116988682870161163e565b9150509250925092565b5f80604083850312156116b8576116b76114ad565b5b5f6116c5858286016114c7565b92505060206116d6858286016114c7565b9150509250929050565b5f805f606084860312156116f7576116f66114ad565b5b5f611704868287016114c7565b9350506020611715868287016114c7565b92505060406117268682870161163e565b9150509250925092565b5f6020820190506117435f830184611571565b92915050565b611752816115d1565b82525050565b5f60208201905061176b5f830184611749565b92915050565b61177a816115d1565b8114611784575f80fd5b50565b5f8135905061179581611771565b92915050565b5f80604083850312156117b1576117b06114ad565b5b5f6117be858286016114c7565b92505060206117cf85828601611787565b9150509250929050565b5f6040820190506117ec5f830185611485565b6117f96020830184611485565b9392505050565b5f60208284031215611815576118146114ad565b5b5f61182284828501611787565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118628261147c565b915061186d8361147c565b92508282019050808211156118855761188461182b565b5b92915050565b5f6118958261147c565b91506118a08361147c565b92508282039050818111156118b8576118b761182b565b5b92915050565b5f6118c88261147c565b91506118d38361147c565b92508282026118e18161147c565b915082820484148315176118f8576118f761182b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f77697468647261773a2063616e2774207769746864726177206d6f72652074685f8201527f616e206465706f73697400000000000000000000000000000000000000000000602082015250565b5f611996602a8361192c565b91506119a18261193c565b604082019050919050565b5f6020820190508181035f8301526119c38161198a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a018261147c565b9150611a0c8361147c565b925082611a1c57611a1b6119ca565b5b828204905092915050565b7f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f735f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611a8160228361192c565b9150611a8c82611a27565b604082019050919050565b5f6020820190508181035f830152611aae81611a75565b9050919050565b5f604082019050611ac85f830185611749565b611ad56020830184611485565b9392505050565b5f81519050611aea81611628565b92915050565b5f60208284031215611b0557611b046114ad565b5b5f611b1284828501611adc565b91505092915050565b5f606082019050611b2e5f830186611749565b611b3b6020830185611749565b611b486040830184611485565b94935050505056fea2646970667358221220e1286ad8acaa8181c3a24a1fd0bf8ec88e12eff3c1aa592115317d5c36a2a23564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA85ADEAB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x423 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x34F JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x29E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x204 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x4B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xA7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0xB2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP3 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH2 0x1054 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BF PUSH2 0x10D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH2 0x4CD PUSH2 0xA7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x4E0 JUMPI PUSH1 0x8 SLOAD PUSH2 0x4E2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x7 SLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD TIMESTAMP GT PUSH2 0x5E3 JUMPI PUSH0 SWAP1 POP PUSH2 0x625 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x5F5 JUMPI PUSH1 0x9 SLOAD PUSH2 0x5F7 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D7 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP5 PUSH2 0x838 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x712 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH2 0x732 CALLER DUP3 PUSH2 0x115F JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD SLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7CA CALLER DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1218 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x7DA SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP4 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x829 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84D JUMPI PUSH2 0x84C PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x86D JUMPI PUSH1 0x9 SLOAD PUSH2 0x86F JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 ADD SLOAD DUP2 GT PUSH2 0x883 JUMPI POP POP PUSH2 0x92F JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x8A3 JUMPI DUP2 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x92F JUMP JUMPDEST PUSH0 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP3 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH2 0x8FF SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x918 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP6 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x946 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x9F4 CALLER DUP3 PUSH0 ADD SLOAD DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1218 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 ADD SLOAD DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA4 JUMPI PUSH2 0xA99 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x10D8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA7D JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAD4 JUMPI PUSH2 0xAD3 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x7 SLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x10D8 JUMP JUMPDEST PUSH2 0xB3F PUSH0 PUSH2 0x1297 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xC65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5C SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB3 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 SLOAD PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD04 JUMPI PUSH2 0xD03 PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0xD6A DUP5 PUSH2 0x838 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xDC0 JUMPI PUSH0 DUP2 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH2 0xDBE CALLER DUP3 PUSH2 0x115F JUMP JUMPDEST POP JUMPDEST PUSH2 0xE0F CALLER ADDRESS DUP6 DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1358 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xE1F SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH0 ADD SLOAD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH0 ADD SLOAD PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEDD JUMPI PUSH2 0xEDC PUSH2 0x18FF JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP4 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xF5D JUMPI POP PUSH0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x100A JUMPI PUSH0 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0xF74 JUMPI PUSH1 0x9 SLOAD PUSH2 0xF76 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP7 PUSH1 0x2 ADD SLOAD LT PUSH2 0xF8E JUMPI PUSH1 0x9 SLOAD PUSH2 0xF94 JUMP JUMPDEST DUP6 PUSH1 0x2 ADD SLOAD JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD DUP9 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD DUP5 PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP DUP5 PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP3 PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0xFF8 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST DUP7 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP6 POP POP POP POP POP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP4 DUP6 PUSH0 ADD SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1038 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0x1042 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x10D8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C3 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D5 DUP2 PUSH2 0x1297 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10E0 PUSH2 0x13DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FE PUSH2 0xB66 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115D JUMPI PUSH2 0x1121 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1154 SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP3 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x1AF0 JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x120D SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1292 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x124B SWAP3 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13D4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x138D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13E1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1419 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1476 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP2 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH2 0x147C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x147C JUMP JUMPDEST DUP2 EQ PUSH2 0x14C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14D5 DUP2 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F0 JUMPI PUSH2 0x14EF PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FD DUP5 DUP3 DUP6 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1543 PUSH2 0x153E DUP5 PUSH2 0x1506 JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1559 DUP3 PUSH2 0x152E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x156A DUP3 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1560 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1593 PUSH0 DUP4 ADD DUP9 PUSH2 0x1571 JUMP JUMPDEST PUSH2 0x15A0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15AD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15BA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x15C7 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15DB DUP3 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EC DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1617 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x161D JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164C DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1687 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1698 DUP7 DUP3 DUP8 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F7 JUMPI PUSH2 0x16F6 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1704 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1715 DUP7 DUP3 DUP8 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1726 DUP7 DUP3 DUP8 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1743 PUSH0 DUP4 ADD DUP5 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1752 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176B PUSH0 DUP4 ADD DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1784 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1795 DUP2 PUSH2 0x1771 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17B0 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17BE DUP6 DUP3 DUP7 ADD PUSH2 0x14C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17CF DUP6 DUP3 DUP7 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17EC PUSH0 DUP4 ADD DUP6 PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x17F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1822 DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1862 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x186D DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1885 JUMPI PUSH2 0x1884 PUSH2 0x182B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x182B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C8 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x18D3 DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18E1 DUP2 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18F8 JUMPI PUSH2 0x18F7 PUSH2 0x182B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E206465706F73697400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1996 PUSH1 0x2A DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x19A1 DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C3 DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A01 DUP3 PUSH2 0x147C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP4 PUSH2 0x147C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A1C JUMPI PUSH2 0x1A1B PUSH2 0x19CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 PUSH1 0x22 DUP4 PUSH2 0x192C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP3 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AAE DUP2 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AC8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AEA DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B05 JUMPI PUSH2 0x1B04 PUSH2 0x14AD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B12 DUP5 DUP3 DUP6 ADD PUSH2 0x1ADC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B2E PUSH0 DUP4 ADD DUP7 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1B3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x1B48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0x28 PUSH11 0xD8ACAA8181C3A24A1FD0BF DUP15 0xC8 DUP15 SLT 0xEF RETURN 0xC1 0xAA MSIZE 0x21 ISZERO BALANCE PUSH30 0x5C36A2A23564736F6C634300081A00330000000000000000000000000000 ",
							"sourceMap": "478:9366:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3204:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2186:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2240:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2460:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3826:551;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6069:322;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8357:774;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6730:757;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9202:418;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2030:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6474:180;;;:::i;:::-;;4474:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1959:19:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2095:30:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4830:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2593:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3353:308;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7551:703;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5067:926;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2528:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3204:95:8;3249:7;3276:8;:15;;;;3269:22;;3204:95;:::o;2186:27::-;;;;:::o;2240:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2460:30::-;;;;:::o;3826:551::-;1531:13:0;:11;:13::i;:::-;3927:11:8::1;3923:61;;;3955:17;:15;:17::i;:::-;3923:61;3994:27;4042:14;;4024:15;:32;:67;;4077:14;;4024:67;;;4059:15;4024:67;3994:97;;4136:11;4120:15;;:27;;;;:::i;:::-;4102:15;:45;;;;4158:8;4172:196;;;;;;;;4202:8;4172:196;;;;;;4234:11;4172:196;;;;4278:19;4172:196;;;;4327:1;4172:196;;;;4355:1;4172:196;;::::0;4158:211:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:465;3826:551:::0;;;:::o;6069:322::-;6116:7;6159:14;;6140:15;:33;6136:74;;6197:1;6190:8;;;;6136:74;6222:21;6264:12;;6246:15;:30;:63;;6297:12;;6246:63;;;6279:15;6246:63;6222:87;;6376:7;;6360:14;;6344:13;:30;;;;:::i;:::-;6327:15;;:48;;;;:::i;:::-;:56;;;;:::i;:::-;6320:63;;;6069:322;;:::o;8357:774::-;8424:21;8448:8;8457:4;8448:14;;;;;;;;:::i;:::-;;;;;;;;;;;;8424:38;;8473:21;8497:8;:14;8506:4;8497:14;;;;;;;;;;;:26;8512:10;8497:26;;;;;;;;;;;;;;;8473:50;;8557:7;8542:4;:11;;;:22;;8534:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;8622:16;8633:4;8622:10;:16::i;:::-;8676:21;8739:4;:15;;;8734:4;8712;:21;;;8700:4;:11;;;:33;;;;:::i;:::-;:38;;;;:::i;:::-;:54;;;;:::i;:::-;8676:78;;8767:40;8781:10;8793:13;8767;:40::i;:::-;8844:7;8832:4;:11;;;:19;;;;:::i;:::-;8818:4;:11;;:33;;;;8914:4;8892;:21;;;8880:4;:11;;;:33;;;;:::i;:::-;:38;;;;:::i;:::-;8862:4;:15;;:56;;;;8957:55;8991:10;9004:7;8957:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;9063:7;9044:4;:18;;;:26;;;;:::i;:::-;9023:4;:18;;:47;;;;9109:4;9097:10;9088:35;;;9115:7;9088:35;;;;;;:::i;:::-;;;;;;;;8413:718;;;8357:774;;:::o;6730:757::-;6782:21;6806:8;6815:4;6806:14;;;;;;;;:::i;:::-;;;;;;;;;;;;6782:38;;6831:21;6873:12;;6855:15;:30;:63;;6906:12;;6855:63;;;6888:15;6855:63;6831:87;;6952:4;:24;;;6935:13;:41;6931:80;;6993:7;;;;6931:80;7021:16;7040:4;:18;;;7021:37;;7087:1;7075:8;:13;7071:107;;7132:13;7105:4;:24;;:40;;;;7160:7;;;;;7071:107;7190:19;7226:4;:24;;;7212:13;:38;;;;:::i;:::-;7190:60;;7261:19;7327:15;;7311:4;:15;;;7295;;7283:11;:27;;;;:::i;:::-;:43;;;;:::i;:::-;:59;;;;:::i;:::-;7261:81;;7418:8;7413:4;7401:11;:16;;;;:::i;:::-;:25;;;;:::i;:::-;7379:4;:21;;;:47;;;;:::i;:::-;7355:4;:21;;:71;;;;7464:15;7437:4;:24;;:42;;;;6771:716;;;;;6730:757;;:::o;9202:418::-;9261:21;9285:8;9294:4;9285:14;;;;;;;;:::i;:::-;;;;;;;;;;;;9261:38;;9310:21;9334:8;:14;9343:4;9334:14;;;;;;;;;;;:26;9349:10;9334:26;;;;;;;;;;;;;;;9310:50;;9371:59;9405:10;9418:4;:11;;;9371:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;9481:4;:11;;;9462:4;:18;;;:30;;;;:::i;:::-;9441:4;:18;;:51;;;;9538:4;9526:10;9508:48;;;9544:4;:11;;;9508:48;;;;;;:::i;:::-;;;;;;;;9581:1;9567:4;:11;;:15;;;;9611:1;9593:4;:15;;:19;;;;9250:370;;9202:418;:::o;2030:22::-;;;;:::o;6474:180::-;6519:14;6536:8;:15;;;;6519:32;;6567:11;6562:85;6590:6;6584:3;:12;6562:85;;;6620:15;6631:3;6620:10;:15::i;:::-;6598:5;;;;;6562:85;;;;6508:146;6474:180::o;4474:294::-;1531:13:0;:11;:13::i;:::-;4572:11:8::1;4568:61;;;4600:17;:15;:17::i;:::-;4568:61;4699:11;4673:8;4682:4;4673:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;4657:15;;:41;;;;:::i;:::-;:53;;;;:::i;:::-;4639:15;:71;;;;4749:11;4721:8;4730:4;4721:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;4474:294:::0;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1959:19:8:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2095:30:8:-;;;;:::o;2365:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4830:173::-;4901:7;4921:21;4945:8;:14;4954:4;4945:14;;;;;;;;;;;:21;4960:5;4945:21;;;;;;;;;;;;;;;4921:45;;4984:4;:11;;;4977:18;;;4830:173;;;;:::o;2593:27::-;;;;:::o;3353:308::-;3428:12;;3410:15;:30;3402:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3490:67;3521:10;3542:4;3549:7;3490:5;;;;;;;;;;;:22;;;;:67;;;;;;:::i;:::-;3592:15;;3584:7;:23;;;;:::i;:::-;3568:12;;:39;;;;;;;:::i;:::-;;;;;;;;3646:7;3633:12;;:20;;;;:::i;:::-;3618:12;:35;;;;3353:308;:::o;7551:703::-;7617:21;7641:8;7650:4;7641:14;;;;;;;;:::i;:::-;;;;;;;;;;;;7617:38;;7666:21;7690:8;:14;7699:4;7690:14;;;;;;;;;;;:26;7705:10;7690:26;;;;;;;;;;;;;;;7666:50;;7729:16;7740:4;7729:10;:16::i;:::-;7776:1;7762:4;:11;;;:15;7758:181;;;7794:21;7857:4;:15;;;7852:4;7830;:21;;;7818:4;:11;;;:33;;;;:::i;:::-;:38;;;;:::i;:::-;:54;;;;:::i;:::-;7794:78;;7887:40;7901:10;7913:13;7887;:40::i;:::-;7779:160;7758:181;7951:74;7989:10;8010:4;8017:7;7951:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;8076:7;8057:4;:18;;;:26;;;;:::i;:::-;8036:4;:18;;:47;;;;8122:7;8110:4;:11;;;:19;;;;:::i;:::-;8096:4;:11;;:33;;;;8192:4;8170;:21;;;8158:4;:11;;;:33;;;;:::i;:::-;:38;;;;:::i;:::-;8140:4;:15;;:56;;;;8232:4;8220:10;8212:34;;;8238:7;8212:34;;;;;;:::i;:::-;;;;;;;;7606:648;;7551:703;;:::o;5067:926::-;5136:7;5156:21;5180:8;5189:4;5180:14;;;;;;;;:::i;:::-;;;;;;;;;;;;5156:38;;5205:21;5229:8;:14;5238:4;5229:14;;;;;;;;;;;:21;5244:5;5229:21;;;;;;;;;;;;;;;5205:45;;5261:24;5288:4;:21;;;5261:48;;5322:16;5341:4;:18;;;5322:37;;5394:4;:24;;;5376:15;:42;:59;;;;;5434:1;5422:8;:13;;5376:59;5372:547;;;5452:21;5494:12;;5476:15;:30;:63;;5527:12;;5476:63;;;5509:15;5476:63;5452:87;;5554:26;5610:12;;5583:4;:24;;;:39;:81;;5652:12;;5583:81;;;5625:4;:24;;;5583:81;5554:110;;5679:19;5715:18;5701:13;:32;;;;:::i;:::-;5679:54;;5748:19;5814:15;;5798:4;:15;;;5782;;5770:11;:27;;;;:::i;:::-;:43;;;;:::i;:::-;:59;;;;:::i;:::-;5748:81;;5898:8;5893:4;5881:11;:16;;;;:::i;:::-;:25;;;;:::i;:::-;5863:16;:44;;;;:::i;:::-;5844:63;;5437:482;;;;5372:547;5970:4;:15;;;5965:4;5948:16;5936:4;:11;;;:28;;;;:::i;:::-;:33;;;;:::i;:::-;:49;;;;:::i;:::-;5929:56;;;;;;5067:926;;;;:::o;2528:29::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9703:138:8:-;9776:5;;;;;;;;;;;:14;;;9791:3;9796:7;9776:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9826:7;9815;;:18;;;;;;;:::i;:::-;;;;;;;;9703:138;;:::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;7686:720:5:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:692::-;2385:4;2423:3;2412:9;2408:19;2400:27;;2437:85;2519:1;2508:9;2504:17;2495:6;2437:85;:::i;:::-;2532:72;2600:2;2589:9;2585:18;2576:6;2532:72;:::i;:::-;2614;2682:2;2671:9;2667:18;2658:6;2614:72;:::i;:::-;2696;2764:2;2753:9;2749:18;2740:6;2696:72;:::i;:::-;2778:73;2846:3;2835:9;2831:19;2822:6;2778:73;:::i;:::-;2166:692;;;;;;;;:::o;2864:96::-;2901:7;2930:24;2948:5;2930:24;:::i;:::-;2919:35;;2864:96;;;:::o;2966:110::-;3017:7;3046:24;3064:5;3046:24;:::i;:::-;3035:35;;2966:110;;;:::o;3082:150::-;3169:38;3201:5;3169:38;:::i;:::-;3162:5;3159:49;3149:77;;3222:1;3219;3212:12;3149:77;3082:150;:::o;3238:167::-;3298:5;3336:6;3323:20;3314:29;;3352:47;3393:5;3352:47;:::i;:::-;3238:167;;;;:::o;3411:90::-;3445:7;3488:5;3481:13;3474:21;3463:32;;3411:90;;;:::o;3507:116::-;3577:21;3592:5;3577:21;:::i;:::-;3570:5;3567:32;3557:60;;3613:1;3610;3603:12;3557:60;3507:116;:::o;3629:133::-;3672:5;3710:6;3697:20;3688:29;;3726:30;3750:5;3726:30;:::i;:::-;3629:133;;;;:::o;3768:641::-;3856:6;3864;3872;3921:2;3909:9;3900:7;3896:23;3892:32;3889:119;;;3927:79;;:::i;:::-;3889:119;4047:1;4072:53;4117:7;4108:6;4097:9;4093:22;4072:53;:::i;:::-;4062:63;;4018:117;4174:2;4200:67;4259:7;4250:6;4239:9;4235:22;4200:67;:::i;:::-;4190:77;;4145:132;4316:2;4342:50;4384:7;4375:6;4364:9;4360:22;4342:50;:::i;:::-;4332:60;;4287:115;3768:641;;;;;:::o;4415:474::-;4483:6;4491;4540:2;4528:9;4519:7;4515:23;4511:32;4508:119;;;4546:79;;:::i;:::-;4508:119;4666:1;4691:53;4736:7;4727:6;4716:9;4712:22;4691:53;:::i;:::-;4681:63;;4637:117;4793:2;4819:53;4864:7;4855:6;4844:9;4840:22;4819:53;:::i;:::-;4809:63;;4764:118;4415:474;;;;;:::o;4895:613::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:50;5483:7;5474:6;5463:9;5459:22;5441:50;:::i;:::-;5431:60;;5386:115;4895:613;;;;;:::o;5514:250::-;5621:4;5659:2;5648:9;5644:18;5636:26;;5672:85;5754:1;5743:9;5739:17;5730:6;5672:85;:::i;:::-;5514:250;;;;:::o;5770:118::-;5857:24;5875:5;5857:24;:::i;:::-;5852:3;5845:37;5770:118;;:::o;5894:222::-;5987:4;6025:2;6014:9;6010:18;6002:26;;6038:71;6106:1;6095:9;6091:17;6082:6;6038:71;:::i;:::-;5894:222;;;;:::o;6122:122::-;6195:24;6213:5;6195:24;:::i;:::-;6188:5;6185:35;6175:63;;6234:1;6231;6224:12;6175:63;6122:122;:::o;6250:139::-;6296:5;6334:6;6321:20;6312:29;;6350:33;6377:5;6350:33;:::i;:::-;6250:139;;;;:::o;6395:474::-;6463:6;6471;6520:2;6508:9;6499:7;6495:23;6491:32;6488:119;;;6526:79;;:::i;:::-;6488:119;6646:1;6671:53;6716:7;6707:6;6696:9;6692:22;6671:53;:::i;:::-;6661:63;;6617:117;6773:2;6799:53;6844:7;6835:6;6824:9;6820:22;6799:53;:::i;:::-;6789:63;;6744:118;6395:474;;;;;:::o;6875:332::-;6996:4;7034:2;7023:9;7019:18;7011:26;;7047:71;7115:1;7104:9;7100:17;7091:6;7047:71;:::i;:::-;7128:72;7196:2;7185:9;7181:18;7172:6;7128:72;:::i;:::-;6875:332;;;;;:::o;7213:329::-;7272:6;7321:2;7309:9;7300:7;7296:23;7292:32;7289:119;;;7327:79;;:::i;:::-;7289:119;7447:1;7472:53;7517:7;7508:6;7497:9;7493:22;7472:53;:::i;:::-;7462:63;;7418:117;7213:329;;;;:::o;7548:180::-;7596:77;7593:1;7586:88;7693:4;7690:1;7683:15;7717:4;7714:1;7707:15;7734:191;7774:3;7793:20;7811:1;7793:20;:::i;:::-;7788:25;;7827:20;7845:1;7827:20;:::i;:::-;7822:25;;7870:1;7867;7863:9;7856:16;;7891:3;7888:1;7885:10;7882:36;;;7898:18;;:::i;:::-;7882:36;7734:191;;;;:::o;7931:194::-;7971:4;7991:20;8009:1;7991:20;:::i;:::-;7986:25;;8025:20;8043:1;8025:20;:::i;:::-;8020:25;;8069:1;8066;8062:9;8054:17;;8093:1;8087:4;8084:11;8081:37;;;8098:18;;:::i;:::-;8081:37;7931:194;;;;:::o;8131:410::-;8171:7;8194:20;8212:1;8194:20;:::i;:::-;8189:25;;8228:20;8246:1;8228:20;:::i;:::-;8223:25;;8283:1;8280;8276:9;8305:30;8323:11;8305:30;:::i;:::-;8294:41;;8484:1;8475:7;8471:15;8468:1;8465:22;8445:1;8438:9;8418:83;8395:139;;8514:18;;:::i;:::-;8395:139;8179:362;8131:410;;;;:::o;8547:180::-;8595:77;8592:1;8585:88;8692:4;8689:1;8682:15;8716:4;8713:1;8706:15;8733:169;8817:11;8851:6;8846:3;8839:19;8891:4;8886:3;8882:14;8867:29;;8733:169;;;;:::o;8908:229::-;9048:34;9044:1;9036:6;9032:14;9025:58;9117:12;9112:2;9104:6;9100:15;9093:37;8908:229;:::o;9143:366::-;9285:3;9306:67;9370:2;9365:3;9306:67;:::i;:::-;9299:74;;9382:93;9471:3;9382:93;:::i;:::-;9500:2;9495:3;9491:12;9484:19;;9143:366;;;:::o;9515:419::-;9681:4;9719:2;9708:9;9704:18;9696:26;;9768:9;9762:4;9758:20;9754:1;9743:9;9739:17;9732:47;9796:131;9922:4;9796:131;:::i;:::-;9788:139;;9515:419;;;:::o;9940:180::-;9988:77;9985:1;9978:88;10085:4;10082:1;10075:15;10109:4;10106:1;10099:15;10126:185;10166:1;10183:20;10201:1;10183:20;:::i;:::-;10178:25;;10217:20;10235:1;10217:20;:::i;:::-;10212:25;;10256:1;10246:35;;10261:18;;:::i;:::-;10246:35;10303:1;10300;10296:9;10291:14;;10126:185;;;;:::o;10317:221::-;10457:34;10453:1;10445:6;10441:14;10434:58;10526:4;10521:2;10513:6;10509:15;10502:29;10317:221;:::o;10544:366::-;10686:3;10707:67;10771:2;10766:3;10707:67;:::i;:::-;10700:74;;10783:93;10872:3;10783:93;:::i;:::-;10901:2;10896:3;10892:12;10885:19;;10544:366;;;:::o;10916:419::-;11082:4;11120:2;11109:9;11105:18;11097:26;;11169:9;11163:4;11159:20;11155:1;11144:9;11140:17;11133:47;11197:131;11323:4;11197:131;:::i;:::-;11189:139;;10916:419;;;:::o;11341:332::-;11462:4;11500:2;11489:9;11485:18;11477:26;;11513:71;11581:1;11570:9;11566:17;11557:6;11513:71;:::i;:::-;11594:72;11662:2;11651:9;11647:18;11638:6;11594:72;:::i;:::-;11341:332;;;;;:::o;11679:137::-;11733:5;11764:6;11758:13;11749:22;;11780:30;11804:5;11780:30;:::i;:::-;11679:137;;;;:::o;11822:345::-;11889:6;11938:2;11926:9;11917:7;11913:23;11909:32;11906:119;;;11944:79;;:::i;:::-;11906:119;12064:1;12089:61;12142:7;12133:6;12122:9;12118:22;12089:61;:::i;:::-;12079:71;;12035:125;11822:345;;;;:::o;12173:442::-;12322:4;12360:2;12349:9;12345:18;12337:26;;12373:71;12441:1;12430:9;12426:17;12417:6;12373:71;:::i;:::-;12454:72;12522:2;12511:9;12507:18;12498:6;12454:72;:::i;:::-;12536;12604:2;12593:9;12589:18;12580:6;12536:72;:::i;:::-;12173:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1409200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"add(uint256,address,bool)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"deposited(uint256,address)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"endTimestamp()": "2447",
								"erc20()": "infinite",
								"fund(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"owner()": "2582",
								"paidOut()": "2514",
								"pending(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2464",
								"renounceOwnership()": "infinite",
								"rewardPerSecond()": "2514",
								"set(uint256,uint256,bool)": "infinite",
								"startTimestamp()": "2535",
								"totalAllocPoint()": "2515",
								"totalPending()": "infinite",
								"totalRewards()": "2471",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"erc20Transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2907,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2993,
									"end": 3003,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3026,
									"end": 3032,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3023,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3018,
									"end": 3023,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3032,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3061,
									"end": 3077,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3043,
									"end": 3058,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3043,
									"end": 3077,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3043,
									"end": 3077,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3043,
									"end": 3077,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3043,
									"end": 3077,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3105,
									"end": 3120,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3102,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3088,
									"end": 3120,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3120,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3120,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3120,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3146,
									"end": 3161,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3131,
									"end": 3143,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 3131,
									"end": 3161,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3131,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3131,
									"end": 3161,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3131,
									"end": 3161,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2907,
									"end": 3169,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1088,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1094,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1017,
									"end": 1094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1173,
									"end": 1197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1173,
									"end": 1197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1166,
									"end": 1171,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1163,
									"end": 1198,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1153,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1222,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1285,
									"end": 1290,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1322,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1310,
									"end": 1323,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1301,
									"end": 1323,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1332,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1332,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1479,
									"end": 1485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1532,
									"end": 1541,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1523,
									"end": 1530,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1519,
									"end": 1542,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1515,
									"end": 1547,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1550,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1550,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1512,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1765,
									"end": 1772,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1756,
									"end": 1762,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1745,
									"end": 1754,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1741,
									"end": 1763,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1695,
									"end": 1773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1695,
									"end": 1773,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1685,
									"end": 1773,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1641,
									"end": 1783,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1822,
									"end": 1824,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1904,
									"end": 1911,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1895,
									"end": 1901,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1884,
									"end": 1893,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1880,
									"end": 1902,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1848,
									"end": 1912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1848,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1838,
									"end": 1912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1793,
									"end": 1922,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1961,
									"end": 1963,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2043,
									"end": 2050,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2023,
									"end": 2032,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2041,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1987,
									"end": 2051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1987,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1977,
									"end": 2051,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1932,
									"end": 2061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1377,
									"end": 2068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2179,
									"end": 2184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2161,
									"end": 2185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2161,
									"end": 2185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2156,
									"end": 2159,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2186,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2074,
									"end": 2192,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2074,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2329,
									"end": 2331,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2327,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2332,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2332,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2408,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2395,
									"end": 2412,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2392,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2342,
									"end": 2413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2342,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 9844,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1286ad8acaa8181c3a24a1fd0bf8ec88e12eff3c1aa592115317d5c36a2a23564736f6c634300081a0033",
									".code": [
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "A85ADEAB"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "A85ADEAB"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "CA1D209D"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "E2BBB158"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "E4C75C27"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "E6FD48BC"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "785E9E86"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "8F10369A"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "93F1A40B"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "A2383106"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "441A3E70"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "441A3E70"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "51EB05A6"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "5312EA8E"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "5C76CA2D"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "630B5BA1"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "64482F79"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "81E3EDA"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "E15561A"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "1526FE27"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "17CAF6F1"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "1EAAA045"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "3F90916A"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 478,
											"end": 9844,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3204,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3204,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2186,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2186,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2240,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2240,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2460,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2460,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3826,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3826,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 6069,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6069,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 8357,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 8357,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 6730,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6730,
											"end": 7487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 9202,
											"end": 9620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 9202,
											"end": 9620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2030,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2030,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6474,
											"end": 6654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 4474,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4474,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1959,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1959,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2095,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2095,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2365,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2365,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2365,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4830,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4830,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4830,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2593,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2593,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3353,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3353,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7551,
											"end": 8254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 7551,
											"end": 8254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5067,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5067,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5067,
											"end": 5993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2528,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2528,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3284,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 3938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3923,
											"end": 3984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3955,
											"end": 3970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3955,
											"end": 3972,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3972,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3955,
											"end": 3972,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3923,
											"end": 3984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4042,
											"end": 4056,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4039,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4056,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4077,
											"end": 4091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4077,
											"end": 4091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4074,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4024,
											"end": 4091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4147,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4120,
											"end": 4135,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4120,
											"end": 4147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4120,
											"end": 4147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4102,
											"end": 4147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4147,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4147,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4202,
											"end": 4210,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4245,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4278,
											"end": 4297,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4172,
											"end": 4368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3912,
											"end": 4377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 4377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6173,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6159,
											"end": 6173,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6155,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6140,
											"end": 6173,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6190,
											"end": 6198,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6136,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6276,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6264,
											"end": 6276,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6261,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6276,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6309,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6297,
											"end": 6309,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6294,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 6246,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6222,
											"end": 6309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6376,
											"end": 6383,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6376,
											"end": 6383,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6374,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6360,
											"end": 6374,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6357,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6344,
											"end": 6374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 6344,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6342,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6327,
											"end": 6342,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6327,
											"end": 6375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 6327,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 6327,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6327,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6320,
											"end": 6383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8424,
											"end": 8445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8456,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8457,
											"end": 8461,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 8448,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8424,
											"end": 8462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8424,
											"end": 8462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8505,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8510,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8511,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8522,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8523,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8557,
											"end": 8564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8564,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8542,
											"end": 8564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 8534,
											"end": 8611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 8534,
											"end": 8611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 8622,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8638,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8622,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 8712,
											"end": 8716,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8733,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8712,
											"end": 8733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8733,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8704,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8711,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 8700,
											"end": 8733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8700,
											"end": 8738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8700,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 8700,
											"end": 8754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 8700,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8781,
											"end": 8791,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 8767,
											"end": 8807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8807,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 8767,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8843,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 8832,
											"end": 8851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 8832,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8851,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8818,
											"end": 8851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 8892,
											"end": 8896,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8913,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8892,
											"end": 8913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8913,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8880,
											"end": 8891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8891,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 8880,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 8880,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8880,
											"end": 8918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 8880,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8877,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8862,
											"end": 8877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 8991,
											"end": 9001,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9011,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8961,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8982,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8957,
											"end": 8982,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8957,
											"end": 8982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 8957,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9044,
											"end": 9062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9062,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9044,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 9044,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9070,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9023,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 9113,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9107,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH",
											"source": 8,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9115,
											"end": 9122,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 9088,
											"end": 9123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9088,
											"end": 9123,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8357,
											"end": 9131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6814,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6806,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6820,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6885,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6873,
											"end": 6885,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6870,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6885,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6888,
											"end": 6903,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6855,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6831,
											"end": 6918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6976,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6952,
											"end": 6976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6976,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6976,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6931,
											"end": 7011,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6993,
											"end": 7000,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7011,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6931,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7058,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7021,
											"end": 7058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7075,
											"end": 7088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 7071,
											"end": 7178,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7109,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7129,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7105,
											"end": 7129,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7145,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7105,
											"end": 7145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7071,
											"end": 7178,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 7071,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7226,
											"end": 7250,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7226,
											"end": 7250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7226,
											"end": 7250,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7225,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7212,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7212,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7342,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 7327,
											"end": 7342,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7326,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7310,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7295,
											"end": 7310,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7294,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7283,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7283,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7283,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7283,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7283,
											"end": 7342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7283,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7261,
											"end": 7342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7418,
											"end": 7426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7413,
											"end": 7417,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 7401,
											"end": 7412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7401,
											"end": 7417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7401,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7401,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 7401,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7383,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7400,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7379,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 7379,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7426,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7479,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7479,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 7487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9293,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 9285,
											"end": 9299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9331,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9342,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9347,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9348,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9359,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 9405,
											"end": 9415,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9418,
											"end": 9422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9418,
											"end": 9429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9418,
											"end": 9429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9418,
											"end": 9429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9396,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 9371,
											"end": 9396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 9371,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9492,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 9462,
											"end": 9492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9459,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9441,
											"end": 9459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9492,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9536,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH",
											"source": 8,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9555,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 9508,
											"end": 9556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9556,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9571,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9582,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9567,
											"end": 9582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9608,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9593,
											"end": 9608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9250,
											"end": 9620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9250,
											"end": 9620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 6474,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6544,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 6536,
											"end": 6551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6536,
											"end": 6551,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6536,
											"end": 6551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6536,
											"end": 6551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6567,
											"end": 6578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6596,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6631,
											"end": 6634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6620,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 6620,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6620,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6508,
											"end": 6654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4572,
											"end": 4583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4568,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4600,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4600,
											"end": 4617,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4617,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 4600,
											"end": 4617,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4568,
											"end": 4629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4699,
											"end": 4710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4682,
											"end": 4686,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4673,
											"end": 4687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4673,
											"end": 4698,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4698,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4657,
											"end": 4672,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4657,
											"end": 4698,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4657,
											"end": 4698,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4657,
											"end": 4710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 4657,
											"end": 4710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4639,
											"end": 4710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4730,
											"end": 4734,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4721,
											"end": 4735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4735,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4721,
											"end": 4746,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4721,
											"end": 4760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4474,
											"end": 4768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4953,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4958,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4966,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 4966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4921,
											"end": 4966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 4995,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 4995,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4830,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2593,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3425,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3440,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3402,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3402,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3521,
											"end": 3531,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3556,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3490,
											"end": 3512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3592,
											"end": 3607,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3584,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3568,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3633,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3618,
											"end": 3653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3653,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3653,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3653,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7649,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7641,
											"end": 7655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7698,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7704,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7715,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7716,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 7729,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 7745,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7729,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7777,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7939,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7758,
											"end": 7939,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7872,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7857,
											"end": 7872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7857,
											"end": 7872,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 7830,
											"end": 7834,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7851,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7830,
											"end": 7851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7830,
											"end": 7851,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7829,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7818,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 7818,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7818,
											"end": 7856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7818,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 7818,
											"end": 7872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7901,
											"end": 7911,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 7887,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7887,
											"end": 7927,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7887,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7779,
											"end": 7939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7939,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 7758,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7989,
											"end": 7999,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7955,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7951,
											"end": 7963,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7980,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7951,
											"end": 7980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 7951,
											"end": 7980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8057,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 8057,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8083,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8121,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8110,
											"end": 8129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8110,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8107,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8129,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8096,
											"end": 8129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8192,
											"end": 8196,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8191,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 8170,
											"end": 8191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8191,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8169,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 8158,
											"end": 8191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8158,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8158,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8158,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8155,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8140,
											"end": 8155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8196,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8230,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH",
											"source": 8,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8238,
											"end": 8245,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 8212,
											"end": 8246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8246,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7606,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7551,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5188,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 5180,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5237,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5242,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5243,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5249,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5250,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5309,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5288,
											"end": 5309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5309,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5359,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5322,
											"end": 5359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5394,
											"end": 5418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5418,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5391,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5418,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5435,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5422,
											"end": 5430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5435,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5435,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5376,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5919,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5372,
											"end": 5919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5506,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5494,
											"end": 5506,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5491,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5506,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5527,
											"end": 5539,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5524,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 5476,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5587,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5607,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5583,
											"end": 5607,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5607,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5622,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5664,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5652,
											"end": 5664,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5649,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5625,
											"end": 5649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5649,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5583,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5554,
											"end": 5664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5714,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5701,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5701,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5679,
											"end": 5733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5767,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5798,
											"end": 5813,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5813,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5797,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5782,
											"end": 5797,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5770,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5770,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5770,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5770,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5770,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5748,
											"end": 5829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5906,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5893,
											"end": 5897,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 5881,
											"end": 5892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5881,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5881,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5881,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 5881,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5879,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5863,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 5863,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5907,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5372,
											"end": 5919,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5372,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5970,
											"end": 5985,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5970,
											"end": 5985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5970,
											"end": 5985,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 8,
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 5948,
											"end": 5964,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5940,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5947,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5936,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 5936,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5936,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5936,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5936,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5936,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5929,
											"end": 5985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9703,
											"end": 9841,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9703,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9781,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9790,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9790,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 9791,
											"end": 9794,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 9776,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 9776,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9826,
											"end": 9833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 9815,
											"end": 9833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2426,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2495,
											"end": 2501,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2437,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2437,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 2600,
											"end": 2602,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2532,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 2532,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2614,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2614,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2764,
											"end": 2766,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2746,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2696,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 2696,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2778,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2778,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2930,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2930,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3046,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3046,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3201,
											"end": 3206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 3169,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3169,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3162,
											"end": 3167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3208,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3223,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3224,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3149,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3343,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3343,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3393,
											"end": 3398,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3352,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3352,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3495,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3592,
											"end": 3597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 3577,
											"end": 3598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3577,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3567,
											"end": 3599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3557,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 3726,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 3726,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 3878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3924,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3927,
											"end": 4006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3927,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3889,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4117,
											"end": 4124,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4097,
											"end": 4106,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4072,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4200,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4200,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4267,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4190,
											"end": 4267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4384,
											"end": 4391,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 4342,
											"end": 4392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 4342,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4392,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4287,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4519,
											"end": 4526,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4543,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4546,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 4546,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4508,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4736,
											"end": 4743,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4716,
											"end": 4725,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4691,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4691,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4864,
											"end": 4871,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4844,
											"end": 4853,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 4819,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 4819,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4764,
											"end": 4882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5032,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5037,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5040,
											"end": 5119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5040,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 5002,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5210,
											"end": 5219,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5185,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5185,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5131,
											"end": 5248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5358,
											"end": 5365,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5313,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5313,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5366,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5483,
											"end": 5490,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5463,
											"end": 5472,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5459,
											"end": 5481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5441,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 5441,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5386,
											"end": 5501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5739,
											"end": 5756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5730,
											"end": 5736,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5672,
											"end": 5757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 5672,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 5875,
											"end": 5880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5857,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 5857,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6028,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6106,
											"end": 6107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 6038,
											"end": 6109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6038,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 6116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6195,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6188,
											"end": 6193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6185,
											"end": 6220,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6232,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6236,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6175,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6321,
											"end": 6341,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 6350,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 6350,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6471,
											"end": 6477,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6499,
											"end": 6506,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6518,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6523,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 6526,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6526,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 6488,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6646,
											"end": 6647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6716,
											"end": 6723,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 6671,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6671,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6724,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6799,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6799,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6744,
											"end": 6862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7034,
											"end": 7036,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 7115,
											"end": 7116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7113,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7097,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7047,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 7047,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7196,
											"end": 7198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7128,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 7128,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7327,
											"end": 7406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 7327,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 7289,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7517,
											"end": 7524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7497,
											"end": 7506,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7472,
											"end": 7525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7472,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7462,
											"end": 7525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7462,
											"end": 7525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7548,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7548,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7673,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7683,
											"end": 7698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 7721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7722,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7774,
											"end": 7777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7793,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7813,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7793,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 7813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 7813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7845,
											"end": 7846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7827,
											"end": 7847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7827,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7847,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 7871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7863,
											"end": 7872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7856,
											"end": 7872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7856,
											"end": 7872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7894,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7885,
											"end": 7895,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7918,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7882,
											"end": 7918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7898,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7918,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7882,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7971,
											"end": 7975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 8009,
											"end": 8010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7991,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7991,
											"end": 8011,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 7991,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 8011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 8011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8025,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8062,
											"end": 8071,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8093,
											"end": 8094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8095,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8118,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8081,
											"end": 8118,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8098,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8118,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 8081,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8194,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8228,
											"end": 8248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8248,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8285,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8323,
											"end": 8334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8305,
											"end": 8335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8335,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8305,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8294,
											"end": 8335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8484,
											"end": 8485,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8475,
											"end": 8482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8486,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8465,
											"end": 8487,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8447,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8501,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8395,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8395,
											"end": 8534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8514,
											"end": 8532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8395,
											"end": 8534,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 8395,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8547,
											"end": 8727,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 8547,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8672,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8592,
											"end": 8593,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8682,
											"end": 8697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8720,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8849,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8839,
											"end": 8858,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8886,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8882,
											"end": 8896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8867,
											"end": 8896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8867,
											"end": 8896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9137,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8908,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9082,
											"name": "PUSH",
											"source": 9,
											"value": "77697468647261773A2063616E2774207769746864726177206D6F7265207468"
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9129,
											"name": "PUSH",
											"source": 9,
											"value": "616E206465706F73697400000000000000000000000000000000000000000000"
										},
										{
											"begin": 9112,
											"end": 9114,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9104,
											"end": 9110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9285,
											"end": 9288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 9370,
											"end": 9372,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 9365,
											"end": 9368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9306,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9373,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9299,
											"end": 9373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9471,
											"end": 9474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9382,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9495,
											"end": 9498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9484,
											"end": 9503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9762,
											"end": 9766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9758,
											"end": 9778,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9754,
											"end": 9755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9739,
											"end": 9756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9732,
											"end": 9779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9922,
											"end": 9926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9796,
											"end": 9927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10120,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9940,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9988,
											"end": 10065,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9985,
											"end": 9986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 10066,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10075,
											"end": 10090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10109,
											"end": 10113,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 10183,
											"end": 10203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10217,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10217,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 10217,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10217,
											"end": 10237,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 10217,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10256,
											"end": 10257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10246,
											"end": 10281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 10261,
											"end": 10279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10281,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10246,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10538,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10317,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10457,
											"end": 10491,
											"name": "PUSH",
											"source": 9,
											"value": "66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73"
										},
										{
											"begin": 10453,
											"end": 10454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10441,
											"end": 10455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10434,
											"end": 10492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10526,
											"end": 10530,
											"name": "PUSH",
											"source": 9,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10521,
											"end": 10523,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10513,
											"end": 10519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10509,
											"end": 10524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10317,
											"end": 10538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10910,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 10544,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10771,
											"end": 10773,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10766,
											"end": 10769,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 10707,
											"end": 10774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10774,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 10707,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10700,
											"end": 10774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10700,
											"end": 10774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10872,
											"end": 10875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 10783,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10876,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 10783,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 10904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 10904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10885,
											"end": 10904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10910,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10544,
											"end": 10910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 11335,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 10916,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11082,
											"end": 11086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11120,
											"end": 11122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11109,
											"end": 11118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11163,
											"end": 11167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11159,
											"end": 11179,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11153,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11140,
											"end": 11157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11133,
											"end": 11180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11323,
											"end": 11327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 11197,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11328,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11197,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11189,
											"end": 11328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11189,
											"end": 11328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 11335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 11335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 11335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 11335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11489,
											"end": 11498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11581,
											"end": 11582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11570,
											"end": 11579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11557,
											"end": 11563,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 11513,
											"end": 11584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 11513,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11651,
											"end": 11660,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11638,
											"end": 11644,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11594,
											"end": 11666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11594,
											"end": 11666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11733,
											"end": 11738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11758,
											"end": 11771,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11749,
											"end": 11771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11749,
											"end": 11771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 11804,
											"end": 11809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 11780,
											"end": 11810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11810,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 11780,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11679,
											"end": 11816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11889,
											"end": 11895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 11940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11926,
											"end": 11935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11917,
											"end": 11924,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11913,
											"end": 11936,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11909,
											"end": 11941,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11906,
											"end": 12025,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11906,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 11906,
											"end": 12025,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11944,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11944,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11944,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11944,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 11944,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11906,
											"end": 12025,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 11906,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12064,
											"end": 12065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 12142,
											"end": 12149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12133,
											"end": 12139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12122,
											"end": 12131,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12118,
											"end": 12140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12089,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 12089,
											"end": 12150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12089,
											"end": 12150,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 12089,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12079,
											"end": 12150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12079,
											"end": 12150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12035,
											"end": 12160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11822,
											"end": 12167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12362,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12345,
											"end": 12363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12373,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 12441,
											"end": 12442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12430,
											"end": 12439,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12426,
											"end": 12443,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12417,
											"end": 12423,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12373,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 12373,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12373,
											"end": 12444,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 12373,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 12522,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12507,
											"end": 12525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12498,
											"end": 12504,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 12454,
											"end": 12526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12526,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 12454,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 12604,
											"end": 12606,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12589,
											"end": 12607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12580,
											"end": 12586,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 12536,
											"end": 12608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12608,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 12536,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/openzeppelin/FarmingC2N.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"add(uint256,address,bool)": "1eaaa045",
							"deposit(uint256,uint256)": "e2bbb158",
							"deposited(uint256,address)": "a2383106",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"endTimestamp()": "a85adeab",
							"erc20()": "785e9e86",
							"fund(uint256)": "ca1d209d",
							"massUpdatePools()": "630b5ba1",
							"owner()": "8da5cb5b",
							"paidOut()": "5c76ca2d",
							"pending(uint256,address)": "e4c75c27",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceOwnership()": "715018a6",
							"rewardPerSecond()": "8f10369a",
							"set(uint256,uint256,bool)": "64482f79",
							"startTimestamp()": "e6fd48bc",
							"totalAllocPoint()": "17caf6f1",
							"totalPending()": "3f90916a",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accERC20PerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/FarmingC2N.sol\":\"FarmingC2N\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/openzeppelin/FarmingC2N.sol\":{\"keccak256\":\"0xb5a5dffa889f89db76451328c9f6113179dc1a25ce6b998734ad256d41849165\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f231f149e46265ebe95a90d3456ada5f59366af24add56db386854bdc0289dc\",\"dweb:/ipfs/QmcsDw7dRrTWxnDRyuxR7Bic6VA6jvLbD2FigkYru1991p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 797,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "erc20",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 799,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "paidOut",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 801,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "rewardPerSecond",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 803,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "totalRewards",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 807,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "poolInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(PoolInfo)794_storage)dyn_storage"
							},
							{
								"astId": 814,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)782_storage))"
							},
							{
								"astId": 816,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 818,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "startTimestamp",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 820,
								"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
								"label": "endTimestamp",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)794_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)794_storage",
								"encoding": "dynamic_array",
								"label": "struct FarmingC2N.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)782_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FarmingC2N.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)782_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)782_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)782_storage)"
							},
							"t_struct(PoolInfo)794_storage": {
								"encoding": "inplace",
								"label": "struct FarmingC2N.PoolInfo",
								"members": [
									{
										"astId": 785,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)315"
									},
									{
										"astId": 787,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 789,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "lastRewardTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 791,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "accERC20PerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 793,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "totalDeposits",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)782_storage": {
								"encoding": "inplace",
								"label": "struct FarmingC2N.UserInfo",
								"members": [
									{
										"astId": 779,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 781,
										"contract": "contracts/openzeppelin/FarmingC2N.sol:FarmingC2N",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 755,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								754
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							766
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 766,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 766,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								766,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							766
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 767,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 766,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 725,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 725,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 724,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 724,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2548:139:5",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2558:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 404,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$724",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$724",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2612:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 400,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2581:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2581:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2643:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2650:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2659:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2674:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2630:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2493:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2493:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2493:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2507:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2524:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:5"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:5"
									},
									"scope": 724,
									"src": "2462:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "3453:370:5",
										"statements": [
											{
												"id": 459,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:5",
												"statements": [
													{
														"assignments": [
															430
														],
														"declarations": [
															{
																"constant": false,
																"id": 430,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 459,
																"src": "3487:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 439,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$724",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$724",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3545:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 431,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3514:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "3514:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 440,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3571:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 441,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "3590:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 450,
														"nodeType": "IfStatement",
														"src": "3567:160:5",
														"trueBody": {
															"id": 449,
															"nodeType": "Block",
															"src": "3609:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 444,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3667:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 445,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "3676:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 446,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3694:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 443,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "3634:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 448,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 452,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3753:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 453,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3760:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 454,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "3769:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 455,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "3788:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 451,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "3740:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 458,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3386:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3386:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3386:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "3417:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:5"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:5"
									},
									"scope": 724,
									"src": "3355:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "4477:303:5",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 507,
														"src": "4487:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 476,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4530:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4530:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 478,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "4546:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 479,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4555:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 480,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 474,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:5"
											},
											{
												"condition": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 484,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4602:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 485,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "4609:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 483,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4578:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "4573:201:5",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "4624:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 489,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4658:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 492,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "4680:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "4680:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 494,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 467,
																						"src": "4696:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 490,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 488,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "4638:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 501,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4743:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 502,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "4750:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 500,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "4723:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4422:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 463,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4422:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4422:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4436:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "4453:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:5"
									},
									"scope": 724,
									"src": "4400:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5227:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 521,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "5241:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5350:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 536,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 537,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5361:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 533,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "5328:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 548,
													"nodeType": "IfStatement",
													"src": "5323:117:5",
													"trueBody": {
														"id": 547,
														"nodeType": "Block",
														"src": "5368:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 543,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 512,
																					"src": "5422:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 541,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 540,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "5389:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 546,
																"nodeType": "RevertStatement",
																"src": "5382:47:5"
															}
														]
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "5237:203:5",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "5262:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 527,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "5289:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 528,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "5296:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 529,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "5300:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 526,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5276:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5156:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 510,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5172:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5184:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5199:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:5"
									},
									"scope": 724,
									"src": "5124:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "5965:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 566,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "5979:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 581,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6102:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 582,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6108:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 583,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6112:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 584,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6119:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 579,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "6076:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 595,
													"nodeType": "IfStatement",
													"src": "6071:127:5",
													"trueBody": {
														"id": 594,
														"nodeType": "Block",
														"src": "6126:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 590,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "6180:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 588,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 587,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6147:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 593,
																"nodeType": "RevertStatement",
																"src": "6140:47:5"
															}
														]
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "5975:223:5",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "6000:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 572,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "6031:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 573,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6038:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 574,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6044:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 575,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "6048:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 571,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6014:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5843:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 553,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5867:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5889:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5909:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5932:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:5"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:5"
									},
									"scope": 724,
									"src": "5798:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "6971:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 611,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "6985:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 625,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7093:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 626,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7097:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 627,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "7104:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 623,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "7072:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 638,
													"nodeType": "IfStatement",
													"src": "7067:116:5",
													"trueBody": {
														"id": 637,
														"nodeType": "Block",
														"src": "7111:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 633,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "7165:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 631,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 630,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7132:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 636,
																"nodeType": "RevertStatement",
																"src": "7125:47:5"
															}
														]
													}
												},
												"id": 639,
												"nodeType": "IfStatement",
												"src": "6981:202:5",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "7006:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 617,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "7033:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 618,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "7040:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 619,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "7044:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "7020:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6900:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 600,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6916:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6928:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "6943:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:5"
									},
									"scope": 724,
									"src": "6869:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "7756:650:5",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "7766:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 652,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:5"
											},
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "7794:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:5",
													"nodeType": "YulBlock",
													"src": "7848:396:5",
													"statements": [
														{
															"nativeSrc": "7862:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:5"
																		},
																		"nativeSrc": "7882:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:5"
																		},
																		"nativeSrc": "7899:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:5"
																		},
																		"nativeSrc": "7916:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:5"
																},
																"nativeSrc": "7877:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:5",
																"nodeType": "YulBlock",
																"src": "7998:157:5",
																"statements": [
																	{
																		"nativeSrc": "8016:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:5"
																			},
																			"nativeSrc": "8027:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:5"
																					},
																					"nativeSrc": "8078:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:5"
																			},
																			"nativeSrc": "8055:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:5"
																		},
																		"nativeSrc": "8055:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:5"
																					},
																					"nativeSrc": "8124:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:5"
																			},
																			"nativeSrc": "8112:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:5"
																		},
																		"nativeSrc": "8112:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:5"
																},
																"nativeSrc": "7982:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:5"
															},
															"nativeSrc": "7979:176:5",
															"nodeType": "YulIf",
															"src": "7979:176:5"
														},
														{
															"nativeSrc": "8168:30:5",
															"nodeType": "YulAssignment",
															"src": "8168:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:5"
																},
																"nativeSrc": "8182:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:5"
																}
															]
														},
														{
															"nativeSrc": "8211:23:5",
															"nodeType": "YulAssignment",
															"src": "8211:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:5"
																},
																"nativeSrc": "8226:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:5",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:5",
														"valueSize": 1
													},
													{
														"declaration": 651,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:5",
														"valueSize": 1
													},
													{
														"declaration": 654,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:5",
														"valueSize": 1
													},
													{
														"declaration": 645,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 656,
												"nodeType": "InlineAssembly",
												"src": "7823:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8258:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "8310:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 662,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "8284:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 660,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "8254:146:5",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "8328:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 675,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "8382:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 673,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 672,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8349:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 678,
															"nodeType": "RevertStatement",
															"src": "8342:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7715:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 643,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7715:6:5"
													},
													"referencedDeclaration": 315,
													"src": "7715:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "7729:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:5"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:5"
									},
									"scope": 724,
									"src": "7686:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "8997:391:5",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9007:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 693,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:5"
											},
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9029:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:5"
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "9057:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 699,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:5",
													"nodeType": "YulBlock",
													"src": "9111:174:5",
													"statements": [
														{
															"nativeSrc": "9125:71:5",
															"nodeType": "YulAssignment",
															"src": "9125:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:5"
																		},
																		"nativeSrc": "9141:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:5"
																		},
																		"nativeSrc": "9158:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:5"
																		},
																		"nativeSrc": "9175:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:5"
																},
																"nativeSrc": "9136:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:5"
																}
															]
														},
														{
															"nativeSrc": "9209:30:5",
															"nodeType": "YulAssignment",
															"src": "9209:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:5"
																},
																"nativeSrc": "9223:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:5"
																}
															]
														},
														{
															"nativeSrc": "9252:23:5",
															"nodeType": "YulAssignment",
															"src": "9252:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:5"
																},
																"nativeSrc": "9267:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:5",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:5",
														"valueSize": 1
													},
													{
														"declaration": 697,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:5",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:5",
														"valueSize": 1
													},
													{
														"declaration": 686,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 702,
												"nodeType": "InlineAssembly",
												"src": "9086:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 703,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "9301:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 704,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "9313:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 715,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "9364:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 709,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 686,
																						"src": "9339:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 707,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 719,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 692,
												"id": 721,
												"nodeType": "Return",
												"src": "9294:87:5"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8941:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 684,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8941:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8941:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8955:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8991:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:5"
									},
									"scope": 724,
									"src": "8908:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 725,
							"src": "698:8692:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 732,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 731,
												"id": 734,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 754,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 741,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 740,
												"id": 743,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 754,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 749,
												"id": 751,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 754,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 755,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							766
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 766,
							"linearizedBaseContracts": [
								766
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 759,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 766,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 767,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/openzeppelin/FarmingC2N.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/FarmingC2N.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"FarmingC2N": [
							1584
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							724
						]
					},
					"id": 1585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 769,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 316,
							"src": "60:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 148,
							"src": "118:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1585,
							"sourceUnit": 725,
							"src": "172:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Ownable",
										"nameLocations": [
											"501:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "501:7:8"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "501:7:8"
								}
							],
							"canonicalName": "FarmingC2N",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1584,
							"linearizedBaseContracts": [
								1584,
								147,
								754
							],
							"name": "FarmingC2N",
							"nameLocation": "487:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 777,
									"libraryName": {
										"id": 774,
										"name": "SafeERC20",
										"nameLocations": [
											"524:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "524:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "518:27:8",
									"typeName": {
										"id": 776,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 775,
											"name": "IERC20",
											"nameLocations": [
												"538:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "538:6:8"
										},
										"referencedDeclaration": 315,
										"src": "538:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "FarmingC2N.UserInfo",
									"id": 782,
									"members": [
										{
											"constant": false,
											"id": 779,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "624:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 782,
											"src": "616:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 778,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "616:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "683:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 782,
											"src": "675:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 780,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "675:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "596:8:8",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "589:772:8",
									"visibility": "public"
								},
								{
									"canonicalName": "FarmingC2N.PoolInfo",
									"id": 794,
									"members": [
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "1437:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 794,
											"src": "1430:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$315",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 784,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 783,
													"name": "IERC20",
													"nameLocations": [
														"1430:6:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "1430:6:8"
												},
												"referencedDeclaration": 315,
												"src": "1430:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 787,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "1501:10:8",
											"nodeType": "VariableDeclaration",
											"scope": 794,
											"src": "1493:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 786,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1493:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 789,
											"mutability": "mutable",
											"name": "lastRewardTimestamp",
											"nameLocation": "1679:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 794,
											"src": "1671:27:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "accERC20PerShare",
											"nameLocation": "1748:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 794,
											"src": "1740:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 790,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1740:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 793,
											"mutability": "mutable",
											"name": "totalDeposits",
											"nameLocation": "1879:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 794,
											"src": "1871:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 792,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1871:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1410:8:8",
									"nodeType": "StructDefinition",
									"scope": 1584,
									"src": "1403:513:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "785e9e86",
									"id": 797,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "1973:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "1959:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 795,
											"name": "IERC20",
											"nameLocations": [
												"1959:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "1959:6:8"
										},
										"referencedDeclaration": 315,
										"src": "1959:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c76ca2d",
									"id": 799,
									"mutability": "mutable",
									"name": "paidOut",
									"nameLocation": "2045:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2030:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 798,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2030:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f10369a",
									"id": 801,
									"mutability": "mutable",
									"name": "rewardPerSecond",
									"nameLocation": "2110:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2095:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2095:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 803,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "2201:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2186:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 802,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2186:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 807,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "2258:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2240:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
										"typeString": "struct FarmingC2N.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 805,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 804,
												"name": "PoolInfo",
												"nameLocations": [
													"2240:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 794,
												"src": "2240:8:8"
											},
											"referencedDeclaration": 794,
											"src": "2240:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
												"typeString": "struct FarmingC2N.PoolInfo"
											}
										},
										"id": 806,
										"nodeType": "ArrayTypeName",
										"src": "2240:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage_ptr",
											"typeString": "struct FarmingC2N.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 814,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "2421:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2365:64:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"
									},
									"typeName": {
										"id": 813,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 808,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2373:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2365:48:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 812,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 809,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2392:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2384:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
												"typeString": "mapping(address => struct FarmingC2N.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 811,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 810,
													"name": "UserInfo",
													"nameLocations": [
														"2403:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 782,
													"src": "2403:8:8"
												},
												"referencedDeclaration": 782,
												"src": "2403:8:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
													"typeString": "struct FarmingC2N.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 816,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "2475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2460:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2460:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fd48bc",
									"id": 818,
									"mutability": "mutable",
									"name": "startTimestamp",
									"nameLocation": "2543:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2528:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2528:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a85adeab",
									"id": 820,
									"mutability": "mutable",
									"name": "endTimestamp",
									"nameLocation": "2608:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1584,
									"src": "2593:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 819,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2593:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 828,
									"name": "Deposit",
									"nameLocation": "2655:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2679:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2663:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2701:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2685:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2714:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "2706:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2662:59:8"
									},
									"src": "2649:73:8"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 836,
									"name": "Withdraw",
									"nameLocation": "2734:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2759:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2743:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2781:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2765:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2794:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2786:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:59:8"
									},
									"src": "2728:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 844,
									"name": "EmergencyWithdraw",
									"nameLocation": "2814:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2848:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2832:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2870:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2854:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2883:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2875:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:59:8"
									},
									"src": "2808:83:8"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3007:162:8",
										"statements": [
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 858,
														"name": "erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3018:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 859,
														"name": "_erc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "3026:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "3018:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "3018:14:8"
											},
											{
												"expression": {
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 862,
														"name": "rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "3043:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 863,
														"name": "_rewardPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "3061:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3043:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "3043:34:8"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 866,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3088:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "3105:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3088:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "3088:32:8"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3131:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "_startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "3146:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3131:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3131:30:8"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 854,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2993:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2997:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2993:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 856,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 853,
												"name": "Ownable",
												"nameLocations": [
													"2985:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2985:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2985:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "2926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2919:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 845,
														"name": "IERC20",
														"nameLocations": [
															"2919:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2919:6:8"
													},
													"referencedDeclaration": 315,
													"src": "2919:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "_rewardPerSecond",
												"nameLocation": "2942:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2934:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "_startTimestamp",
												"nameLocation": "2968:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2960:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:66:8"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3007:0:8"
									},
									"scope": 1584,
									"src": "2907:262:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "3258:41:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 880,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3276:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3285:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3276:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 882,
												"nodeType": "Return",
												"src": "3269:22:8"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "3213:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3223:2:8"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3249:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3248:9:8"
									},
									"scope": 1584,
									"src": "3204:95:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "3391:270:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 890,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3410:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3416:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3410:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 892,
																"name": "endTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "3428:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3410:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f736564",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3442:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															},
															"value": "fund: too late, the farm is closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0",
																"typeString": "literal_string \"fund: too late, the farm is closed\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3402:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3402:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "3402:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 902,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3521:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3525:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3521:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3513:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 900,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3513:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3513:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3542:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FarmingC2N_$1584",
																		"typeString": "contract FarmingC2N"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FarmingC2N_$1584",
																		"typeString": "contract FarmingC2N"
																	}
																],
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3534:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3534:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3534:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3549:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 897,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3490:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3496:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3490:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3490:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "3490:67:8"
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3568:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 913,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3584:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 914,
															"name": "rewardPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "3592:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3584:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3568:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3568:39:8"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "3618:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 919,
															"name": "totalRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3633:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 920,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3646:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3633:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3618:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "3618:35:8"
											}
										]
									},
									"functionSelector": "ca1d209d",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nameLocation": "3362:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3375:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3367:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:17:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3391:0:8"
									},
									"scope": 1584,
									"src": "3353:308:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "3912:465:8",
										"statements": [
											{
												"condition": {
													"id": 937,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "3927:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "IfStatement",
												"src": "3923:61:8",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "3940:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 938,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "3955:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3955:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 940,
															"nodeType": "ExpressionStatement",
															"src": "3955:17:8"
														}
													]
												}
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "lastRewardTimestamp",
														"nameLocation": "4002:19:8",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "3994:27:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3994:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 945,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4024:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4030:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4024:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 947,
															"name": "startTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4042:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4024:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 951,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "4077:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4024:67:8",
													"trueExpression": {
														"expression": {
															"id": 949,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4059:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4065:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4059:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3994:97:8"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 954,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4102:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4120:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 956,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "4136:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4120:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4102:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4102:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 964,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "4202:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 965,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "4234:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 966,
																	"name": "lastRewardTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "4278:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4327:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4355:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "4172:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$794_storage_ptr_$",
																	"typeString": "type(struct FarmingC2N.PoolInfo storage pointer)"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4192:7:8",
																"4221:10:8",
																"4256:19:8",
																"4308:16:8",
																"4339:13:8"
															],
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardTimestamp",
																"accERC20PerShare",
																"totalDeposits"
															],
															"nodeType": "FunctionCall",
															"src": "4172:196:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_memory_ptr",
																"typeString": "struct FarmingC2N.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$794_memory_ptr",
																"typeString": "struct FarmingC2N.PoolInfo memory"
															}
														],
														"expression": {
															"id": 960,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4158:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
																"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4167:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4158:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$794_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FarmingC2N.PoolInfo storage ref[] storage pointer,struct FarmingC2N.PoolInfo storage ref)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:211:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "4158:211:8"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 934,
												"name": "onlyOwner",
												"nameLocations": [
													"3902:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3902:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3902:9:8"
										}
									],
									"name": "add",
									"nameLocation": "3835:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "3847:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3839:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "3867:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3860:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 928,
														"name": "IERC20",
														"nameLocations": [
															"3860:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3860:6:8"
													},
													"referencedDeclaration": 315,
													"src": "3860:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "3882:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "3877:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3877:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3838:56:8"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:8"
									},
									"scope": 1584,
									"src": "3826:551:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "4557:211:8",
										"statements": [
											{
												"condition": {
													"id": 984,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 979,
													"src": "4572:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "4568:61:8",
												"trueBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "4585:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "4600:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4600:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "4600:17:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 990,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4639:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "4657:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 992,
																		"name": "poolInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "4673:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
																			"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
																		}
																	},
																	"id": 994,
																	"indexExpression": {
																		"id": 993,
																		"name": "_pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "4682:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4673:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
																		"typeString": "struct FarmingC2N.PoolInfo storage ref"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4688:10:8",
																"memberName": "allocPoint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "4673:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4657:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 997,
															"name": "_allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4699:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4657:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4639:71:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "4639:71:8"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1001,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "4721:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
																	"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1003,
															"indexExpression": {
																"id": 1002,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "4730:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4721:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
																"typeString": "struct FarmingC2N.PoolInfo storage ref"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4736:10:8",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "4721:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1005,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "4749:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4721:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "4721:39:8"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 982,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 981,
												"name": "onlyOwner",
												"nameLocations": [
													"4547:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4547:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4547:9:8"
										}
									],
									"name": "set",
									"nameLocation": "4483:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4495:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4487:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "4509:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4501:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "4527:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4522:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4522:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4486:53:8"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4557:0:8"
									},
									"scope": 1584,
									"src": "4474:294:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "4910:93:8",
										"statements": [
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4938:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "4921:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 1019,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1018,
																"name": "UserInfo",
																"nameLocations": [
																	"4921:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 782,
																"src": "4921:8:8"
															},
															"referencedDeclaration": 782,
															"src": "4921:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1021,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4945:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 1023,
														"indexExpression": {
															"id": 1022,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "4954:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4945:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 1025,
													"indexExpression": {
														"id": 1024,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "4960:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4945:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$782_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4921:45:8"
											},
											{
												"expression": {
													"expression": {
														"id": 1027,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "4984:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo storage pointer"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4989:6:8",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 779,
													"src": "4984:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1029,
												"nodeType": "Return",
												"src": "4977:18:8"
											}
										]
									},
									"functionSelector": "a2383106",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposited",
									"nameLocation": "4839:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "4857:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4849:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4871:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4863:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4848:29:8"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "4901:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:9:8"
									},
									"scope": 1584,
									"src": "4830:173:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "5145:848:8",
										"statements": [
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5173:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "5156:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 1041,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1040,
																"name": "PoolInfo",
																"nameLocations": [
																	"5156:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 794,
																"src": "5156:8:8"
															},
															"referencedDeclaration": 794,
															"src": "5156:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"baseExpression": {
														"id": 1043,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "5180:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1045,
													"indexExpression": {
														"id": 1044,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5189:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5180:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5156:38:8"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "5222:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "5205:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 1048,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1047,
																"name": "UserInfo",
																"nameLocations": [
																	"5205:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 782,
																"src": "5205:8:8"
															},
															"referencedDeclaration": 782,
															"src": "5205:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1050,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5229:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 1052,
														"indexExpression": {
															"id": 1051,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "5238:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5229:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 1054,
													"indexExpression": {
														"id": 1053,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "5244:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5229:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$782_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5205:45:8"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "accERC20PerShare",
														"nameLocation": "5269:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "5261:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5261:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"expression": {
														"id": 1058,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5288:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5293:16:8",
													"memberName": "accERC20PerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 791,
													"src": "5288:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5261:48:8"
											},
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "5330:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "5322:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1061,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"expression": {
														"id": 1063,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "5341:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5346:13:8",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 793,
													"src": "5341:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5322:37:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1066,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5376:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5382:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5376:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1068,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "5394:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5399:19:8",
															"memberName": "lastRewardTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 789,
															"src": "5394:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5376:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1071,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "5422:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5434:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5422:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5376:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "5372:547:8",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "5437:482:8",
													"statements": [
														{
															"assignments": [
																1076
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1076,
																	"mutability": "mutable",
																	"name": "lastTimestamp",
																	"nameLocation": "5460:13:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1125,
																	"src": "5452:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1075,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5452:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1085,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1077,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5476:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5482:9:8",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5476:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1079,
																		"name": "endTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "5494:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5476:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 1083,
																	"name": "endTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "5527:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5476:63:8",
																"trueExpression": {
																	"expression": {
																		"id": 1081,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5509:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5515:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5509:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5452:87:8"
														},
														{
															"assignments": [
																1087
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1087,
																	"mutability": "mutable",
																	"name": "timestampToCompare",
																	"nameLocation": "5562:18:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1125,
																	"src": "5554:26:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1086,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5554:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1096,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1088,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5583:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																				"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5588:19:8",
																		"memberName": "lastRewardTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 789,
																		"src": "5583:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1090,
																		"name": "endTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "5610:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5583:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 1094,
																	"name": "endTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "5652:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5583:81:8",
																"trueExpression": {
																	"expression": {
																		"id": 1092,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5625:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																			"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5630:19:8",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 789,
																	"src": "5625:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5554:110:8"
														},
														{
															"assignments": [
																1098
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1098,
																	"mutability": "mutable",
																	"name": "nrOfSeconds",
																	"nameLocation": "5687:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1125,
																	"src": "5679:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5679:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1102,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1099,
																	"name": "lastTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "5701:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1100,
																	"name": "timestampToCompare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "5715:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5701:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5679:54:8"
														},
														{
															"assignments": [
																1104
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1104,
																	"mutability": "mutable",
																	"name": "erc20Reward",
																	"nameLocation": "5756:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1125,
																	"src": "5748:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5748:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1113,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1105,
																			"name": "nrOfSeconds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "5770:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1106,
																			"name": "rewardPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 801,
																			"src": "5782:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5770:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1108,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5798:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																				"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5803:10:8",
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "5798:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5770:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1111,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "5814:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5770:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5748:81:8"
														},
														{
															"expression": {
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1114,
																	"name": "accERC20PerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "5844:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1115,
																		"name": "accERC20PerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "5863:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1116,
																						"name": "erc20Reward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "5881:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "31653336",
																						"id": 1117,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5893:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																							"typeString": "int_const 1000...(29 digits omitted)...0000"
																						},
																						"value": "1e36"
																					},
																					"src": "5881:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1119,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "5898:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5881:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1121,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5880:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5863:44:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5844:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1124,
															"nodeType": "ExpressionStatement",
															"src": "5844:63:8"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1127,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5936:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5941:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "5936:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1129,
																"name": "accERC20PerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "5948:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5936:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653336",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5965:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(29 digits omitted)...0000"
															},
															"value": "1e36"
														},
														"src": "5936:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1133,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "5970:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5975:10:8",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "5970:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5936:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1136,
												"nodeType": "Return",
												"src": "5929:56:8"
											}
										]
									},
									"functionSelector": "e4c75c27",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pending",
									"nameLocation": "5076:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "5092:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5084:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5106:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5098:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5083:29:8"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5136:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:9:8"
									},
									"scope": 1584,
									"src": "5067:926:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "6125:266:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1143,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6140:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6146:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6140:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1145,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "6159:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6140:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "6136:74:8",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "6175:35:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6197:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1142,
															"id": 1148,
															"nodeType": "Return",
															"src": "6190:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "6230:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1171,
														"src": "6222:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6222:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1153,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6246:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6252:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6246:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1155,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6264:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6246:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1159,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "6297:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6246:63:8",
													"trueExpression": {
														"expression": {
															"id": 1157,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6279:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6285:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6279:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6222:87:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1162,
															"name": "rewardPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6327:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1163,
																		"name": "lastTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "6344:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1164,
																		"name": "startTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "6360:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6344:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1166,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6343:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6327:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1168,
														"name": "paidOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "6376:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6327:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1170,
												"nodeType": "Return",
												"src": "6320:63:8"
											}
										]
									},
									"functionSelector": "3f90916a",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPending",
									"nameLocation": "6078:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6090:2:8"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "6116:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6115:9:8"
									},
									"scope": 1584,
									"src": "6069:322:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "6508:146:8",
										"statements": [
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6527:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "6519:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6519:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"expression": {
														"id": 1177,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6536:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6545:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6536:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6519:32:8"
											},
											{
												"body": {
													"id": 1194,
													"nodeType": "Block",
													"src": "6605:42:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1191,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "6631:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1190,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "6620:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6620:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "6620:15:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "6584:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1185,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "6590:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6584:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"initializationExpression": {
													"assignments": [
														1181
													],
													"declarations": [
														{
															"constant": false,
															"id": 1181,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "6575:3:8",
															"nodeType": "VariableDeclaration",
															"scope": 1195,
															"src": "6567:11:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1180,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6567:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1183,
													"initialValue": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6581:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6567:15:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6598:5:8",
														"subExpression": {
															"id": 1187,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "6600:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1189,
													"nodeType": "ExpressionStatement",
													"src": "6598:5:8"
												},
												"nodeType": "ForStatement",
												"src": "6562:85:8"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "6483:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6498:2:8"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6508:0:8"
									},
									"scope": 1584,
									"src": "6474:180:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "6771:716:8",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "6799:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "6782:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 1203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1202,
																"name": "PoolInfo",
																"nameLocations": [
																	"6782:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 794,
																"src": "6782:8:8"
															},
															"referencedDeclaration": 794,
															"src": "6782:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"baseExpression": {
														"id": 1205,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6806:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1207,
													"indexExpression": {
														"id": 1206,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "6815:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6806:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6782:38:8"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "lastTimestamp",
														"nameLocation": "6839:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "6831:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6831:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1211,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6855:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6861:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6855:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1213,
															"name": "endTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6873:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6855:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1217,
														"name": "endTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "6906:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6855:63:8",
													"trueExpression": {
														"expression": {
															"id": 1215,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6888:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6894:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6888:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6831:87:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "lastTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "6935:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1221,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "6952:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6957:19:8",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "6952:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6935:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "6931:80:8",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "6978:33:8",
													"statements": [
														{
															"functionReturnParameters": 1201,
															"id": 1224,
															"nodeType": "Return",
															"src": "6993:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "7029:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "7021:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7021:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"expression": {
														"id": 1229,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "7040:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo storage pointer"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7045:13:8",
													"memberName": "totalDeposits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 793,
													"src": "7040:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7021:37:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1232,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "7075:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7087:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7075:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "7071:107:8",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "7090:88:8",
													"statements": [
														{
															"expression": {
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1235,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "7105:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																			"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7110:19:8",
																	"memberName": "lastRewardTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 789,
																	"src": "7105:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1238,
																	"name": "lastTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "7132:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7105:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1240,
															"nodeType": "ExpressionStatement",
															"src": "7105:40:8"
														},
														{
															"functionReturnParameters": 1201,
															"id": 1241,
															"nodeType": "Return",
															"src": "7160:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "nrOfSeconds",
														"nameLocation": "7198:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "7190:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7190:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1246,
														"name": "lastTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "7212:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1247,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7226:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7231:19:8",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "7226:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7212:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7190:60:8"
											},
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "erc20Reward",
														"nameLocation": "7269:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "7261:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7261:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "nrOfSeconds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "7283:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1254,
																"name": "rewardPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "7295:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7283:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1256,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "7311:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7316:10:8",
															"memberName": "allocPoint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 787,
															"src": "7311:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7283:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1259,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "7327:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7283:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7261:81:8"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1262,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7355:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7360:16:8",
														"memberName": "accERC20PerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "7355:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1265,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "7379:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7384:16:8",
															"memberName": "accERC20PerShare",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 791,
															"src": "7379:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1267,
																	"name": "erc20Reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "7401:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653336",
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																		"typeString": "int_const 1000...(29 digits omitted)...0000"
																	},
																	"value": "1e36"
																},
																"src": "7401:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1270,
																"name": "lpSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "7418:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7401:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7379:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7355:71:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "7355:71:8"
											},
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1275,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "7437:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7442:19:8",
														"memberName": "lastRewardTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 789,
														"src": "7437:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1278,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7464:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7470:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7464:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7437:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "7437:42:8"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "6739:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "6758:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "6750:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6750:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6749:14:8"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6771:0:8"
									},
									"scope": 1584,
									"src": "6730:757:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "7606:648:8",
										"statements": [
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7634:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "7617:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 1291,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1290,
																"name": "PoolInfo",
																"nameLocations": [
																	"7617:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 794,
																"src": "7617:8:8"
															},
															"referencedDeclaration": 794,
															"src": "7617:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"baseExpression": {
														"id": 1293,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "7641:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1295,
													"indexExpression": {
														"id": 1294,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "7650:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7641:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7617:38:8"
											},
											{
												"assignments": [
													1299
												],
												"declarations": [
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7683:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "7666:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 1298,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1297,
																"name": "UserInfo",
																"nameLocations": [
																	"7666:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 782,
																"src": "7666:8:8"
															},
															"referencedDeclaration": 782,
															"src": "7666:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1300,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "7690:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 1302,
														"indexExpression": {
															"id": 1301,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "7699:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7690:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 1305,
													"indexExpression": {
														"expression": {
															"id": 1303,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7705:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7709:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7705:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7690:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$782_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7666:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "7740:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1307,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "7729:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7729:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "7729:16:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1311,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "7762:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7767:6:8",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "7762:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7776:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7762:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "7758:181:8",
												"trueBody": {
													"id": 1334,
													"nodeType": "Block",
													"src": "7779:160:8",
													"statements": [
														{
															"assignments": [
																1316
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1316,
																	"mutability": "mutable",
																	"name": "pendingAmount",
																	"nameLocation": "7802:13:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1334,
																	"src": "7794:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1315,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7794:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1327,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1317,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1299,
																				"src": "7818:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																					"typeString": "struct FarmingC2N.UserInfo storage pointer"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7823:6:8",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 779,
																			"src": "7818:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"id": 1319,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "7830:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																					"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																				}
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7835:16:8",
																			"memberName": "accERC20PerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 791,
																			"src": "7830:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7818:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31653336",
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7852:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																			"typeString": "int_const 1000...(29 digits omitted)...0000"
																		},
																		"value": "1e36"
																	},
																	"src": "7818:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1324,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "7857:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																			"typeString": "struct FarmingC2N.UserInfo storage pointer"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7862:10:8",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 781,
																	"src": "7857:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7818:54:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7794:78:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1329,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7901:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7905:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7901:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1331,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "7913:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1328,
																	"name": "erc20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "7887:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7887:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1333,
															"nodeType": "ExpressionStatement",
															"src": "7887:40:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1343,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7989:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7993:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7989:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7981:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7981:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7981:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1348,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8010:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FarmingC2N_$1584",
																		"typeString": "contract FarmingC2N"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FarmingC2N_$1584",
																		"typeString": "contract FarmingC2N"
																	}
																],
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8002:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8002:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8002:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "8017:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1336,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "7951:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7956:7:8",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "7951:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7964:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "7951:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "7951:74:8"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1353,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "8036:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8041:13:8",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "8036:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1356,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "8057:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8062:13:8",
															"memberName": "totalDeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "8057:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1358,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "8076:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8057:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8036:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "8036:47:8"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1362,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8096:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8101:6:8",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "8096:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1365,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "8110:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8115:6:8",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "8110:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1367,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "8122:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8110:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8096:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "8096:33:8"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1371,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8140:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8145:10:8",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "8140:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1374,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "8158:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8163:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "8158:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1376,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "8170:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8175:16:8",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "8170:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8158:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653336",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8192:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(29 digits omitted)...0000"
															},
															"value": "1e36"
														},
														"src": "8158:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8140:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "8140:56:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8220:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8224:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8220:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1386,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "8232:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1387,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "8238:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "8212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8212:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "EmitStatement",
												"src": "8207:39:8"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "7560:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "7576:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "7568:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "7582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:31:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7606:0:8"
									},
									"scope": 1584,
									"src": "7551:703:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "8413:718:8",
										"statements": [
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8441:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1496,
														"src": "8424:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 1399,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1398,
																"name": "PoolInfo",
																"nameLocations": [
																	"8424:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 794,
																"src": "8424:8:8"
															},
															"referencedDeclaration": 794,
															"src": "8424:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"baseExpression": {
														"id": 1401,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "8448:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1403,
													"indexExpression": {
														"id": 1402,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "8457:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8448:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8424:38:8"
											},
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "8490:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1496,
														"src": "8473:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 1406,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1405,
																"name": "UserInfo",
																"nameLocations": [
																	"8473:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 782,
																"src": "8473:8:8"
															},
															"referencedDeclaration": 782,
															"src": "8473:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1408,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "8497:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 1410,
														"indexExpression": {
															"id": 1409,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "8506:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8497:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 1413,
													"indexExpression": {
														"expression": {
															"id": 1411,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8512:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8516:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8512:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8497:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$782_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8473:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1416,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "8542:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8547:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "8542:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1418,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "8557:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8542:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f736974",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8566:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															},
															"value": "withdraw: can't withdraw more than deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2",
																"typeString": "literal_string \"withdraw: can't withdraw more than deposit\""
															}
														],
														"id": 1415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "8534:77:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1424,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "8633:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1423,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "8622:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8622:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "8622:16:8"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "8684:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1496,
														"src": "8676:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8676:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1429,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "8700:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8705:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "8700:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1431,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "8712:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8717:16:8",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "8712:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8700:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653336",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8734:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(29 digits omitted)...0000"
															},
															"value": "1e36"
														},
														"src": "8700:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1436,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "8739:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8744:10:8",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "8739:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8700:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8676:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1441,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8781:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8785:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8781:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "pendingAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "8793:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "erc20Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "8767:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8767:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "8767:40:8"
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1446,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "8818:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8823:6:8",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "8818:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1449,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "8832:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8837:6:8",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "8832:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1451,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "8844:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8832:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8818:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "8818:33:8"
											},
											{
												"expression": {
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1455,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "8862:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8867:10:8",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "8862:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1458,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "8880:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																		"typeString": "struct FarmingC2N.UserInfo storage pointer"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8885:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "8880:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"expression": {
																	"id": 1460,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "8892:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																		"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8897:16:8",
																"memberName": "accERC20PerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "8892:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8880:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653336",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
																"typeString": "int_const 1000...(29 digits omitted)...0000"
															},
															"value": "1e36"
														},
														"src": "8880:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8862:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "8862:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1474,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8991:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8995:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8991:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8983:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8983:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8983:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1477,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "9004:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1467,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "8957:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8962:7:8",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "8957:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8970:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "8957:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8957:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "8957:55:8"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1480,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "9023:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9028:13:8",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "9023:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1483,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "9044:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9049:13:8",
															"memberName": "totalDeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "9044:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1485,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "9063:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9044:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9023:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "9023:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1490,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9097:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9101:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9097:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "9109:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1493,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "9115:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1489,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "9088:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9088:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "9083:40:8"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "8366:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "8383:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "8375:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8375:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8397:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "8389:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8389:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8374:31:8"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8413:0:8"
									},
									"scope": 1584,
									"src": "8357:774:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "9250:370:8",
										"statements": [
											{
												"assignments": [
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9278:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "9261:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
															"typeString": "struct FarmingC2N.PoolInfo"
														},
														"typeName": {
															"id": 1503,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1502,
																"name": "PoolInfo",
																"nameLocations": [
																	"9261:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 794,
																"src": "9261:8:8"
															},
															"referencedDeclaration": 794,
															"src": "9261:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1508,
												"initialValue": {
													"baseExpression": {
														"id": 1505,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "9285:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$794_storage_$dyn_storage",
															"typeString": "struct FarmingC2N.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1507,
													"indexExpression": {
														"id": 1506,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "9294:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9285:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$794_storage",
														"typeString": "struct FarmingC2N.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9261:38:8"
											},
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9327:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "9310:21:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
															"typeString": "struct FarmingC2N.UserInfo"
														},
														"typeName": {
															"id": 1510,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1509,
																"name": "UserInfo",
																"nameLocations": [
																	"9310:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 782,
																"src": "9310:8:8"
															},
															"referencedDeclaration": 782,
															"src": "9310:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1512,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "9334:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"
															}
														},
														"id": 1514,
														"indexExpression": {
															"id": 1513,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "9343:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9334:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$782_storage_$",
															"typeString": "mapping(address => struct FarmingC2N.UserInfo storage ref)"
														}
													},
													"id": 1517,
													"indexExpression": {
														"expression": {
															"id": 1515,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9349:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9353:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9349:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9334:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$782_storage",
														"typeString": "struct FarmingC2N.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9310:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1526,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9405:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9409:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9405:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9397:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1524,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9397:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9397:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1529,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "9418:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9423:6:8",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "9418:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1519,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "9371:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9376:7:8",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "9371:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9384:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "9371:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9371:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "9371:59:8"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1533,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "9441:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																"typeString": "struct FarmingC2N.PoolInfo storage pointer"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9446:13:8",
														"memberName": "totalDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "9441:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1536,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "9462:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$794_storage_ptr",
																	"typeString": "struct FarmingC2N.PoolInfo storage pointer"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9467:13:8",
															"memberName": "totalDeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "9462:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1538,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "9481:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9486:6:8",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "9481:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9462:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9441:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "9441:51:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1544,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9526:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9530:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9526:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "9538:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1547,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "9544:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																	"typeString": "struct FarmingC2N.UserInfo storage pointer"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9549:6:8",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "9544:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "9508:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "EmitStatement",
												"src": "9503:53:8"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1551,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "9567:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9572:6:8",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "9567:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9581:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9567:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "9567:15:8"
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1557,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "9593:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$782_storage_ptr",
																"typeString": "struct FarmingC2N.UserInfo storage pointer"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9598:10:8",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "9593:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9611:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9593:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "9593:19:8"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "9211:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "9237:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "9229:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9228:14:8"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9250:0:8"
									},
									"scope": 1584,
									"src": "9202:418:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "9765:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1574,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "9791:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "9796:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1571,
															"name": "erc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9776:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9782:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "9776:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9776:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "9776:28:8"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "paidOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9815:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1579,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "9826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9815:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "9815:18:8"
											}
										]
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "erc20Transfer",
									"nameLocation": "9712:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9734:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "9726:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9747:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "9739:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9739:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9725:30:8"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9765:0:8"
									},
									"scope": 1584,
									"src": "9703:138:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1585,
							"src": "478:9366:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								828,
								836,
								844
							]
						}
					],
					"src": "33:9813:8"
				},
				"id": 8
			}
		}
	}
}