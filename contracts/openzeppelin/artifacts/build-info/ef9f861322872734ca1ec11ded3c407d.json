{
	"id": "ef9f861322872734ca1ec11ded3c407d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/openzeppelin/VerifySignature2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\";\r\ncontract VerifySignature2 {\r\n    using ECDSA for bytes32;\r\n    using MessageHashUtils for bytes32;\r\n\r\n    function recover(string memory str, bytes memory signature) external pure returns(address) {\r\n        bytes32 hash = keccak256(bytes(str));\r\n\r\n        return hash.toEthSignedMessageHash().recover(signature);\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0-rc.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0-rc.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0-rc.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0-rc.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0-rc.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/openzeppelin/VerifySignature2.sol": {
				"VerifySignature2": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "recover",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/openzeppelin/VerifySignature2.sol\":315:638  contract VerifySignature2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":315:638  contract VerifySignature2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cebfb64\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":421:635  function recover(string memory str, bytes memory signature) external pure returns(address) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":503:510  address */\n      0x00\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":523:535  bytes32 hash */\n      dup1\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":554:557  str */\n      dup4\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":538:559  keccak256(bytes(str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":523:559  bytes32 hash = keccak256(bytes(str)) */\n      swap1\n      pop\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:627  hash.toEthSignedMessageHash().recover(signature) */\n      tag_11\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":617:626  signature */\n      dup4\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:608  hash.toEthSignedMessageHash() */\n      tag_12\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:583  hash */\n      dup4\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:606  hash.toEthSignedMessageHash */\n      tag_13\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:608  hash.toEthSignedMessageHash() */\n      jump\t// in\n    tag_12:\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:616  hash.toEthSignedMessageHash().recover */\n      tag_14\n      swap1\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":579:627  hash.toEthSignedMessageHash().recover(signature) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_11:\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":572:627  return hash.toEthSignedMessageHash().recover(signature) */\n      swap2\n      pop\n      pop\n        /* \"contracts/openzeppelin/VerifySignature2.sol\":421:635  function recover(string memory str, bytes memory signature) external pure returns(address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1227:1687  function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {... */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1303:1317  bytes32 digest */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1408:1442  \"\\x19Ethereum Signed Message:\\n32\" */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1402:1406  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1395:1443  mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1510:1521  messageHash */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1504:1508  0x1c */\n      0x1c\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1497:1522  mstore(0x1c, messageHash) */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1602:1606  0x3c */\n      0x3c\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1596:1600  0x00 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1586:1607  keccak256(0x00, 0x3c) */\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1576:1607  digest := keccak256(0x00, 0x3c) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":1227:1687  function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3707:3962  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3785:3792  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3805:3822  address recovered */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3824:3842  RecoverError error */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3844:3860  bytes32 errorArg */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3864:3891  tryRecover(hash, signature) */\n      tag_17\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3875:3879  hash */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3881:3890  signature */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3864:3874  tryRecover */\n      tag_18\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3864:3891  tryRecover(hash, signature) */\n      jump\t// in\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3804:3891  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3901:3929  _throwError(error, errorArg) */\n      tag_19\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3913:3918  error */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3920:3928  errorArg */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3901:3912  _throwError */\n      tag_20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3901:3929  _throwError(error, errorArg) */\n      jump\t// in\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3946:3955  recovered */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3939:3955  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":3707:3962  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2134:2900  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2215:2222  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2224:2236  RecoverError */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2238:2245  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2281:2283  65 */\n      0x41\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2261:2270  signature */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2261:2277  signature.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2261:2283  signature.length == 65 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2257:2894  if (signature.length == 65) {... */\n      tag_22\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2299:2308  bytes32 r */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2322:2331  bytes32 s */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2345:2352  uint8 v */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2597:2601  0x20 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2586:2595  signature */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2582:2602  add(signature, 0x20) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2576:2603  mload(add(signature, 0x20)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2571:2603  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2646:2650  0x40 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2635:2644  signature */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2631:2651  add(signature, 0x40) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2625:2652  mload(add(signature, 0x40)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2620:2652  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2703:2707  0x60 */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2692:2701  signature */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2688:2708  add(signature, 0x60) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2682:2709  mload(add(signature, 0x60)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2679:2680  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2674:2710  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2669:2710  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2744:2769  tryRecover(hash, v, r, s) */\n      tag_23\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2755:2759  hash */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2761:2762  v */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2764:2765  r */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2767:2768  s */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2744:2754  tryRecover */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2744:2769  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2737:2769  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_21)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2257:2894  if (signature.length == 65) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2816:2817  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2820:2855  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2865:2874  signature */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2865:2881  signature.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2857:2882  bytes32(signature.length) */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2800:2883  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":2134:2900  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_21:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7201:7733  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7296:7316  RecoverError.NoError */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7287:7316  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7287:7292  error */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7287:7316  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_29\n      jump\t// in\n    tag_31:\n    tag_30:\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7283:7727  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7332:7339  return; */\n      tag_26\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7283:7727  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7392:7421  RecoverError.InvalidSignature */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7383:7421  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      tag_35\n      tag_29\n      jump\t// in\n    tag_35:\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7383:7388  error */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7383:7421  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_29\n      jump\t// in\n    tag_37:\n    tag_36:\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7379:7727  if (error == RecoverError.InvalidSignature) {... */\n      tag_38\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7444:7467  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7379:7727  if (error == RecoverError.InvalidSignature) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7497:7532  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7488:7532  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_29\n      jump\t// in\n    tag_41:\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7488:7493  error */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7488:7532  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      tag_43\n      tag_29\n      jump\t// in\n    tag_43:\n    tag_42:\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7484:7727  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_44\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7591:7599  errorArg */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7583:7600  uint256(errorArg) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7555:7601  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7484:7727  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7631:7661  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7622:7661  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      tag_49\n      tag_29\n      jump\t// in\n    tag_49:\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7622:7627  error */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7622:7661  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      tag_51\n      tag_29\n      jump\t// in\n    tag_51:\n    tag_50:\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7618:7727  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_52\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7707:7715  errorArg */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7684:7716  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7618:7727  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":7201:7733  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_26:\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":5145:6675  function tryRecover(... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":5271:5278  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":5280:5292  RecoverError */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":5294:5301  bytes32 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6204:6270  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6199:6200  s */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6191:6201  uint256(s) */\n      0x00\n      shr\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6191:6270  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6187:6351  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6302:6303  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6306:6336  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6338:6339  s */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6286:6340  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_55)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6187:6351  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6445:6459  address signer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6462:6486  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6472:6476  hash */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6478:6479  v */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6481:6482  r */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6484:6485  s */\n      dup9\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6462:6486  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_57\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6445:6486  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6518:6519  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6500:6520  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6500:6506  signer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6500:6520  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6496:6609  if (signer == address(0)) {... */\n      tag_61\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6552:6553  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6556:6585  RecoverError.InvalidSignature */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6595:6596  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6587:6597  bytes32(0) */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6536:6598  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_55)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6496:6609  if (signer == address(0)) {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6627:6633  signer */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6635:6655  RecoverError.NoError */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6665:6666  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6657:6667  bytes32(0) */\n      0x00\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":6619:6668  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":5145:6675  function tryRecover(... */\n    tag_55:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_62:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_63:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_64:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_65:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_66:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_67:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_68:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_69:\n        /* \"#utility.yul\":957:984   */\n      tag_96\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_67\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_98\n      tag_68\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1030:1118   */\n    tag_97:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_70:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_100\n      tag_62\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_101\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_69\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_71:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_104\n      tag_68\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1434:1490   */\n    tag_103:\n        /* \"#utility.yul\":1508:1537   */\n      tag_105\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_67\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1758   */\n    tag_72:\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1703:1706   */\n      dup2\n        /* \"#utility.yul\":1698:1701   */\n      dup4\n        /* \"#utility.yul\":1685:1715   */\n      calldatacopy\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1740:1746   */\n      dup4\n        /* \"#utility.yul\":1735:1738   */\n      dup4\n        /* \"#utility.yul\":1731:1747   */\n      add\n        /* \"#utility.yul\":1724:1751   */\n      mstore\n        /* \"#utility.yul\":1610:1758   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2189   */\n    tag_73:\n        /* \"#utility.yul\":1842:1847   */\n      0x00\n        /* \"#utility.yul\":1867:1933   */\n      tag_108\n        /* \"#utility.yul\":1883:1932   */\n      tag_109\n        /* \"#utility.yul\":1925:1931   */\n      dup5\n        /* \"#utility.yul\":1883:1932   */\n      tag_71\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1867:1933   */\n      tag_70\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1858:1933   */\n      swap1\n      pop\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1949:1954   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      mstore\n        /* \"#utility.yul\":1994:1998   */\n      0x20\n        /* \"#utility.yul\":1987:1992   */\n      dup2\n        /* \"#utility.yul\":1983:1999   */\n      add\n        /* \"#utility.yul\":2032:2035   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup5\n        /* \"#utility.yul\":2018:2021   */\n      dup5\n        /* \"#utility.yul\":2014:2030   */\n      add\n        /* \"#utility.yul\":2011:2036   */\n      gt\n        /* \"#utility.yul\":2008:2120   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2039:2118   */\n      tag_111\n      tag_66\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2008:2120   */\n    tag_110:\n        /* \"#utility.yul\":2129:2183   */\n      tag_112\n        /* \"#utility.yul\":2176:2182   */\n      dup5\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2166:2169   */\n      dup6\n        /* \"#utility.yul\":2129:2183   */\n      tag_72\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1848:2189   */\n      pop\n        /* \"#utility.yul\":1764:2189   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2549   */\n    tag_74:\n        /* \"#utility.yul\":2265:2270   */\n      0x00\n        /* \"#utility.yul\":2314:2317   */\n      dup3\n        /* \"#utility.yul\":2307:2311   */\n      0x1f\n        /* \"#utility.yul\":2299:2305   */\n      dup4\n        /* \"#utility.yul\":2295:2312   */\n      add\n        /* \"#utility.yul\":2291:2318   */\n      slt\n        /* \"#utility.yul\":2281:2403   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_115\n      tag_65\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2281:2403   */\n    tag_114:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2426:2446   */\n      calldataload\n        /* \"#utility.yul\":2464:2543   */\n      tag_116\n        /* \"#utility.yul\":2539:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2524:2528   */\n      0x20\n        /* \"#utility.yul\":2516:2522   */\n      dup7\n        /* \"#utility.yul\":2512:2529   */\n      add\n        /* \"#utility.yul\":2464:2543   */\n      tag_73\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2455:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2549   */\n      pop\n        /* \"#utility.yul\":2209:2549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2555:2862   */\n    tag_75:\n        /* \"#utility.yul\":2616:2620   */\n      0x00\n        /* \"#utility.yul\":2706:2724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2698:2704   */\n      dup3\n        /* \"#utility.yul\":2695:2725   */\n      gt\n        /* \"#utility.yul\":2692:2748   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2728:2746   */\n      tag_119\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2692:2748   */\n    tag_118:\n        /* \"#utility.yul\":2766:2795   */\n      tag_120\n        /* \"#utility.yul\":2788:2794   */\n      dup3\n        /* \"#utility.yul\":2766:2795   */\n      tag_67\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2758:2795   */\n      swap1\n      pop\n        /* \"#utility.yul\":2850:2854   */\n      0x20\n        /* \"#utility.yul\":2844:2848   */\n      dup2\n        /* \"#utility.yul\":2840:2855   */\n      add\n        /* \"#utility.yul\":2832:2855   */\n      swap1\n      pop\n        /* \"#utility.yul\":2555:2862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2868:3291   */\n    tag_76:\n        /* \"#utility.yul\":2945:2950   */\n      0x00\n        /* \"#utility.yul\":2970:3035   */\n      tag_122\n        /* \"#utility.yul\":2986:3034   */\n      tag_123\n        /* \"#utility.yul\":3027:3033   */\n      dup5\n        /* \"#utility.yul\":2986:3034   */\n      tag_75\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2970:3035   */\n      tag_70\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2961:3035   */\n      swap1\n      pop\n        /* \"#utility.yul\":3058:3064   */\n      dup3\n        /* \"#utility.yul\":3051:3056   */\n      dup2\n        /* \"#utility.yul\":3044:3065   */\n      mstore\n        /* \"#utility.yul\":3096:3100   */\n      0x20\n        /* \"#utility.yul\":3089:3094   */\n      dup2\n        /* \"#utility.yul\":3085:3101   */\n      add\n        /* \"#utility.yul\":3134:3137   */\n      dup5\n        /* \"#utility.yul\":3125:3131   */\n      dup5\n        /* \"#utility.yul\":3120:3123   */\n      dup5\n        /* \"#utility.yul\":3116:3132   */\n      add\n        /* \"#utility.yul\":3113:3138   */\n      gt\n        /* \"#utility.yul\":3110:3222   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":3141:3220   */\n      tag_125\n      tag_66\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3110:3222   */\n    tag_124:\n        /* \"#utility.yul\":3231:3285   */\n      tag_126\n        /* \"#utility.yul\":3278:3284   */\n      dup5\n        /* \"#utility.yul\":3273:3276   */\n      dup3\n        /* \"#utility.yul\":3268:3271   */\n      dup6\n        /* \"#utility.yul\":3231:3285   */\n      tag_72\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2951:3291   */\n      pop\n        /* \"#utility.yul\":2868:3291   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3310:3648   */\n    tag_77:\n        /* \"#utility.yul\":3365:3370   */\n      0x00\n        /* \"#utility.yul\":3414:3417   */\n      dup3\n        /* \"#utility.yul\":3407:3411   */\n      0x1f\n        /* \"#utility.yul\":3399:3405   */\n      dup4\n        /* \"#utility.yul\":3395:3412   */\n      add\n        /* \"#utility.yul\":3391:3418   */\n      slt\n        /* \"#utility.yul\":3381:3503   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3422:3501   */\n      tag_129\n      tag_65\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3381:3503   */\n    tag_128:\n        /* \"#utility.yul\":3539:3545   */\n      dup2\n        /* \"#utility.yul\":3526:3546   */\n      calldataload\n        /* \"#utility.yul\":3564:3642   */\n      tag_130\n        /* \"#utility.yul\":3638:3641   */\n      dup5\n        /* \"#utility.yul\":3630:3636   */\n      dup3\n        /* \"#utility.yul\":3623:3627   */\n      0x20\n        /* \"#utility.yul\":3615:3621   */\n      dup7\n        /* \"#utility.yul\":3611:3628   */\n      add\n        /* \"#utility.yul\":3564:3642   */\n      tag_76\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3555:3642   */\n      swap2\n      pop\n        /* \"#utility.yul\":3371:3648   */\n      pop\n        /* \"#utility.yul\":3310:3648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:4486   */\n    tag_6:\n        /* \"#utility.yul\":3741:3747   */\n      0x00\n        /* \"#utility.yul\":3749:3755   */\n      dup1\n        /* \"#utility.yul\":3798:3800   */\n      0x40\n        /* \"#utility.yul\":3786:3795   */\n      dup4\n        /* \"#utility.yul\":3777:3784   */\n      dup6\n        /* \"#utility.yul\":3773:3796   */\n      sub\n        /* \"#utility.yul\":3769:3801   */\n      slt\n        /* \"#utility.yul\":3766:3885   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3804:3883   */\n      tag_133\n      tag_63\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3766:3885   */\n    tag_132:\n        /* \"#utility.yul\":3952:3953   */\n      0x00\n        /* \"#utility.yul\":3941:3950   */\n      dup4\n        /* \"#utility.yul\":3937:3954   */\n      add\n        /* \"#utility.yul\":3924:3955   */\n      calldataload\n        /* \"#utility.yul\":3982:4000   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3974:3980   */\n      dup2\n        /* \"#utility.yul\":3971:4001   */\n      gt\n        /* \"#utility.yul\":3968:4085   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4004:4083   */\n      tag_135\n      tag_64\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3968:4085   */\n    tag_134:\n        /* \"#utility.yul\":4109:4172   */\n      tag_136\n        /* \"#utility.yul\":4164:4171   */\n      dup6\n        /* \"#utility.yul\":4155:4161   */\n      dup3\n        /* \"#utility.yul\":4144:4153   */\n      dup7\n        /* \"#utility.yul\":4140:4162   */\n      add\n        /* \"#utility.yul\":4109:4172   */\n      tag_74\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4099:4172   */\n      swap3\n      pop\n        /* \"#utility.yul\":3895:4182   */\n      pop\n        /* \"#utility.yul\":4249:4251   */\n      0x20\n        /* \"#utility.yul\":4238:4247   */\n      dup4\n        /* \"#utility.yul\":4234:4252   */\n      add\n        /* \"#utility.yul\":4221:4253   */\n      calldataload\n        /* \"#utility.yul\":4280:4298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4272:4278   */\n      dup2\n        /* \"#utility.yul\":4269:4299   */\n      gt\n        /* \"#utility.yul\":4266:4383   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4302:4381   */\n      tag_138\n      tag_64\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4266:4383   */\n    tag_137:\n        /* \"#utility.yul\":4407:4469   */\n      tag_139\n        /* \"#utility.yul\":4461:4468   */\n      dup6\n        /* \"#utility.yul\":4452:4458   */\n      dup3\n        /* \"#utility.yul\":4441:4450   */\n      dup7\n        /* \"#utility.yul\":4437:4459   */\n      add\n        /* \"#utility.yul\":4407:4469   */\n      tag_77\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4397:4469   */\n      swap2\n      pop\n        /* \"#utility.yul\":4192:4479   */\n      pop\n        /* \"#utility.yul\":3654:4486   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4492:4618   */\n    tag_78:\n        /* \"#utility.yul\":4529:4536   */\n      0x00\n        /* \"#utility.yul\":4569:4611   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4562:4567   */\n      dup3\n        /* \"#utility.yul\":4558:4612   */\n      and\n        /* \"#utility.yul\":4547:4612   */\n      swap1\n      pop\n        /* \"#utility.yul\":4492:4618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4624:4720   */\n    tag_79:\n        /* \"#utility.yul\":4661:4668   */\n      0x00\n        /* \"#utility.yul\":4690:4714   */\n      tag_142\n        /* \"#utility.yul\":4708:4713   */\n      dup3\n        /* \"#utility.yul\":4690:4714   */\n      tag_78\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4679:4714   */\n      swap1\n      pop\n        /* \"#utility.yul\":4624:4720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4844   */\n    tag_80:\n        /* \"#utility.yul\":4813:4837   */\n      tag_144\n        /* \"#utility.yul\":4831:4836   */\n      dup2\n        /* \"#utility.yul\":4813:4837   */\n      tag_79\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4808:4811   */\n      dup3\n        /* \"#utility.yul\":4801:4838   */\n      mstore\n        /* \"#utility.yul\":4726:4844   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:5072   */\n    tag_9:\n        /* \"#utility.yul\":4943:4947   */\n      0x00\n        /* \"#utility.yul\":4981:4983   */\n      0x20\n        /* \"#utility.yul\":4970:4979   */\n      dup3\n        /* \"#utility.yul\":4966:4984   */\n      add\n        /* \"#utility.yul\":4958:4984   */\n      swap1\n      pop\n        /* \"#utility.yul\":4994:5065   */\n      tag_146\n        /* \"#utility.yul\":5062:5063   */\n      0x00\n        /* \"#utility.yul\":5051:5060   */\n      dup4\n        /* \"#utility.yul\":5047:5064   */\n      add\n        /* \"#utility.yul\":5038:5044   */\n      dup5\n        /* \"#utility.yul\":4994:5065   */\n      tag_80\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4850:5072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5258   */\n    tag_29:\n        /* \"#utility.yul\":5126:5203   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5116:5204   */\n      mstore\n        /* \"#utility.yul\":5223:5227   */\n      0x21\n        /* \"#utility.yul\":5220:5221   */\n      0x04\n        /* \"#utility.yul\":5213:5228   */\n      mstore\n        /* \"#utility.yul\":5247:5251   */\n      0x24\n        /* \"#utility.yul\":5244:5245   */\n      0x00\n        /* \"#utility.yul\":5237:5252   */\n      revert\n        /* \"#utility.yul\":5264:5341   */\n    tag_81:\n        /* \"#utility.yul\":5301:5308   */\n      0x00\n        /* \"#utility.yul\":5330:5335   */\n      dup2\n        /* \"#utility.yul\":5319:5335   */\n      swap1\n      pop\n        /* \"#utility.yul\":5264:5341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5347:5465   */\n    tag_82:\n        /* \"#utility.yul\":5434:5458   */\n      tag_150\n        /* \"#utility.yul\":5452:5457   */\n      dup2\n        /* \"#utility.yul\":5434:5458   */\n      tag_81\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5429:5432   */\n      dup3\n        /* \"#utility.yul\":5422:5459   */\n      mstore\n        /* \"#utility.yul\":5347:5465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5471:5693   */\n    tag_46:\n        /* \"#utility.yul\":5564:5568   */\n      0x00\n        /* \"#utility.yul\":5602:5604   */\n      0x20\n        /* \"#utility.yul\":5591:5600   */\n      dup3\n        /* \"#utility.yul\":5587:5605   */\n      add\n        /* \"#utility.yul\":5579:5605   */\n      swap1\n      pop\n        /* \"#utility.yul\":5615:5686   */\n      tag_152\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5672:5681   */\n      dup4\n        /* \"#utility.yul\":5668:5685   */\n      add\n        /* \"#utility.yul\":5659:5665   */\n      dup5\n        /* \"#utility.yul\":5615:5686   */\n      tag_82\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5471:5693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5699:5776   */\n    tag_83:\n        /* \"#utility.yul\":5736:5743   */\n      0x00\n        /* \"#utility.yul\":5765:5770   */\n      dup2\n        /* \"#utility.yul\":5754:5770   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5782:5900   */\n    tag_84:\n        /* \"#utility.yul\":5869:5893   */\n      tag_155\n        /* \"#utility.yul\":5887:5892   */\n      dup2\n        /* \"#utility.yul\":5869:5893   */\n      tag_83\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5864:5867   */\n      dup3\n        /* \"#utility.yul\":5857:5894   */\n      mstore\n        /* \"#utility.yul\":5782:5900   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5906:6128   */\n    tag_54:\n        /* \"#utility.yul\":5999:6003   */\n      0x00\n        /* \"#utility.yul\":6037:6039   */\n      0x20\n        /* \"#utility.yul\":6026:6035   */\n      dup3\n        /* \"#utility.yul\":6022:6040   */\n      add\n        /* \"#utility.yul\":6014:6040   */\n      swap1\n      pop\n        /* \"#utility.yul\":6050:6121   */\n      tag_157\n        /* \"#utility.yul\":6118:6119   */\n      0x00\n        /* \"#utility.yul\":6107:6116   */\n      dup4\n        /* \"#utility.yul\":6103:6120   */\n      add\n        /* \"#utility.yul\":6094:6100   */\n      dup5\n        /* \"#utility.yul\":6050:6121   */\n      tag_84\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5906:6128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6134:6220   */\n    tag_85:\n        /* \"#utility.yul\":6169:6176   */\n      0x00\n        /* \"#utility.yul\":6209:6213   */\n      0xff\n        /* \"#utility.yul\":6202:6207   */\n      dup3\n        /* \"#utility.yul\":6198:6214   */\n      and\n        /* \"#utility.yul\":6187:6214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6134:6220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6338   */\n    tag_86:\n        /* \"#utility.yul\":6309:6331   */\n      tag_160\n        /* \"#utility.yul\":6325:6330   */\n      dup2\n        /* \"#utility.yul\":6309:6331   */\n      tag_85\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6304:6307   */\n      dup3\n        /* \"#utility.yul\":6297:6332   */\n      mstore\n        /* \"#utility.yul\":6226:6338   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6344:6889   */\n    tag_58:\n        /* \"#utility.yul\":6517:6521   */\n      0x00\n        /* \"#utility.yul\":6555:6558   */\n      0x80\n        /* \"#utility.yul\":6544:6553   */\n      dup3\n        /* \"#utility.yul\":6540:6559   */\n      add\n        /* \"#utility.yul\":6532:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6569:6640   */\n      tag_162\n        /* \"#utility.yul\":6637:6638   */\n      0x00\n        /* \"#utility.yul\":6626:6635   */\n      dup4\n        /* \"#utility.yul\":6622:6639   */\n      add\n        /* \"#utility.yul\":6613:6619   */\n      dup8\n        /* \"#utility.yul\":6569:6640   */\n      tag_84\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6650:6718   */\n      tag_163\n        /* \"#utility.yul\":6714:6716   */\n      0x20\n        /* \"#utility.yul\":6703:6712   */\n      dup4\n        /* \"#utility.yul\":6699:6717   */\n      add\n        /* \"#utility.yul\":6690:6696   */\n      dup7\n        /* \"#utility.yul\":6650:6718   */\n      tag_86\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6728:6800   */\n      tag_164\n        /* \"#utility.yul\":6796:6798   */\n      0x40\n        /* \"#utility.yul\":6785:6794   */\n      dup4\n        /* \"#utility.yul\":6781:6799   */\n      add\n        /* \"#utility.yul\":6772:6778   */\n      dup6\n        /* \"#utility.yul\":6728:6800   */\n      tag_84\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6810:6882   */\n      tag_165\n        /* \"#utility.yul\":6878:6880   */\n      0x60\n        /* \"#utility.yul\":6867:6876   */\n      dup4\n        /* \"#utility.yul\":6863:6881   */\n      add\n        /* \"#utility.yul\":6854:6860   */\n      dup5\n        /* \"#utility.yul\":6810:6882   */\n      tag_84\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6344:6889   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe0d62625c3aa17f39b79bc91a641f5ab4484375d61d547bcc46188e2b0fd88b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506107648061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c80637cebfb641461002d575b5f80fd5b61004760048036038101906100429190610573565b61005d565b6040516100549190610628565b60405180910390f35b5f8083805190602001209050610084836100768361008d565b6100c090919063ffffffff16565b91505092915050565b5f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5281601c52603c5f209050919050565b5f805f806100ce86866100ea565b9250925092506100de828261013f565b82935050505092915050565b5f805f604184510361012a575f805f602087015192506040870151915060608701515f1a905061011c888285856102a1565b955095509550505050610138565b5f600285515f1b9250925092505b9250925092565b5f600381111561015257610151610641565b5b82600381111561016557610164610641565b5b031561029d576001600381111561017f5761017e610641565b5b82600381111561019257610191610641565b5b036101c9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156101dd576101dc610641565b5b8260038111156101f0576101ef610641565b5b0361023457805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161022b9190610686565b60405180910390fd5b60038081111561024757610246610641565b5b82600381111561025a57610259610641565b5b0361029c57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161029391906106b7565b60405180910390fd5b5b5050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156102dd575f60038592509250925061037e565b5f6001888888886040515f815260200160405260405161030094939291906106eb565b6020604051602081039080840390855afa158015610320573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610371575f60015f801b9350935093505061037e565b805f805f1b935093509350505b9450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103e7826103a1565b810181811067ffffffffffffffff82111715610406576104056103b1565b5b80604052505050565b5f610418610388565b905061042482826103de565b919050565b5f67ffffffffffffffff821115610443576104426103b1565b5b61044c826103a1565b9050602081019050919050565b828183375f83830152505050565b5f61047961047484610429565b61040f565b9050828152602081018484840111156104955761049461039d565b5b6104a0848285610459565b509392505050565b5f82601f8301126104bc576104bb610399565b5b81356104cc848260208601610467565b91505092915050565b5f67ffffffffffffffff8211156104ef576104ee6103b1565b5b6104f8826103a1565b9050602081019050919050565b5f610517610512846104d5565b61040f565b9050828152602081018484840111156105335761053261039d565b5b61053e848285610459565b509392505050565b5f82601f83011261055a57610559610399565b5b813561056a848260208601610505565b91505092915050565b5f806040838503121561058957610588610391565b5b5f83013567ffffffffffffffff8111156105a6576105a5610395565b5b6105b2858286016104a8565b925050602083013567ffffffffffffffff8111156105d3576105d2610395565b5b6105df85828601610546565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610612826105e9565b9050919050565b61062281610608565b82525050565b5f60208201905061063b5f830184610619565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f819050919050565b6106808161066e565b82525050565b5f6020820190506106995f830184610677565b92915050565b5f819050919050565b6106b18161069f565b82525050565b5f6020820190506106ca5f8301846106a8565b92915050565b5f60ff82169050919050565b6106e5816106d0565b82525050565b5f6080820190506106fe5f8301876106a8565b61070b60208301866106dc565b61071860408301856106a8565b61072560608301846106a8565b9594505050505056fea2646970667358221220fe0d62625c3aa17f39b79bc91a641f5ab4484375d61d547bcc46188e2b0fd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x764 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CEBFB64 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x84 DUP4 PUSH2 0x76 DUP4 PUSH2 0x8D JUMP JUMPDEST PUSH2 0xC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xCE DUP7 DUP7 PUSH2 0xEA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDE DUP3 DUP3 PUSH2 0x13F JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x12A JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x11C DUP9 DUP3 DUP6 DUP6 PUSH2 0x2A1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x138 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x29D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17F JUMPI PUSH2 0x17E PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x192 JUMPI PUSH2 0x191 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DC PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F0 JUMPI PUSH2 0x1EF PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x234 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x29C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x2DD JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x37E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x300 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x320 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x371 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x37E JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3E7 DUP3 PUSH2 0x3A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x406 JUMPI PUSH2 0x405 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x418 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP3 DUP3 PUSH2 0x3DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x479 PUSH2 0x474 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x39D JUMP JUMPDEST JUMPDEST PUSH2 0x4A0 DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x399 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x517 PUSH2 0x512 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x533 JUMPI PUSH2 0x532 PUSH2 0x39D JUMP JUMPDEST JUMPDEST PUSH2 0x53E DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55A JUMPI PUSH2 0x559 PUSH2 0x399 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x56A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x589 JUMPI PUSH2 0x588 PUSH2 0x391 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A5 PUSH2 0x395 JUMP JUMPDEST JUMPDEST PUSH2 0x5B2 DUP6 DUP3 DUP7 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D2 PUSH2 0x395 JUMP JUMPDEST JUMPDEST PUSH2 0x5DF DUP6 DUP3 DUP7 ADD PUSH2 0x546 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x612 DUP3 PUSH2 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x622 DUP2 PUSH2 0x608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x63B PUSH0 DUP4 ADD DUP5 PUSH2 0x619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x680 DUP2 PUSH2 0x66E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH0 DUP4 ADD DUP5 PUSH2 0x677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B1 DUP2 PUSH2 0x69F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH0 DUP4 ADD DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E5 DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6FE PUSH0 DUP4 ADD DUP8 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x70B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x718 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x725 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xD PUSH3 0x625C3A LOG1 PUSH32 0x39B79BC91A641F5AB4484375D61D547BCC46188E2B0FD88B64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "315:323:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_throwError_638": {
									"entryPoint": 319,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@recover_35": {
									"entryPoint": 93,
									"id": 35,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@recover_395": {
									"entryPoint": 192,
									"id": 395,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toEthSignedMessageHash_654": {
									"entryPoint": 141,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tryRecover_365": {
									"entryPoint": 234,
									"id": 365,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_553": {
									"entryPoint": 673,
									"id": 553,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6892:6",
										"nodeType": "YulBlock",
										"src": "0:6892:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1674:84:6",
													"nodeType": "YulBlock",
													"src": "1674:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1698:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1703:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1708:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:6"
																},
																"nativeSrc": "1685:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1685:30:6"
															},
															"nativeSrc": "1685:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1735:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1735:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1740:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1740:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:6"
																		},
																		"nativeSrc": "1731:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1749:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:6"
																},
																"nativeSrc": "1724:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1724:27:6"
															},
															"nativeSrc": "1724:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1724:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "1610:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1656:3:6",
														"nodeType": "YulTypedName",
														"src": "1656:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1661:3:6",
														"nodeType": "YulTypedName",
														"src": "1661:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1666:6:6",
														"nodeType": "YulTypedName",
														"src": "1666:6:6",
														"type": ""
													}
												],
												"src": "1610:148:6"
											},
											{
												"body": {
													"nativeSrc": "1848:341:6",
													"nodeType": "YulBlock",
													"src": "1848:341:6",
													"statements": [
														{
															"nativeSrc": "1858:75:6",
															"nodeType": "YulAssignment",
															"src": "1858:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1925:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1925:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1883:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1883:41:6"
																		},
																		"nativeSrc": "1883:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1867:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1867:15:6"
																},
																"nativeSrc": "1867:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1867:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1858:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1949:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1949:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1942:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:6"
																},
																"nativeSrc": "1942:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1942:21:6"
															},
															"nativeSrc": "1942:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1942:21:6"
														},
														{
															"nativeSrc": "1972:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1972:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1987:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1994:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nativeSrc": "1983:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1983:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1976:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1976:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2037:83:6",
																"nodeType": "YulBlock",
																"src": "2037:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2039:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2039:77:6"
																			},
																			"nativeSrc": "2039:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2039:79:6"
																		},
																		"nativeSrc": "2039:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2018:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2018:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2023:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2014:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:6"
																		},
																		"nativeSrc": "2014:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2014:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2032:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2011:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2011:2:6"
																},
																"nativeSrc": "2011:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2011:25:6"
															},
															"nativeSrc": "2008:112:6",
															"nodeType": "YulIf",
															"src": "2008:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2129:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "2129:36:6"
																},
																"nativeSrc": "2129:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2129:54:6"
															},
															"nativeSrc": "2129:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "2129:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "1764:425:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1821:3:6",
														"nodeType": "YulTypedName",
														"src": "1821:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1826:6:6",
														"nodeType": "YulTypedName",
														"src": "1826:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1834:3:6",
														"nodeType": "YulTypedName",
														"src": "1834:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1842:5:6",
														"nodeType": "YulTypedName",
														"src": "1842:5:6",
														"type": ""
													}
												],
												"src": "1764:425:6"
											},
											{
												"body": {
													"nativeSrc": "2271:278:6",
													"nodeType": "YulBlock",
													"src": "2271:278:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2320:83:6",
																"nodeType": "YulBlock",
																"src": "2320:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2322:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:6"
																			},
																			"nativeSrc": "2322:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:6"
																		},
																		"nativeSrc": "2322:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2299:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2299:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:6"
																				},
																				"nativeSrc": "2295:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2314:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2291:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2291:3:6"
																		},
																		"nativeSrc": "2291:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2291:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2284:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:6"
																},
																"nativeSrc": "2284:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2284:35:6"
															},
															"nativeSrc": "2281:122:6",
															"nodeType": "YulIf",
															"src": "2281:122:6"
														},
														{
															"nativeSrc": "2412:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2412:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2439:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2426:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2426:12:6"
																},
																"nativeSrc": "2426:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2426:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2416:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2416:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2455:88:6",
															"nodeType": "YulAssignment",
															"src": "2455:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2524:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2512:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:6"
																		},
																		"nativeSrc": "2512:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2531:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2539:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "2464:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "2464:47:6"
																},
																"nativeSrc": "2464:79:6",
																"nodeType": "YulFunctionCall",
																"src": "2464:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2455:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2455:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "2209:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2249:6:6",
														"nodeType": "YulTypedName",
														"src": "2249:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2257:3:6",
														"nodeType": "YulTypedName",
														"src": "2257:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2265:5:6",
														"nodeType": "YulTypedName",
														"src": "2265:5:6",
														"type": ""
													}
												],
												"src": "2209:340:6"
											},
											{
												"body": {
													"nativeSrc": "2621:241:6",
													"nodeType": "YulBlock",
													"src": "2621:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2726:22:6",
																"nodeType": "YulBlock",
																"src": "2726:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2728:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2728:16:6"
																			},
																			"nativeSrc": "2728:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2728:18:6"
																		},
																		"nativeSrc": "2728:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2728:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2698:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2706:18:6",
																		"nodeType": "YulLiteral",
																		"src": "2706:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2695:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2695:2:6"
																},
																"nativeSrc": "2695:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2695:30:6"
															},
															"nativeSrc": "2692:56:6",
															"nodeType": "YulIf",
															"src": "2692:56:6"
														},
														{
															"nativeSrc": "2758:37:6",
															"nodeType": "YulAssignment",
															"src": "2758:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2788:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2788:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2766:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "2766:21:6"
																},
																"nativeSrc": "2766:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2766:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2758:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:6"
																}
															]
														},
														{
															"nativeSrc": "2832:23:6",
															"nodeType": "YulAssignment",
															"src": "2832:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2844:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2844:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:6"
																},
																"nativeSrc": "2840:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2840:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2832:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2832:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "2555:307:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2605:6:6",
														"nodeType": "YulTypedName",
														"src": "2605:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2616:4:6",
														"nodeType": "YulTypedName",
														"src": "2616:4:6",
														"type": ""
													}
												],
												"src": "2555:307:6"
											},
											{
												"body": {
													"nativeSrc": "2951:340:6",
													"nodeType": "YulBlock",
													"src": "2951:340:6",
													"statements": [
														{
															"nativeSrc": "2961:74:6",
															"nodeType": "YulAssignment",
															"src": "2961:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2986:40:6",
																			"nodeType": "YulIdentifier",
																			"src": "2986:40:6"
																		},
																		"nativeSrc": "2986:48:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:48:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2970:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "2970:15:6"
																},
																"nativeSrc": "2970:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2970:65:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2961:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3051:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3051:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3058:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:6"
																},
																"nativeSrc": "3044:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3044:21:6"
															},
															"nativeSrc": "3044:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3044:21:6"
														},
														{
															"nativeSrc": "3074:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3074:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3089:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3089:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3096:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3096:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3085:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3085:3:6"
																},
																"nativeSrc": "3085:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3085:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3078:3:6",
																	"nodeType": "YulTypedName",
																	"src": "3078:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3139:83:6",
																"nodeType": "YulBlock",
																"src": "3139:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3141:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3141:77:6"
																			},
																			"nativeSrc": "3141:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3141:79:6"
																		},
																		"nativeSrc": "3141:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3141:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3120:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3120:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3125:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3125:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3116:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:6"
																		},
																		"nativeSrc": "3116:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3134:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3134:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3113:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3113:2:6"
																},
																"nativeSrc": "3113:25:6",
																"nodeType": "YulFunctionCall",
																"src": "3113:25:6"
															},
															"nativeSrc": "3110:112:6",
															"nodeType": "YulIf",
															"src": "3110:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3268:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3268:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3273:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3273:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3278:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3278:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3231:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "3231:36:6"
																},
																"nativeSrc": "3231:54:6",
																"nodeType": "YulFunctionCall",
																"src": "3231:54:6"
															},
															"nativeSrc": "3231:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "3231:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2868:423:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2924:3:6",
														"nodeType": "YulTypedName",
														"src": "2924:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2929:6:6",
														"nodeType": "YulTypedName",
														"src": "2929:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2937:3:6",
														"nodeType": "YulTypedName",
														"src": "2937:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2945:5:6",
														"nodeType": "YulTypedName",
														"src": "2945:5:6",
														"type": ""
													}
												],
												"src": "2868:423:6"
											},
											{
												"body": {
													"nativeSrc": "3371:277:6",
													"nodeType": "YulBlock",
													"src": "3371:277:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3420:83:6",
																"nodeType": "YulBlock",
																"src": "3420:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3422:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3422:77:6"
																			},
																			"nativeSrc": "3422:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3422:79:6"
																		},
																		"nativeSrc": "3422:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3422:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3399:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3399:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3407:4:6",
																						"nodeType": "YulLiteral",
																						"src": "3407:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3395:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3395:3:6"
																				},
																				"nativeSrc": "3395:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3395:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3414:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3391:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:6"
																		},
																		"nativeSrc": "3391:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3384:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:6"
																},
																"nativeSrc": "3384:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3384:35:6"
															},
															"nativeSrc": "3381:122:6",
															"nodeType": "YulIf",
															"src": "3381:122:6"
														},
														{
															"nativeSrc": "3512:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3512:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3539:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3539:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3526:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3526:12:6"
																},
																"nativeSrc": "3526:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3526:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3516:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3516:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3555:87:6",
															"nodeType": "YulAssignment",
															"src": "3555:87:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3615:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3615:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3623:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3623:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:6"
																		},
																		"nativeSrc": "3611:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3611:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3630:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3638:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3638:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "3564:46:6",
																	"nodeType": "YulIdentifier",
																	"src": "3564:46:6"
																},
																"nativeSrc": "3564:78:6",
																"nodeType": "YulFunctionCall",
																"src": "3564:78:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3555:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3555:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "3310:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3349:6:6",
														"nodeType": "YulTypedName",
														"src": "3349:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3357:3:6",
														"nodeType": "YulTypedName",
														"src": "3357:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3365:5:6",
														"nodeType": "YulTypedName",
														"src": "3365:5:6",
														"type": ""
													}
												],
												"src": "3310:338:6"
											},
											{
												"body": {
													"nativeSrc": "3756:730:6",
													"nodeType": "YulBlock",
													"src": "3756:730:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3802:83:6",
																"nodeType": "YulBlock",
																"src": "3802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:77:6"
																			},
																			"nativeSrc": "3804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3804:79:6"
																		},
																		"nativeSrc": "3804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:6"
																		},
																		"nativeSrc": "3773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:6"
																},
																"nativeSrc": "3769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3769:32:6"
															},
															"nativeSrc": "3766:119:6",
															"nodeType": "YulIf",
															"src": "3766:119:6"
														},
														{
															"nativeSrc": "3895:287:6",
															"nodeType": "YulBlock",
															"src": "3895:287:6",
															"statements": [
																{
																	"nativeSrc": "3910:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3910:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3941:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3941:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3952:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3952:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3937:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3937:3:6"
																				},
																				"nativeSrc": "3937:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3937:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3924:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "3924:12:6"
																		},
																		"nativeSrc": "3924:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4002:83:6",
																		"nodeType": "YulBlock",
																		"src": "4002:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4004:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4004:77:6"
																					},
																					"nativeSrc": "4004:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4004:79:6"
																				},
																				"nativeSrc": "4004:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4004:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3974:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3974:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3982:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3982:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3971:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3971:2:6"
																		},
																		"nativeSrc": "3971:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3971:30:6"
																	},
																	"nativeSrc": "3968:117:6",
																	"nodeType": "YulIf",
																	"src": "3968:117:6"
																},
																{
																	"nativeSrc": "4099:73:6",
																	"nodeType": "YulAssignment",
																	"src": "4099:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4144:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4144:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4155:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4155:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4140:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4140:3:6"
																				},
																				"nativeSrc": "4140:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4140:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4109:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "4109:30:6"
																		},
																		"nativeSrc": "4109:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4109:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4099:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4099:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4192:287:6",
															"nodeType": "YulBlock",
															"src": "4192:287:6",
															"statements": [
																{
																	"nativeSrc": "4207:46:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4207:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4238:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4238:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4249:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4249:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4234:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:6"
																				},
																				"nativeSrc": "4234:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4234:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4221:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "4221:12:6"
																		},
																		"nativeSrc": "4221:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4211:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4211:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4300:83:6",
																		"nodeType": "YulBlock",
																		"src": "4300:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4302:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4302:77:6"
																					},
																					"nativeSrc": "4302:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4302:79:6"
																				},
																				"nativeSrc": "4302:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4302:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4272:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4272:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4280:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4280:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4269:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4269:2:6"
																		},
																		"nativeSrc": "4269:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4269:30:6"
																	},
																	"nativeSrc": "4266:117:6",
																	"nodeType": "YulIf",
																	"src": "4266:117:6"
																},
																{
																	"nativeSrc": "4397:72:6",
																	"nodeType": "YulAssignment",
																	"src": "4397:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4441:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4441:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4452:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4452:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4437:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4437:3:6"
																				},
																				"nativeSrc": "4437:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4437:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4461:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4461:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "4407:29:6",
																			"nodeType": "YulIdentifier",
																			"src": "4407:29:6"
																		},
																		"nativeSrc": "4407:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4407:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4397:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4397:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "3654:832:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3718:9:6",
														"nodeType": "YulTypedName",
														"src": "3718:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3729:7:6",
														"nodeType": "YulTypedName",
														"src": "3729:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3741:6:6",
														"nodeType": "YulTypedName",
														"src": "3741:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3749:6:6",
														"nodeType": "YulTypedName",
														"src": "3749:6:6",
														"type": ""
													}
												],
												"src": "3654:832:6"
											},
											{
												"body": {
													"nativeSrc": "4537:81:6",
													"nodeType": "YulBlock",
													"src": "4537:81:6",
													"statements": [
														{
															"nativeSrc": "4547:65:6",
															"nodeType": "YulAssignment",
															"src": "4547:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4562:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4562:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4569:42:6",
																		"nodeType": "YulLiteral",
																		"src": "4569:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:6"
																},
																"nativeSrc": "4558:54:6",
																"nodeType": "YulFunctionCall",
																"src": "4558:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4547:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4547:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "4492:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4519:5:6",
														"nodeType": "YulTypedName",
														"src": "4519:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4529:7:6",
														"nodeType": "YulTypedName",
														"src": "4529:7:6",
														"type": ""
													}
												],
												"src": "4492:126:6"
											},
											{
												"body": {
													"nativeSrc": "4669:51:6",
													"nodeType": "YulBlock",
													"src": "4669:51:6",
													"statements": [
														{
															"nativeSrc": "4679:35:6",
															"nodeType": "YulAssignment",
															"src": "4679:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4708:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4708:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4690:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4690:17:6"
																},
																"nativeSrc": "4690:24:6",
																"nodeType": "YulFunctionCall",
																"src": "4690:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4679:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4679:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4624:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4651:5:6",
														"nodeType": "YulTypedName",
														"src": "4651:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4661:7:6",
														"nodeType": "YulTypedName",
														"src": "4661:7:6",
														"type": ""
													}
												],
												"src": "4624:96:6"
											},
											{
												"body": {
													"nativeSrc": "4791:53:6",
													"nodeType": "YulBlock",
													"src": "4791:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4808:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4831:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4831:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4813:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4813:17:6"
																		},
																		"nativeSrc": "4813:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4813:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:6"
																},
																"nativeSrc": "4801:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4801:37:6"
															},
															"nativeSrc": "4801:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4801:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4726:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4779:5:6",
														"nodeType": "YulTypedName",
														"src": "4779:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4786:3:6",
														"nodeType": "YulTypedName",
														"src": "4786:3:6",
														"type": ""
													}
												],
												"src": "4726:118:6"
											},
											{
												"body": {
													"nativeSrc": "4948:124:6",
													"nodeType": "YulBlock",
													"src": "4948:124:6",
													"statements": [
														{
															"nativeSrc": "4958:26:6",
															"nodeType": "YulAssignment",
															"src": "4958:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4970:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4970:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4981:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4966:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4966:3:6"
																},
																"nativeSrc": "4966:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4966:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4958:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4958:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5038:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5051:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5051:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5062:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5062:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5047:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5047:3:6"
																		},
																		"nativeSrc": "5047:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5047:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4994:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4994:43:6"
																},
																"nativeSrc": "4994:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4994:71:6"
															},
															"nativeSrc": "4994:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4994:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4850:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4920:9:6",
														"nodeType": "YulTypedName",
														"src": "4920:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4932:6:6",
														"nodeType": "YulTypedName",
														"src": "4932:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4943:4:6",
														"nodeType": "YulTypedName",
														"src": "4943:4:6",
														"type": ""
													}
												],
												"src": "4850:222:6"
											},
											{
												"body": {
													"nativeSrc": "5106:152:6",
													"nodeType": "YulBlock",
													"src": "5106:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5123:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5123:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5126:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5126:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:6"
																},
																"nativeSrc": "5116:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5116:88:6"
															},
															"nativeSrc": "5116:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5116:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5220:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5220:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5223:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5223:4:6",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5213:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:6"
																},
																"nativeSrc": "5213:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5213:15:6"
															},
															"nativeSrc": "5213:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5213:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5244:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5244:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5247:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5237:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:6"
																},
																"nativeSrc": "5237:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5237:15:6"
															},
															"nativeSrc": "5237:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5237:15:6"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "5078:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5078:180:6"
											},
											{
												"body": {
													"nativeSrc": "5309:32:6",
													"nodeType": "YulBlock",
													"src": "5309:32:6",
													"statements": [
														{
															"nativeSrc": "5319:16:6",
															"nodeType": "YulAssignment",
															"src": "5319:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "5330:5:6",
																"nodeType": "YulIdentifier",
																"src": "5330:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5319:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5319:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5264:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5291:5:6",
														"nodeType": "YulTypedName",
														"src": "5291:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5301:7:6",
														"nodeType": "YulTypedName",
														"src": "5301:7:6",
														"type": ""
													}
												],
												"src": "5264:77:6"
											},
											{
												"body": {
													"nativeSrc": "5412:53:6",
													"nodeType": "YulBlock",
													"src": "5412:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5429:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5429:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5452:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5452:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5434:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5434:17:6"
																		},
																		"nativeSrc": "5434:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5434:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5422:6:6"
																},
																"nativeSrc": "5422:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5422:37:6"
															},
															"nativeSrc": "5422:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5422:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5347:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5400:5:6",
														"nodeType": "YulTypedName",
														"src": "5400:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5407:3:6",
														"nodeType": "YulTypedName",
														"src": "5407:3:6",
														"type": ""
													}
												],
												"src": "5347:118:6"
											},
											{
												"body": {
													"nativeSrc": "5569:124:6",
													"nodeType": "YulBlock",
													"src": "5569:124:6",
													"statements": [
														{
															"nativeSrc": "5579:26:6",
															"nodeType": "YulAssignment",
															"src": "5579:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5591:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:6"
																},
																"nativeSrc": "5587:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5587:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5579:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5659:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5659:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5672:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5672:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5683:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5683:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5668:3:6"
																		},
																		"nativeSrc": "5668:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5668:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5615:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5615:43:6"
																},
																"nativeSrc": "5615:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5615:71:6"
															},
															"nativeSrc": "5615:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5615:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5471:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5541:9:6",
														"nodeType": "YulTypedName",
														"src": "5541:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5553:6:6",
														"nodeType": "YulTypedName",
														"src": "5553:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5564:4:6",
														"nodeType": "YulTypedName",
														"src": "5564:4:6",
														"type": ""
													}
												],
												"src": "5471:222:6"
											},
											{
												"body": {
													"nativeSrc": "5744:32:6",
													"nodeType": "YulBlock",
													"src": "5744:32:6",
													"statements": [
														{
															"nativeSrc": "5754:16:6",
															"nodeType": "YulAssignment",
															"src": "5754:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "5765:5:6",
																"nodeType": "YulIdentifier",
																"src": "5765:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5754:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5754:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5699:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5726:5:6",
														"nodeType": "YulTypedName",
														"src": "5726:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5736:7:6",
														"nodeType": "YulTypedName",
														"src": "5736:7:6",
														"type": ""
													}
												],
												"src": "5699:77:6"
											},
											{
												"body": {
													"nativeSrc": "5847:53:6",
													"nodeType": "YulBlock",
													"src": "5847:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5864:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5864:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5887:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5887:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5869:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5869:17:6"
																		},
																		"nativeSrc": "5869:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5869:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5857:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5857:6:6"
																},
																"nativeSrc": "5857:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5857:37:6"
															},
															"nativeSrc": "5857:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5857:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5782:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5835:5:6",
														"nodeType": "YulTypedName",
														"src": "5835:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5842:3:6",
														"nodeType": "YulTypedName",
														"src": "5842:3:6",
														"type": ""
													}
												],
												"src": "5782:118:6"
											},
											{
												"body": {
													"nativeSrc": "6004:124:6",
													"nodeType": "YulBlock",
													"src": "6004:124:6",
													"statements": [
														{
															"nativeSrc": "6014:26:6",
															"nodeType": "YulAssignment",
															"src": "6014:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6026:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6026:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6037:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6037:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6022:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6022:3:6"
																},
																"nativeSrc": "6022:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6022:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6014:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6014:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6094:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6094:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6107:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6107:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6118:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6118:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6103:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6103:3:6"
																		},
																		"nativeSrc": "6103:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6103:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6050:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6050:43:6"
																},
																"nativeSrc": "6050:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6050:71:6"
															},
															"nativeSrc": "6050:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6050:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5906:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5976:9:6",
														"nodeType": "YulTypedName",
														"src": "5976:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5988:6:6",
														"nodeType": "YulTypedName",
														"src": "5988:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5999:4:6",
														"nodeType": "YulTypedName",
														"src": "5999:4:6",
														"type": ""
													}
												],
												"src": "5906:222:6"
											},
											{
												"body": {
													"nativeSrc": "6177:43:6",
													"nodeType": "YulBlock",
													"src": "6177:43:6",
													"statements": [
														{
															"nativeSrc": "6187:27:6",
															"nodeType": "YulAssignment",
															"src": "6187:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6202:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6202:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6209:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6198:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6198:3:6"
																},
																"nativeSrc": "6198:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6198:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6187:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6187:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6134:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6159:5:6",
														"nodeType": "YulTypedName",
														"src": "6159:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6169:7:6",
														"nodeType": "YulTypedName",
														"src": "6169:7:6",
														"type": ""
													}
												],
												"src": "6134:86:6"
											},
											{
												"body": {
													"nativeSrc": "6287:51:6",
													"nodeType": "YulBlock",
													"src": "6287:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6304:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6304:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6325:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6325:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6309:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "6309:15:6"
																		},
																		"nativeSrc": "6309:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6309:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6297:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:6"
																},
																"nativeSrc": "6297:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6297:35:6"
															},
															"nativeSrc": "6297:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6297:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6226:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6275:5:6",
														"nodeType": "YulTypedName",
														"src": "6275:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6282:3:6",
														"nodeType": "YulTypedName",
														"src": "6282:3:6",
														"type": ""
													}
												],
												"src": "6226:112:6"
											},
											{
												"body": {
													"nativeSrc": "6522:367:6",
													"nodeType": "YulBlock",
													"src": "6522:367:6",
													"statements": [
														{
															"nativeSrc": "6532:27:6",
															"nodeType": "YulAssignment",
															"src": "6532:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6544:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6544:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6555:3:6",
																		"nodeType": "YulLiteral",
																		"src": "6555:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:6"
																},
																"nativeSrc": "6540:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6540:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6613:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6613:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6626:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6626:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6637:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6637:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:6"
																		},
																		"nativeSrc": "6622:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6622:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6569:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6569:43:6"
																},
																"nativeSrc": "6569:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6569:71:6"
															},
															"nativeSrc": "6569:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6569:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6690:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6690:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6703:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6703:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6714:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6699:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6699:3:6"
																		},
																		"nativeSrc": "6699:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6699:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6650:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6650:39:6"
																},
																"nativeSrc": "6650:68:6",
																"nodeType": "YulFunctionCall",
																"src": "6650:68:6"
															},
															"nativeSrc": "6650:68:6",
															"nodeType": "YulExpressionStatement",
															"src": "6650:68:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6772:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6772:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6785:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6785:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6796:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6796:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6781:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:6"
																		},
																		"nativeSrc": "6781:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6781:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6728:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6728:43:6"
																},
																"nativeSrc": "6728:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6728:72:6"
															},
															"nativeSrc": "6728:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6728:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6854:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6854:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6867:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6867:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6878:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6878:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6863:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6863:3:6"
																		},
																		"nativeSrc": "6863:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6863:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6810:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6810:43:6"
																},
																"nativeSrc": "6810:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6810:72:6"
															},
															"nativeSrc": "6810:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6810:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "6344:545:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6470:9:6",
														"nodeType": "YulTypedName",
														"src": "6470:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6482:6:6",
														"nodeType": "YulTypedName",
														"src": "6482:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6490:6:6",
														"nodeType": "YulTypedName",
														"src": "6490:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6498:6:6",
														"nodeType": "YulTypedName",
														"src": "6498:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6506:6:6",
														"nodeType": "YulTypedName",
														"src": "6506:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6517:4:6",
														"nodeType": "YulTypedName",
														"src": "6517:4:6",
														"type": ""
													}
												],
												"src": "6344:545:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c80637cebfb641461002d575b5f80fd5b61004760048036038101906100429190610573565b61005d565b6040516100549190610628565b60405180910390f35b5f8083805190602001209050610084836100768361008d565b6100c090919063ffffffff16565b91505092915050565b5f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5281601c52603c5f209050919050565b5f805f806100ce86866100ea565b9250925092506100de828261013f565b82935050505092915050565b5f805f604184510361012a575f805f602087015192506040870151915060608701515f1a905061011c888285856102a1565b955095509550505050610138565b5f600285515f1b9250925092505b9250925092565b5f600381111561015257610151610641565b5b82600381111561016557610164610641565b5b031561029d576001600381111561017f5761017e610641565b5b82600381111561019257610191610641565b5b036101c9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156101dd576101dc610641565b5b8260038111156101f0576101ef610641565b5b0361023457805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161022b9190610686565b60405180910390fd5b60038081111561024757610246610641565b5b82600381111561025a57610259610641565b5b0361029c57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161029391906106b7565b60405180910390fd5b5b5050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156102dd575f60038592509250925061037e565b5f6001888888886040515f815260200160405260405161030094939291906106eb565b6020604051602081039080840390855afa158015610320573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610371575f60015f801b9350935093505061037e565b805f805f1b935093509350505b9450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103e7826103a1565b810181811067ffffffffffffffff82111715610406576104056103b1565b5b80604052505050565b5f610418610388565b905061042482826103de565b919050565b5f67ffffffffffffffff821115610443576104426103b1565b5b61044c826103a1565b9050602081019050919050565b828183375f83830152505050565b5f61047961047484610429565b61040f565b9050828152602081018484840111156104955761049461039d565b5b6104a0848285610459565b509392505050565b5f82601f8301126104bc576104bb610399565b5b81356104cc848260208601610467565b91505092915050565b5f67ffffffffffffffff8211156104ef576104ee6103b1565b5b6104f8826103a1565b9050602081019050919050565b5f610517610512846104d5565b61040f565b9050828152602081018484840111156105335761053261039d565b5b61053e848285610459565b509392505050565b5f82601f83011261055a57610559610399565b5b813561056a848260208601610505565b91505092915050565b5f806040838503121561058957610588610391565b5b5f83013567ffffffffffffffff8111156105a6576105a5610395565b5b6105b2858286016104a8565b925050602083013567ffffffffffffffff8111156105d3576105d2610395565b5b6105df85828601610546565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610612826105e9565b9050919050565b61062281610608565b82525050565b5f60208201905061063b5f830184610619565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f819050919050565b6106808161066e565b82525050565b5f6020820190506106995f830184610677565b92915050565b5f819050919050565b6106b18161069f565b82525050565b5f6020820190506106ca5f8301846106a8565b92915050565b5f60ff82169050919050565b6106e5816106d0565b82525050565b5f6080820190506106fe5f8301876106a8565b61070b60208301866106dc565b61071860408301856106a8565b61072560608301846106a8565b9594505050505056fea2646970667358221220fe0d62625c3aa17f39b79bc91a641f5ab4484375d61d547bcc46188e2b0fd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CEBFB64 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x84 DUP4 PUSH2 0x76 DUP4 PUSH2 0x8D JUMP JUMPDEST PUSH2 0xC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xCE DUP7 DUP7 PUSH2 0xEA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xDE DUP3 DUP3 PUSH2 0x13F JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x12A JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x11C DUP9 DUP3 DUP6 DUP6 PUSH2 0x2A1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x138 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI PUSH2 0x151 PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x29D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17F JUMPI PUSH2 0x17E PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x192 JUMPI PUSH2 0x191 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DD JUMPI PUSH2 0x1DC PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F0 JUMPI PUSH2 0x1EF PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x234 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x641 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x641 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x29C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x2DD JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x37E JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x300 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x320 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x371 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x37E JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3E7 DUP3 PUSH2 0x3A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x406 JUMPI PUSH2 0x405 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x418 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP PUSH2 0x424 DUP3 DUP3 PUSH2 0x3DE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x443 JUMPI PUSH2 0x442 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH2 0x44C DUP3 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x479 PUSH2 0x474 DUP5 PUSH2 0x429 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x39D JUMP JUMPDEST JUMPDEST PUSH2 0x4A0 DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4BC JUMPI PUSH2 0x4BB PUSH2 0x399 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4CC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP3 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x517 PUSH2 0x512 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x533 JUMPI PUSH2 0x532 PUSH2 0x39D JUMP JUMPDEST JUMPDEST PUSH2 0x53E DUP5 DUP3 DUP6 PUSH2 0x459 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x55A JUMPI PUSH2 0x559 PUSH2 0x399 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x56A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x589 JUMPI PUSH2 0x588 PUSH2 0x391 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A5 PUSH2 0x395 JUMP JUMPDEST JUMPDEST PUSH2 0x5B2 DUP6 DUP3 DUP7 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D3 JUMPI PUSH2 0x5D2 PUSH2 0x395 JUMP JUMPDEST JUMPDEST PUSH2 0x5DF DUP6 DUP3 DUP7 ADD PUSH2 0x546 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x612 DUP3 PUSH2 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x622 DUP2 PUSH2 0x608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x63B PUSH0 DUP4 ADD DUP5 PUSH2 0x619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x680 DUP2 PUSH2 0x66E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH0 DUP4 ADD DUP5 PUSH2 0x677 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B1 DUP2 PUSH2 0x69F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6CA PUSH0 DUP4 ADD DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E5 DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x6FE PUSH0 DUP4 ADD DUP8 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x70B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x718 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x725 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xD PUSH3 0x625C3A LOG1 PUSH32 0x39B79BC91A641F5AB4484375D61D547BCC46188E2B0FD88B64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "315:323:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;503:7;523:12;554:3;538:21;;;;;;523:36;;579:48;617:9;579:29;:4;:27;:29::i;:::-;:37;;:48;;;;:::i;:::-;572:55;;;421:214;;;;:::o;1227:460:3:-;1303:14;1408:34;1402:4;1395:48;1510:11;1504:4;1497:25;1602:4;1596;1586:21;1576:31;;1227:460;;;:::o;3707:255:2:-;3785:7;3805:17;3824:18;3844:16;3864:27;3875:4;3881:9;3864:10;:27::i;:::-;3804:87;;;;;;3901:28;3913:5;3920:8;3901:11;:28::i;:::-;3946:9;3939:16;;;;;3707:255;;;;:::o;2134:766::-;2215:7;2224:12;2238:7;2281:2;2261:9;:16;:22;2257:637;;2299:9;2322;2345:7;2597:4;2586:9;2582:20;2576:27;2571:32;;2646:4;2635:9;2631:20;2625:27;2620:32;;2703:4;2692:9;2688:20;2682:27;2679:1;2674:36;2669:41;;2744:25;2755:4;2761:1;2764;2767;2744:10;:25::i;:::-;2737:32;;;;;;;;;;;2257:637;2816:1;2820:35;2865:9;:16;2857:25;;2800:83;;;;;;2134:766;;;;;;:::o;7201:532::-;7296:20;7287:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7283:444;7332:7;7283:444;7392:29;7383:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7379:348;;7444:23;;;;;;;;;;;;;;7379:348;7497:35;7488:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7484:243;;7591:8;7583:17;;7555:46;;;;;;;;;;;:::i;:::-;;;;;;;;7484:243;7631:30;7622:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7618:109;;7707:8;7684:32;;;;;;;;;;;:::i;:::-;;;;;;;;7618:109;7201:532;;;:::o;5145:1530::-;5271:7;5280:12;5294:7;6204:66;6199:1;6191:10;;:79;6187:164;;;6302:1;6306:30;6338:1;6286:54;;;;;;;;6187:164;6445:14;6462:24;6472:4;6478:1;6481;6484;6462:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6445:41;;6518:1;6500:20;;:6;:20;;;6496:113;;6552:1;6556:29;6595:1;6587:10;;6536:62;;;;;;;;;6496:113;6627:6;6635:20;6665:1;6657:10;;6619:49;;;;;;;5145:1530;;;;;;;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:148::-;1708:6;1703:3;1698;1685:30;1749:1;1740:6;1735:3;1731:16;1724:27;1610:148;;;:::o;1764:425::-;1842:5;1867:66;1883:49;1925:6;1883:49;:::i;:::-;1867:66;:::i;:::-;1858:75;;1956:6;1949:5;1942:21;1994:4;1987:5;1983:16;2032:3;2023:6;2018:3;2014:16;2011:25;2008:112;;;2039:79;;:::i;:::-;2008:112;2129:54;2176:6;2171:3;2166;2129:54;:::i;:::-;1848:341;1764:425;;;;;:::o;2209:340::-;2265:5;2314:3;2307:4;2299:6;2295:17;2291:27;2281:122;;2322:79;;:::i;:::-;2281:122;2439:6;2426:20;2464:79;2539:3;2531:6;2524:4;2516:6;2512:17;2464:79;:::i;:::-;2455:88;;2271:278;2209:340;;;;:::o;2555:307::-;2616:4;2706:18;2698:6;2695:30;2692:56;;;2728:18;;:::i;:::-;2692:56;2766:29;2788:6;2766:29;:::i;:::-;2758:37;;2850:4;2844;2840:15;2832:23;;2555:307;;;:::o;2868:423::-;2945:5;2970:65;2986:48;3027:6;2986:48;:::i;:::-;2970:65;:::i;:::-;2961:74;;3058:6;3051:5;3044:21;3096:4;3089:5;3085:16;3134:3;3125:6;3120:3;3116:16;3113:25;3110:112;;;3141:79;;:::i;:::-;3110:112;3231:54;3278:6;3273:3;3268;3231:54;:::i;:::-;2951:340;2868:423;;;;;:::o;3310:338::-;3365:5;3414:3;3407:4;3399:6;3395:17;3391:27;3381:122;;3422:79;;:::i;:::-;3381:122;3539:6;3526:20;3564:78;3638:3;3630:6;3623:4;3615:6;3611:17;3564:78;:::i;:::-;3555:87;;3371:277;3310:338;;;;:::o;3654:832::-;3741:6;3749;3798:2;3786:9;3777:7;3773:23;3769:32;3766:119;;;3804:79;;:::i;:::-;3766:119;3952:1;3941:9;3937:17;3924:31;3982:18;3974:6;3971:30;3968:117;;;4004:79;;:::i;:::-;3968:117;4109:63;4164:7;4155:6;4144:9;4140:22;4109:63;:::i;:::-;4099:73;;3895:287;4249:2;4238:9;4234:18;4221:32;4280:18;4272:6;4269:30;4266:117;;;4302:79;;:::i;:::-;4266:117;4407:62;4461:7;4452:6;4441:9;4437:22;4407:62;:::i;:::-;4397:72;;4192:287;3654:832;;;;;:::o;4492:126::-;4529:7;4569:42;4562:5;4558:54;4547:65;;4492:126;;;:::o;4624:96::-;4661:7;4690:24;4708:5;4690:24;:::i;:::-;4679:35;;4624:96;;;:::o;4726:118::-;4813:24;4831:5;4813:24;:::i;:::-;4808:3;4801:37;4726:118;;:::o;4850:222::-;4943:4;4981:2;4970:9;4966:18;4958:26;;4994:71;5062:1;5051:9;5047:17;5038:6;4994:71;:::i;:::-;4850:222;;;;:::o;5078:180::-;5126:77;5123:1;5116:88;5223:4;5220:1;5213:15;5247:4;5244:1;5237:15;5264:77;5301:7;5330:5;5319:16;;5264:77;;;:::o;5347:118::-;5434:24;5452:5;5434:24;:::i;:::-;5429:3;5422:37;5347:118;;:::o;5471:222::-;5564:4;5602:2;5591:9;5587:18;5579:26;;5615:71;5683:1;5672:9;5668:17;5659:6;5615:71;:::i;:::-;5471:222;;;;:::o;5699:77::-;5736:7;5765:5;5754:16;;5699:77;;;:::o;5782:118::-;5869:24;5887:5;5869:24;:::i;:::-;5864:3;5857:37;5782:118;;:::o;5906:222::-;5999:4;6037:2;6026:9;6022:18;6014:26;;6050:71;6118:1;6107:9;6103:17;6094:6;6050:71;:::i;:::-;5906:222;;;;:::o;6134:86::-;6169:7;6209:4;6202:5;6198:16;6187:27;;6134:86;;;:::o;6226:112::-;6309:22;6325:5;6309:22;:::i;:::-;6304:3;6297:35;6226:112;;:::o;6344:545::-;6517:4;6555:3;6544:9;6540:19;6532:27;;6569:71;6637:1;6626:9;6622:17;6613:6;6569:71;:::i;:::-;6650:68;6714:2;6703:9;6699:18;6690:6;6650:68;:::i;:::-;6728:72;6796:2;6785:9;6781:18;6772:6;6728:72;:::i;:::-;6810;6878:2;6867:9;6863:18;6854:6;6810:72;:::i;:::-;6344:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "378400",
								"executionCost": "416",
								"totalCost": "378816"
							},
							"external": {
								"recover(string,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 315,
									"end": 638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 638,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe0d62625c3aa17f39b79bc91a641f5ab4484375d61d547bcc46188e2b0fd88b64736f6c634300081a0033",
									".code": [
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "7CEBFB64"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 421,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 421,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 421,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 523,
											"end": 559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 579,
											"end": 583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 579,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 579,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 608,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 579,
											"end": 608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 579,
											"end": 616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 579,
											"end": 627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 579,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 579,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 421,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1687,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1227,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1442,
											"name": "PUSH",
											"source": 3,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1443,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "1C"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1606,
											"name": "PUSH",
											"source": 3,
											"value": "3C"
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3785,
											"end": 3792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3875,
											"end": 3879,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3864,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3864,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3913,
											"end": 3918,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3901,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2257,
											"end": 2894,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2601,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2635,
											"end": 2644,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2707,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2710,
											"name": "BYTE",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2755,
											"end": 2759,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2744,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2769,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2744,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2737,
											"end": 2769,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2894,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2257,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2855,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7287,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7287,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7287,
											"end": 7316,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7283,
											"end": 7727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7332,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7283,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7392,
											"end": 7421,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7383,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7383,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7383,
											"end": 7421,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7379,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "PUSH",
											"source": 2,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7379,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7379,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7532,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7488,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7493,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7488,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7488,
											"end": 7532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7591,
											"end": 7599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH",
											"source": 2,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7555,
											"end": 7601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7555,
											"end": 7601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7661,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7622,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7627,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7622,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7661,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7618,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7618,
											"end": 7727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH",
											"source": 2,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7684,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7618,
											"end": 7727,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7618,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6270,
											"name": "PUSH",
											"source": 2,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6201,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6270,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6187,
											"end": 6351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6336,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6286,
											"end": 6340,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6187,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6187,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6472,
											"end": 6476,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6462,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6462,
											"end": 6486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6445,
											"end": 6486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6500,
											"end": 6520,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6496,
											"end": 6609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6595,
											"end": 6596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6609,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6496,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6635,
											"end": 6655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 6667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6667,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1701,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1715,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1738,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1610,
											"end": 1758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1883,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1867,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1867,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2036,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2039,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2039,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2008,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2129,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2129,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2291,
											"end": 2318,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2281,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2528,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2464,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2555,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2698,
											"end": 2704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2725,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2692,
											"end": 2748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2728,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2748,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2692,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2766,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2766,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2555,
											"end": 2862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2986,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2986,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2970,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3035,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2970,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3044,
											"end": 3065,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3138,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3222,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3110,
											"end": 3222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3141,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3141,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3220,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3141,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3222,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3110,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3278,
											"end": 3284,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3271,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3231,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3285,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3231,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 3291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 3291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3399,
											"end": 3405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3418,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3422,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3422,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3546,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3638,
											"end": 3641,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3564,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3642,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3564,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3766,
											"end": 3885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3804,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3804,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3804,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3766,
											"end": 3885,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3766,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3955,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4001,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4085,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3968,
											"end": 4085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4004,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4004,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3968,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3968,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4109,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4109,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4172,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 4182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4221,
											"end": 4253,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4272,
											"end": 4278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4299,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4266,
											"end": 4383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4302,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4302,
											"end": 4381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4381,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4302,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4383,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4266,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4461,
											"end": 4468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4407,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 4486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4618,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4492,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4611,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4720,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4624,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4708,
											"end": 4713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4690,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4714,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4690,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4720,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4726,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4831,
											"end": 4836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4813,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4813,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 4984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 4984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5038,
											"end": 5044,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4994,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 5065,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4994,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5258,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5078,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 5228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5244,
											"end": 5245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5252,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5341,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5264,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5347,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5434,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5681,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5615,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5615,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5776,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5699,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5887,
											"end": 5892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5869,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5869,
											"end": 5893,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5869,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6050,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6121,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6050,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6220,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6134,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6169,
											"end": 6176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6202,
											"end": 6207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6214,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6338,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6226,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6309,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6331,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 6309,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6297,
											"end": 6332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6635,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6622,
											"end": 6639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6569,
											"end": 6640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6640,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6569,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6703,
											"end": 6712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6699,
											"end": 6717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6696,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6650,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6718,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6650,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6728,
											"end": 6800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6800,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6728,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6867,
											"end": 6876,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6854,
											"end": 6860,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6810,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6882,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6810,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"recover(string,bytes)": "7cebfb64"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/VerifySignature2.sol\":\"VerifySignature2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/openzeppelin/VerifySignature2.sol\":{\"keccak256\":\"0x0eae4366c7c350d13ac2dbdc42f66871c6ac6e1e6e5d7d1a8b60dba0acb3de4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f2157651e916563a92d71b53826e7932f7869ef84db92f466da5322c344835\",\"dweb:/ipfs/QmQD6AYeHTfuLCCLLPb58QxQ8rScg2rqtwqhghhMvZWseY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x49337050432e46ff7e86ea7cb6d6aa70b039ff4e8bcd469cc1b519d185ca890f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86c968a32a3d29abe387512121f1811a9f4ca1e513b83332f21faaa314ba73a9\",\"dweb:/ipfs/QmPXb4iEQssiSp76DdQz5hxZuXoRBrzzryxoWg1EBSGCSr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x7578fa441a6adafced5895855b51f49ed8bb44233a6da22b564567fa471c8f42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec1717d6741b2af68c1f41f7109c92f851ee9f0cf602b5c0cd9cb65a687a4f4c\",\"dweb:/ipfs/QmSh388TDHQjTJTziWbny4y7XFQUpbxCECBntCBcVmZ8uX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xae90ae7275f247c994bcc5ec547c4803e7aa73dde7c5fdf6d0b1f1b318ff9dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://576c5aebfebad7695bf45b0eb075c652109d751fb09725f5db3ef1bccd336173\",\"dweb:/ipfs/QmSZk6qPT8rGpYR47feDpWVUppYAAu7AbRU9aFay16Xfo6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x088ee0205fd15191af2b3476588d5835e7423592de84cbd22254a5f0324bf875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0e32f866d531bef65a7ea964acf26c649b9534bc30a5151a5c567eec8cfb542\",\"dweb:/ipfs/QmaeDW4P8DfzqJELGS4BBEhHuUwuyCqJUpMKfDakJxJedr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x71f1e3e36221d7510530ef7d998aa908889ef642bcd84bc07f071ad02f6bb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e4fd5aab76c59dcf0efc9d05510bb09a5d23f526459548f82de556ff4ba3d9e\",\"dweb:/ipfs/QmUF4QqcPPdbyxc3RDHkHU9zpJMgv6CpgWGFurwLPQ3nHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":256:3103  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":256:3103  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059da8b12438c915279fb14731a5bb6a5f87b9c24132d539b8427c2ba313c592864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059da8b12438c915279fb14731a5bb6a5f87b9c24132d539b8427c2ba313c592864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xDA DUP12 SLT NUMBER DUP13 SWAP2 MSTORE PUSH26 0xFB14731A5BB6A5F87B9C24132D539B8427C2BA313C592864736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "256:2847:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059da8b12438c915279fb14731a5bb6a5f87b9c24132d539b8427c2ba313c592864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xDA DUP12 SLT NUMBER DUP13 SWAP2 MSTORE PUSH26 0xFB14731A5BB6A5F87B9C24132D539B8427C2BA313C592864736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "256:2847:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 256,
									"end": 3103,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059da8b12438c915279fb14731a5bb6a5f87b9c24132d539b8427c2ba313c592864736f6c634300081a0033",
									".code": [
										{
											"begin": 256,
											"end": 3103,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 256,
											"end": 3103,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x49337050432e46ff7e86ea7cb6d6aa70b039ff4e8bcd469cc1b519d185ca890f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86c968a32a3d29abe387512121f1811a9f4ca1e513b83332f21faaa314ba73a9\",\"dweb:/ipfs/QmPXb4iEQssiSp76DdQz5hxZuXoRBrzzryxoWg1EBSGCSr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x088ee0205fd15191af2b3476588d5835e7423592de84cbd22254a5f0324bf875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0e32f866d531bef65a7ea964acf26c649b9534bc30a5151a5c567eec8cfb542\",\"dweb:/ipfs/QmaeDW4P8DfzqJELGS4BBEhHuUwuyCqJUpMKfDakJxJedr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x71f1e3e36221d7510530ef7d998aa908889ef642bcd84bc07f071ad02f6bb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e4fd5aab76c59dcf0efc9d05510bb09a5d23f526459548f82de556ff4ba3d9e\",\"dweb:/ipfs/QmUF4QqcPPdbyxc3RDHkHU9zpJMgv6CpgWGFurwLPQ3nHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":349:7735  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":349:7735  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0fdca86aa97d3b686da2989c62a8c454427fe4fd0886b257aae997954f3fdc964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0fdca86aa97d3b686da2989c62a8c454427fe4fd0886b257aae997954f3fdc964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE REVERT 0xCA DUP7 0xAA SWAP8 0xD3 0xB6 DUP7 0xDA 0x29 DUP10 0xC6 0x2A DUP13 GASLIMIT PREVRANDAO 0x27 INVALID 0x4F 0xD0 DUP9 PUSH12 0x257AAE997954F3FDC964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "349:7386:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0fdca86aa97d3b686da2989c62a8c454427fe4fd0886b257aae997954f3fdc964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE REVERT 0xCA DUP7 0xAA SWAP8 0xD3 0xB6 DUP7 0xDA 0x29 DUP10 0xC6 0x2A DUP13 GASLIMIT PREVRANDAO 0x27 INVALID 0x4F 0xD0 DUP9 PUSH12 0x257AAE997954F3FDC964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "349:7386:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 349,
									"end": 7735,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0fdca86aa97d3b686da2989c62a8c454427fe4fd0886b257aae997954f3fdc964736f6c634300081a0033",
									".code": [
										{
											"begin": 349,
											"end": 7735,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 7735,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x7578fa441a6adafced5895855b51f49ed8bb44233a6da22b564567fa471c8f42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec1717d6741b2af68c1f41f7109c92f851ee9f0cf602b5c0cd9cb65a687a4f4c\",\"dweb:/ipfs/QmSh388TDHQjTJTziWbny4y7XFQUpbxCECBntCBcVmZ8uX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":526:3761  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":526:3761  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f57779786978fda27bdb92f03a8d0207b3c0c8bb6a379ef7170d6eaa03d1006c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f57779786978fda27bdb92f03a8d0207b3c0c8bb6a379ef7170d6eaa03d1006c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH24 0x79786978FDA27BDB92F03A8D0207B3C0C8BB6A379EF7170D PUSH15 0xAA03D1006C64736F6C634300081A00 CALLER ",
							"sourceMap": "526:3235:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f57779786978fda27bdb92f03a8d0207b3c0c8bb6a379ef7170d6eaa03d1006c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH24 0x79786978FDA27BDB92F03A8D0207B3C0C8BB6A379EF7170D PUSH15 0xAA03D1006C64736F6C634300081A00 CALLER ",
							"sourceMap": "526:3235:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 526,
									"end": 3761,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f57779786978fda27bdb92f03a8d0207b3c0c8bb6a379ef7170d6eaa03d1006c64736f6c634300081a0033",
									".code": [
										{
											"begin": 526,
											"end": 3761,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 526,
											"end": 3761,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol\":{\"keccak256\":\"0x49337050432e46ff7e86ea7cb6d6aa70b039ff4e8bcd469cc1b519d185ca890f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86c968a32a3d29abe387512121f1811a9f4ca1e513b83332f21faaa314ba73a9\",\"dweb:/ipfs/QmPXb4iEQssiSp76DdQz5hxZuXoRBrzzryxoWg1EBSGCSr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xae90ae7275f247c994bcc5ec547c4803e7aa73dde7c5fdf6d0b1f1b318ff9dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://576c5aebfebad7695bf45b0eb075c652109d751fb09725f5db3ef1bccd336173\",\"dweb:/ipfs/QmSZk6qPT8rGpYR47feDpWVUppYAAu7AbRU9aFay16Xfo6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x088ee0205fd15191af2b3476588d5835e7423592de84cbd22254a5f0324bf875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0e32f866d531bef65a7ea964acf26c649b9534bc30a5151a5c567eec8cfb542\",\"dweb:/ipfs/QmaeDW4P8DfzqJELGS4BBEhHuUwuyCqJUpMKfDakJxJedr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x71f1e3e36221d7510530ef7d998aa908889ef642bcd84bc07f071ad02f6bb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e4fd5aab76c59dcf0efc9d05510bb09a5d23f526459548f82de556ff4ba3d9e\",\"dweb:/ipfs/QmUF4QqcPPdbyxc3RDHkHU9zpJMgv6CpgWGFurwLPQ3nHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":208:15122  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":208:15122  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220547cce2203c0f8576bd221cbd123a3527af0a994d4a25023000d7e541de4f8cc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220547cce2203c0f8576bd221cbd123a3527af0a994d4a25023000d7e541de4f8cc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH29 0xCE2203C0F8576BD221CBD123A3527AF0A994D4A25023000D7E541DE4F8 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "208:14914:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220547cce2203c0f8576bd221cbd123a3527af0a994d4a25023000d7e541de4f8cc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH29 0xCE2203C0F8576BD221CBD123A3527AF0A994D4A25023000D7E541DE4F8 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "208:14914:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 208,
									"end": 15122,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220547cce2203c0f8576bd221cbd123a3527af0a994d4a25023000d7e541de4f8cc64736f6c634300081a0033",
									".code": [
										{
											"begin": 208,
											"end": 15122,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 208,
											"end": 15122,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x088ee0205fd15191af2b3476588d5835e7423592de84cbd22254a5f0324bf875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0e32f866d531bef65a7ea964acf26c649b9534bc30a5151a5c567eec8cfb542\",\"dweb:/ipfs/QmaeDW4P8DfzqJELGS4BBEhHuUwuyCqJUpMKfDakJxJedr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":221:1268  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":221:1268  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0838dba9a895ffe71346f4982a029359a1ce7000a73e2d12aa3cda08e415fde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0838dba9a895ffe71346f4982a029359a1ce7000a73e2d12aa3cda08e415fde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP4 DUP14 0xBA SWAP11 DUP10 PUSH0 INVALID PUSH18 0x346F4982A029359A1CE7000A73E2D12AA3CD LOG0 DUP15 COINBASE PUSH0 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "221:1047:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f0838dba9a895ffe71346f4982a029359a1ce7000a73e2d12aa3cda08e415fde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE DUP4 DUP14 0xBA SWAP11 DUP10 PUSH0 INVALID PUSH18 0x346F4982A029359A1CE7000A73E2D12AA3CD LOG0 DUP15 COINBASE PUSH0 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "221:1047:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 1268,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0838dba9a895ffe71346f4982a029359a1ce7000a73e2d12aa3cda08e415fde64736f6c634300081a0033",
									".code": [
										{
											"begin": 221,
											"end": 1268,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 221,
											"end": 1268,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/openzeppelin/VerifySignature2.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x71f1e3e36221d7510530ef7d998aa908889ef642bcd84bc07f071ad02f6bb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e4fd5aab76c59dcf0efc9d05510bb09a5d23f526459548f82de556ff4ba3d9e\",\"dweb:/ipfs/QmUF4QqcPPdbyxc3RDHkHU9zpJMgv6CpgWGFurwLPQ3nHa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/openzeppelin/VerifySignature2.sol": {
				"ast": {
					"absolutePath": "contracts/openzeppelin/VerifySignature2.sol",
					"exportedSymbols": {
						"ECDSA": [
							639
						],
						"MessageHashUtils": [
							713
						],
						"Strings": [
							291
						],
						"VerifySignature2": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 37,
							"sourceUnit": 714,
							"src": "60:131:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 37,
							"sourceUnit": 640,
							"src": "193:120:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VerifySignature2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "VerifySignature2",
							"nameLocation": "324:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 6,
									"libraryName": {
										"id": 4,
										"name": "ECDSA",
										"nameLocations": [
											"354:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 639,
										"src": "354:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "348:24:0",
									"typeName": {
										"id": 5,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"global": false,
									"id": 9,
									"libraryName": {
										"id": 7,
										"name": "MessageHashUtils",
										"nameLocations": [
											"384:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 713,
										"src": "384:16:0"
									},
									"nodeType": "UsingForDirective",
									"src": "378:35:0",
									"typeName": {
										"id": 8,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "512:123:0",
										"statements": [
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "531:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "523:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 18,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 26,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 23,
																	"name": "str",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "548:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 21,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "548:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "548:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 20,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "538:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "523:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 27,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "579:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "584:22:0",
																"memberName": "toEthSignedMessageHash",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 654,
																"src": "579:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
																	"typeString": "function (bytes32) pure returns (bytes32)"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "579:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "609:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "579:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 17,
												"id": 33,
												"nodeType": "Return",
												"src": "572:55:0"
											}
										]
									},
									"functionSelector": "7cebfb64",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "430:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "452:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "438:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "470:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "457:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "457:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:43:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "503:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:9:0"
									},
									"scope": 36,
									"src": "421:214:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 37,
							"src": "315:323:0",
							"usedErrors": [
								302,
								307,
								312
							],
							"usedEvents": []
						}
					],
					"src": "33:605:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1767
						],
						"SignedMath": [
							1872
						],
						"Strings": [
							291
						]
					},
					"id": 292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 38,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 40,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 292,
							"sourceUnit": 1768,
							"src": "132:37:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 39,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1767,
										"src": "140:4:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 42,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 292,
							"sourceUnit": 1873,
							"src": "170:49:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 41,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1872,
										"src": "178:10:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 43,
								"nodeType": "StructuredDocumentation",
								"src": "221:34:1",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 291,
							"linearizedBaseContracts": [
								291
							],
							"name": "Strings",
							"nameLocation": "264:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 46,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "303:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 291,
									"src": "278:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 44,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 45,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:18:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 49,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "363:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 291,
									"src": "340:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 47,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "340:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 48,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "380:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "389:81:1",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 56,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "481:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "518:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "533:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "525:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:31:1"
									},
									"src": "475:66:1"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "713:627:1",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "723:611:1",
												"statements": [
													{
														"assignments": [
															65
														],
														"declarations": [
															{
																"constant": false,
																"id": 65,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "755:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "747:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 64,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 72,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 68,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "775:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 66,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "764:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1767_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "769:5:1",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1587,
																	"src": "764:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "764:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "784:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "764:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:38:1"
													},
													{
														"assignments": [
															74
														],
														"declarations": [
															{
																"constant": false,
																"id": 74,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "813:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "799:20:1",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 73,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 79,
														"initialValue": {
															"arguments": [
																{
																	"id": 77,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "833:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 75,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "826:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "799:41:1"
													},
													{
														"assignments": [
															81
														],
														"declarations": [
															{
																"constant": false,
																"id": 81,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "862:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "854:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 80,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "854:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"nodeType": "VariableDeclarationStatement",
														"src": "854:11:1"
													},
													{
														"AST": {
															"nativeSrc": "935:67:1",
															"nodeType": "YulBlock",
															"src": "935:67:1",
															"statements": [
																{
																	"nativeSrc": "953:35:1",
																	"nodeType": "YulAssignment",
																	"src": "953:35:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "964:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "976:2:1",
																						"nodeType": "YulLiteral",
																						"src": "976:2:1",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "980:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "972:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "972:3:1"
																				},
																				"nativeSrc": "972:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "972:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:1"
																		},
																		"nativeSrc": "960:28:1",
																		"nodeType": "YulFunctionCall",
																		"src": "960:28:1"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "953:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "953:3:1"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 74,
																"isOffset": false,
																"isSlot": false,
																"src": "964:6:1",
																"valueSize": 1
															},
															{
																"declaration": 65,
																"isOffset": false,
																"isSlot": false,
																"src": "980:6:1",
																"valueSize": 1
															},
															{
																"declaration": 81,
																"isOffset": false,
																"isSlot": false,
																"src": "953:3:1",
																"valueSize": 1
															}
														],
														"id": 83,
														"nodeType": "InlineAssembly",
														"src": "926:76:1"
													},
													{
														"body": {
															"id": 98,
															"nodeType": "Block",
															"src": "1028:269:1",
															"statements": [
																{
																	"expression": {
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1046:5:1",
																		"subExpression": {
																			"id": 85,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 81,
																			"src": "1046:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 87,
																	"nodeType": "ExpressionStatement",
																	"src": "1046:5:1"
																},
																{
																	"AST": {
																		"nativeSrc": "1129:86:1",
																		"nodeType": "YulBlock",
																		"src": "1129:86:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1159:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1159:3:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1173:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1173:5:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1180:2:1",
																											"nodeType": "YulLiteral",
																											"src": "1180:2:1",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1169:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1169:3:1"
																									},
																									"nativeSrc": "1169:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "1169:14:1"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1185:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1185:10:1"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1164:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "1164:4:1"
																							},
																							"nativeSrc": "1164:32:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1164:32:1"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1151:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:7:1"
																					},
																					"nativeSrc": "1151:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1151:46:1"
																				},
																				"nativeSrc": "1151:46:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1151:46:1"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 46,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1185:10:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 81,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1159:3:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 59,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1173:5:1",
																			"valueSize": 1
																		}
																	],
																	"id": 88,
																	"nodeType": "InlineAssembly",
																	"src": "1120:95:1"
																},
																{
																	"expression": {
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 89,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 59,
																			"src": "1232:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 90,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1241:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1232:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 92,
																	"nodeType": "ExpressionStatement",
																	"src": "1232:11:1"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 93,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 59,
																			"src": "1265:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1265:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 97,
																	"nodeType": "IfStatement",
																	"src": "1261:21:1",
																	"trueBody": {
																		"id": 96,
																		"nodeType": "Break",
																		"src": "1277:5:1"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1022:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 99,
														"nodeType": "WhileStatement",
														"src": "1015:282:1"
													},
													{
														"expression": {
															"id": 100,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1317:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 63,
														"id": 101,
														"nodeType": "Return",
														"src": "1310:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "547:90:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "651:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "668:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "660:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:15:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "698:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "698:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:1"
									},
									"scope": 291,
									"src": "642:698:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1516:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 115,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "1547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1555:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1547:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1565:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1547:20:1",
															"trueExpression": {
																"hexValue": "2d",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1559:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 124,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 107,
																			"src": "1593:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 122,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "1578:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1872_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1589:3:1",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1871,
																		"src": "1578:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1578:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 121,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1569:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1569:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1533:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 112,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1533:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1540:6:1",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1533:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 111,
												"id": 128,
												"nodeType": "Return",
												"src": "1526:75:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1346:89:1",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1449:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1471:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1464:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:14:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1501:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1501:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:15:1"
									},
									"scope": 291,
									"src": "1440:168:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1787:100:1",
										"statements": [
											{
												"id": 148,
												"nodeType": "UncheckedBlock",
												"src": "1797:84:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 139,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1840:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 142,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 133,
																				"src": "1859:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 140,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "1847:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1767_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1852:6:1",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1709,
																			"src": "1847:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1847:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1868:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1847:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 138,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	150,
																	233,
																	253
																],
																"referencedDeclaration": 233,
																"src": "1828:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1828:42:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 137,
														"id": 147,
														"nodeType": "Return",
														"src": "1821:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1614:94:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1722:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1742:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1734:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:15:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1772:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 135,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1772:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:15:1"
									},
									"scope": 291,
									"src": "1713:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2100:435:1",
										"statements": [
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2118:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "2110:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2110:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"id": 162,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2131:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2110:26:1"
											},
											{
												"assignments": [
													165
												],
												"declarations": [
													{
														"constant": false,
														"id": 165,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2159:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "2146:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 164,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2146:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2178:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 169,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "2182:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2178:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2191:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2178:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2168:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 166,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2172:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2146:47:1"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 175,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2203:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 177,
														"indexExpression": {
															"hexValue": "30",
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2210:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2203:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2215:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2203:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2203:15:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 181,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 183,
														"indexExpression": {
															"hexValue": "31",
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2228:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2240:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2228:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2228:15:1"
											},
											{
												"body": {
													"id": 215,
													"nodeType": "Block",
													"src": "2298:95:1",
													"statements": [
														{
															"expression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 201,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "2312:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 203,
																	"indexExpression": {
																		"id": 202,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2319:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2312:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 204,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "2324:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 208,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 205,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "2335:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2348:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2335:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2324:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2312:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 210,
															"nodeType": "ExpressionStatement",
															"src": "2312:40:1"
														},
														{
															"expression": {
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 211,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "2366:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2381:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2366:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 214,
															"nodeType": "ExpressionStatement",
															"src": "2366:16:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2286:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2290:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2286:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"initializationExpression": {
													"assignments": [
														188
													],
													"declarations": [
														{
															"constant": false,
															"id": 188,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2266:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 216,
															"src": "2258:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2258:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 194,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2270:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 190,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2274:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2270:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2283:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2270:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2258:26:1"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2293:3:1",
														"subExpression": {
															"id": 198,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2295:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"nodeType": "ExpressionStatement",
													"src": "2293:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2253:140:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2406:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2420:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2406:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "2402:96:1",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "2423:75:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 221,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "2473:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 222,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "2480:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 220,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "2444:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2444:43:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "2437:50:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2521:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2514:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 227,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2514:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 159,
												"id": 231,
												"nodeType": "Return",
												"src": "2507:21:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1893:112:1",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2019:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2039:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2031:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2054:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2046:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:31:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2085:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2085:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:15:1"
									},
									"scope": 291,
									"src": "2010:525:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2767:75:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 246,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "2812:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2804:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 244,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2804:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2804:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2796:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2796:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2796:22:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 249,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "2820:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 241,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															150,
															233,
															253
														],
														"referencedDeclaration": 233,
														"src": "2784:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2784:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 251,
												"nodeType": "Return",
												"src": "2777:58:1"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "2541:148:1",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2703:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:14:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2752:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2752:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:15:1"
									},
									"scope": 291,
									"src": "2694:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2997:104:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 265,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "3020:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3014:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 263,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3014:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3014:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3023:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3014:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 270,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "3039:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3033:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 268,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3033:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3033:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3042:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3033:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3014:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 277,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "3068:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3062:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 275,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3062:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3062:8:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 274,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3052:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3052:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 283,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 258,
																			"src": "3091:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3085:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 281,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3085:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3085:8:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 280,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3075:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3075:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3052:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3014:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 262,
												"id": 288,
												"nodeType": "Return",
												"src": "3007:87:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2848:66:1",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2928:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2948:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2934:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2934:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2965:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2951:15:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2933:34:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2991:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2990:6:1"
									},
									"scope": 291,
									"src": "2919:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 292,
							"src": "256:2847:1",
							"usedErrors": [
								56
							],
							"usedEvents": []
						}
					],
					"src": "106:2998:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							639
						]
					},
					"id": 640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 293,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 294,
								"nodeType": "StructuredDocumentation",
								"src": "143:205:2",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 639,
							"linearizedBaseContracts": [
								639
							],
							"name": "ECDSA",
							"nameLocation": "357:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 299,
									"members": [
										{
											"id": 295,
											"name": "NoError",
											"nameLocation": "397:7:2",
											"nodeType": "EnumValue",
											"src": "397:7:2"
										},
										{
											"id": 296,
											"name": "InvalidSignature",
											"nameLocation": "414:16:2",
											"nodeType": "EnumValue",
											"src": "414:16:2"
										},
										{
											"id": 297,
											"name": "InvalidSignatureLength",
											"nameLocation": "440:22:2",
											"nodeType": "EnumValue",
											"src": "440:22:2"
										},
										{
											"id": 298,
											"name": "InvalidSignatureS",
											"nameLocation": "472:17:2",
											"nodeType": "EnumValue",
											"src": "472:17:2"
										}
									],
									"name": "RecoverError",
									"nameLocation": "374:12:2",
									"nodeType": "EnumDefinition",
									"src": "369:126:2"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "501:63:2",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 302,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "575:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:2:2"
									},
									"src": "569:30:2"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "605:60:2",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 307,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "676:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:16:2"
									},
									"src": "670:50:2"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "726:85:2",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 312,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "822:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "853:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "845:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 309,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:11:2"
									},
									"src": "816:40:2"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2247:653:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 327,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "2261:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2271:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2261:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2281:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2261:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 362,
													"nodeType": "Block",
													"src": "2786:108:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2816:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2808:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 349,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2808:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2808:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 353,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "2820:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2833:22:2",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 297,
																		"src": "2820:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$299",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 357,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "2865:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2875:6:2",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2865:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 355,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2857:25:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2807:76:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 326,
															"id": 361,
															"nodeType": "Return",
															"src": "2800:83:2"
														}
													]
												},
												"id": 363,
												"nodeType": "IfStatement",
												"src": "2257:637:2",
												"trueBody": {
													"id": 348,
													"nodeType": "Block",
													"src": "2285:495:2",
													"statements": [
														{
															"assignments": [
																332
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 332,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2307:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 348,
																	"src": "2299:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 331,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2299:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 333,
															"nodeType": "VariableDeclarationStatement",
															"src": "2299:9:2"
														},
														{
															"assignments": [
																335
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 335,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2330:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 348,
																	"src": "2322:9:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 334,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2322:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 336,
															"nodeType": "VariableDeclarationStatement",
															"src": "2322:9:2"
														},
														{
															"assignments": [
																338
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 338,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2351:1:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 348,
																	"src": "2345:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2345:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 339,
															"nodeType": "VariableDeclarationStatement",
															"src": "2345:7:2"
														},
														{
															"AST": {
																"nativeSrc": "2553:171:2",
																"nodeType": "YulBlock",
																"src": "2553:171:2",
																"statements": [
																	{
																		"nativeSrc": "2571:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2571:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2586:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2586:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2597:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2597:4:2",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2582:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2582:3:2"
																					},
																					"nativeSrc": "2582:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2582:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2576:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:2"
																			},
																			"nativeSrc": "2576:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2576:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2571:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2571:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2620:32:2",
																		"nodeType": "YulAssignment",
																		"src": "2620:32:2",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2635:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "2635:9:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2646:4:2",
																							"nodeType": "YulLiteral",
																							"src": "2646:4:2",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2631:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "2631:3:2"
																					},
																					"nativeSrc": "2631:20:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2631:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2625:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2625:5:2"
																			},
																			"nativeSrc": "2625:27:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2625:27:2"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2620:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2620:1:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2669:41:2",
																		"nodeType": "YulAssignment",
																		"src": "2669:41:2",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2679:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2679:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2692:9:2",
																									"nodeType": "YulIdentifier",
																									"src": "2692:9:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2703:4:2",
																									"nodeType": "YulLiteral",
																									"src": "2703:4:2",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2688:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "2688:3:2"
																							},
																							"nativeSrc": "2688:20:2",
																							"nodeType": "YulFunctionCall",
																							"src": "2688:20:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2682:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2682:5:2"
																					},
																					"nativeSrc": "2682:27:2",
																					"nodeType": "YulFunctionCall",
																					"src": "2682:27:2"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2674:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2674:4:2"
																			},
																			"nativeSrc": "2674:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2674:36:2"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2669:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "2669:1:2"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 332,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2571:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 335,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2620:1:2",
																	"valueSize": 1
																},
																{
																	"declaration": 317,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2586:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 317,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2635:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 317,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2692:9:2",
																	"valueSize": 1
																},
																{
																	"declaration": 338,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2669:1:2",
																	"valueSize": 1
																}
															],
															"id": 340,
															"nodeType": "InlineAssembly",
															"src": "2544:180:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 342,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "2755:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 343,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "2761:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 344,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "2764:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 345,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "2767:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 341,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		365,
																		445,
																		553
																	],
																	"referencedDeclaration": 553,
																	"src": "2744:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 326,
															"id": 347,
															"nodeType": "Return",
															"src": "2737:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "862:1267:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2143:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2162:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2154:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2181:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2168:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2168:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:38:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2215:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2224:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$299",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 321,
														"name": "RecoverError",
														"nameLocations": [
															"2224:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 299,
														"src": "2224:12:2"
													},
													"referencedDeclaration": 299,
													"src": "2224:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$299",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2238:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:32:2"
									},
									"scope": 639,
									"src": "2134:766:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3794:168:2",
										"statements": [
											{
												"assignments": [
													376,
													379,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3813:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "3805:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 375,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3805:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3837:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "3824:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 378,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 377,
																"name": "RecoverError",
																"nameLocations": [
																	"3824:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 299,
																"src": "3824:12:2"
															},
															"referencedDeclaration": 299,
															"src": "3824:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3852:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "3844:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 380,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3844:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3875:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 384,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3881:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 382,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															365,
															445,
															553
														],
														"referencedDeclaration": 365,
														"src": "3864:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3864:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3804:87:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3913:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 389,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3920:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 387,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3901:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$299_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3901:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "3901:28:2"
											},
											{
												"expression": {
													"id": 392,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 376,
													"src": "3946:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 393,
												"nodeType": "Return",
												"src": "3939:16:2"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2906:796:2",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3716:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3732:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3724:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3751:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3738:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3738:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:38:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3785:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3784:9:2"
									},
									"scope": 639,
									"src": "3707:255:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "4290:342:2",
										"statements": [
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "4300:326:2",
												"statements": [
													{
														"assignments": [
															413
														],
														"declarations": [
															{
																"constant": false,
																"id": 413,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4332:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 443,
																"src": "4324:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 412,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4324:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 420,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4336:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4349:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4341:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4341:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4341:75:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4336:80:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4324:92:2"
													},
													{
														"assignments": [
															422
														],
														"declarations": [
															{
																"constant": false,
																"id": 422,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4533:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 443,
																"src": "4527:7:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 421,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4527:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 435,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 427,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 402,
																							"src": "4552:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 426,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4544:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 425,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4544:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4544:11:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4559:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4544:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 431,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4543:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4566:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4543:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4537:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 423,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4537:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4537:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4527:42:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "4601:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 438,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "4607:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 439,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "4610:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 440,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "4613:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 436,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	365,
																	445,
																	553
																],
																"referencedDeclaration": 553,
																"src": "4590:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4590:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 411,
														"id": 442,
														"nodeType": "Return",
														"src": "4583:32:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3968:205:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4187:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4206:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4198:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4220:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4212:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 399,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:37:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4258:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4267:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$299",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 406,
														"name": "RecoverError",
														"nameLocations": [
															"4267:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 299,
														"src": "4267:12:2"
													},
													"referencedDeclaration": 299,
													"src": "4267:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$299",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "4281:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:32:2"
									},
									"scope": 639,
									"src": "4178:454:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4845:164:2",
										"statements": [
											{
												"assignments": [
													458,
													461,
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4864:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "4856:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 457,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4856:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4888:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "4875:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 460,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 459,
																"name": "RecoverError",
																"nameLocations": [
																	"4875:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 299,
																"src": "4875:12:2"
															},
															"referencedDeclaration": 299,
															"src": "4875:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4903:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "4895:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 462,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4895:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 469,
												"initialValue": {
													"arguments": [
														{
															"id": 465,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4926:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 466,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4932:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 467,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "4935:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 464,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															365,
															445,
															553
														],
														"referencedDeclaration": 445,
														"src": "4915:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4855:83:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4960:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 472,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4967:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 470,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "4948:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$299_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4948:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "4948:28:2"
											},
											{
												"expression": {
													"id": 475,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "4993:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 456,
												"id": 476,
												"nodeType": "Return",
												"src": "4986:16:2"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "4638:116:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4768:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4784:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4798:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4790:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4809:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4801:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4801:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4775:37:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "4836:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:9:2"
									},
									"scope": 639,
									"src": "4759:250:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5303:1372:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 499,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "6199:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6191:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 497,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6191:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6191:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6204:66:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6191:79:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "6187:164:2",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "6272:79:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6302:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6294:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 503,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6294:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6294:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 507,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "6306:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6319:17:2",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 298,
																		"src": "6306:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$299",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 509,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "6338:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6293:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 496,
															"id": 511,
															"nodeType": "Return",
															"src": "6286:54:2"
														}
													]
												}
											},
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6453:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "6445:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 514,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6445:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"arguments": [
														{
															"id": 517,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "6472:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 518,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6478:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 519,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6481:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 520,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "6484:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 516,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6462:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6462:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6445:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 523,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "6500:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6518:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6510:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 524,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6510:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6510:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6500:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "6496:113:2",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "6522:87:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6552:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6544:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6544:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6544:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 533,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 299,
																			"src": "6556:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6569:16:2",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 296,
																		"src": "6556:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$299",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6595:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6587:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 535,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6587:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6587:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6543:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 496,
															"id": 540,
															"nodeType": "Return",
															"src": "6536:62:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 543,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "6627:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 544,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "6635:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6648:7:2",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 295,
															"src": "6635:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6665:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6657:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 546,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6657:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6657:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 550,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6626:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 496,
												"id": 551,
												"nodeType": "Return",
												"src": "6619:49:2"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "5015:125:2",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5154:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5182:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5174:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5174:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5202:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5196:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5221:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5213:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5240:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5232:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5164:83:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5271:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5280:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$299",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 491,
														"name": "RecoverError",
														"nameLocations": [
															"5280:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 299,
														"src": "5280:12:2"
													},
													"referencedDeclaration": 299,
													"src": "5280:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$299",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5294:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5270:32:2"
									},
									"scope": 639,
									"src": "5145:1530:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "6902:166:2",
										"statements": [
											{
												"assignments": [
													568,
													571,
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6921:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "6913:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6913:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6945:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "6932:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 570,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 569,
																"name": "RecoverError",
																"nameLocations": [
																	"6932:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 299,
																"src": "6932:12:2"
															},
															"referencedDeclaration": 299,
															"src": "6932:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6960:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "6952:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 572,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 575,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "6983:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 576,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6989:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 577,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6992:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 578,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "6995:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 574,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															365,
															445,
															553
														],
														"referencedDeclaration": 553,
														"src": "6972:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6972:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$299_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6912:85:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "7019:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 583,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "7026:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 581,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7007:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$299_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7007:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7007:28:2"
											},
											{
												"expression": {
													"id": 586,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 568,
													"src": "7052:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 566,
												"id": 587,
												"nodeType": "Return",
												"src": "7045:16:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "6681:122:2",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6817:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6833:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6825:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6845:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6839:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 557,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6856:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6848:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6867:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6859:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6824:45:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6893:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6892:9:2"
									},
									"scope": 639,
									"src": "6808:260:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "7273:460:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$299",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 598,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "7287:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 599,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7296:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7309:7:2",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "7296:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7287:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$299",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 604,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "7383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 605,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "7392:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7405:16:2",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 296,
															"src": "7392:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7383:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$299",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 612,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "7488:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$299",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 613,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "7497:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7510:22:2",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 297,
																"src": "7497:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$299",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7488:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$299",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "7622:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$299",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 625,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "7631:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$299_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7644:17:2",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 298,
																	"src": "7631:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$299",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7622:39:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 633,
															"nodeType": "IfStatement",
															"src": "7618:109:2",
															"trueBody": {
																"id": 632,
																"nodeType": "Block",
																"src": "7663:64:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 629,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "7707:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 628,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 312,
																				"src": "7684:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7684:32:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 631,
																		"nodeType": "RevertStatement",
																		"src": "7677:39:2"
																	}
																]
															}
														},
														"id": 634,
														"nodeType": "IfStatement",
														"src": "7484:243:2",
														"trueBody": {
															"id": 623,
															"nodeType": "Block",
															"src": "7534:78:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 619,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 595,
																						"src": "7591:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7583:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 617,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7583:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7583:17:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 616,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 307,
																			"src": "7555:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7555:46:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 622,
																	"nodeType": "RevertStatement",
																	"src": "7548:53:2"
																}
															]
														}
													},
													"id": 635,
													"nodeType": "IfStatement",
													"src": "7379:348:2",
													"trueBody": {
														"id": 611,
														"nodeType": "Block",
														"src": "7423:55:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 608,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "7444:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7444:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 610,
																"nodeType": "RevertStatement",
																"src": "7437:30:2"
															}
														]
													}
												},
												"id": 636,
												"nodeType": "IfStatement",
												"src": "7283:444:2",
												"trueBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "7318:55:2",
													"statements": [
														{
															"functionReturnParameters": 597,
															"id": 602,
															"nodeType": "Return",
															"src": "7332:7:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "7074:122:2",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7210:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7222:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$299",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "RecoverError",
														"nameLocations": [
															"7222:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 299,
														"src": "7222:12:2"
													},
													"referencedDeclaration": 299,
													"src": "7222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$299",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7250:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7242:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 594,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7221:38:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7273:0:2"
									},
									"scope": 639,
									"src": "7201:532:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 640,
							"src": "349:7386:2",
							"usedErrors": [
								302,
								307,
								312
							],
							"usedEvents": []
						}
					],
					"src": "117:7619:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							713
						],
						"Strings": [
							291
						]
					},
					"id": 714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 643,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 714,
							"sourceUnit": 292,
							"src": "154:39:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 642,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 291,
										"src": "162:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 644,
								"nodeType": "StructuredDocumentation",
								"src": "195:330:3",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 713,
							"linearizedBaseContracts": [
								713
							],
							"name": "MessageHashUtils",
							"nameLocation": "534:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1319:368:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1381:300:3",
													"nodeType": "YulBlock",
													"src": "1381:300:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1402:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1402:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1408:34:3",
																		"nodeType": "YulLiteral",
																		"src": "1408:34:3",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1395:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:3"
																},
																"nativeSrc": "1395:48:3",
																"nodeType": "YulFunctionCall",
																"src": "1395:48:3"
															},
															"nativeSrc": "1395:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "1395:48:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1504:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1504:4:3",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1510:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "1510:11:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1497:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:3"
																},
																"nativeSrc": "1497:25:3",
																"nodeType": "YulFunctionCall",
																"src": "1497:25:3"
															},
															"nativeSrc": "1497:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "1497:25:3"
														},
														{
															"nativeSrc": "1576:31:3",
															"nodeType": "YulAssignment",
															"src": "1576:31:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1596:4:3",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1602:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1602:4:3",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1586:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "1586:9:3"
																},
																"nativeSrc": "1586:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1586:21:3"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1576:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 650,
														"isOffset": false,
														"isSlot": false,
														"src": "1576:6:3",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "1510:11:3",
														"valueSize": 1
													}
												],
												"id": 652,
												"nodeType": "InlineAssembly",
												"src": "1372:309:3"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "557:665:3",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1236:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1267:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1259:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:21:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1311:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1303:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:16:3"
									},
									"scope": 713,
									"src": "1227:460:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2239:143:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2291:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 671,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 657,
																						"src": "2348:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2356:6:3",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2348:14:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 669,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "2331:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$291_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2339:8:3",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 104,
																				"src": "2331:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2331:32:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2325:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 667,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2325:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2325:39:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 675,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "2366:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2278:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 663,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2278:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2284:6:3",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2278:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 662,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2268:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:107:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 661,
												"id": 678,
												"nodeType": "Return",
												"src": "2249:126:3"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1693:455:3",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2162:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2198:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2185:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2185:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:22:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2230:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 659,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:9:3"
									},
									"scope": 713,
									"src": "2153:229:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "2836:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2880:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 694,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "2892:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 695,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "2903:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 691,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2863:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2867:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2863:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2863:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2853:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 689,
												"id": 698,
												"nodeType": "Return",
												"src": "2846:63:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2388:332:3",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2734:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2774:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2766:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2798:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2785:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2785:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:38:3"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "2827:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:9:3"
									},
									"scope": 713,
									"src": "2725:191:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "3467:292:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3529:224:3",
													"nodeType": "YulBlock",
													"src": "3529:224:3",
													"statements": [
														{
															"nativeSrc": "3543:22:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3543:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3560:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3554:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3554:5:3"
																},
																"nativeSrc": "3554:11:3",
																"nodeType": "YulFunctionCall",
																"src": "3554:11:3"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3547:3:3",
																	"nodeType": "YulTypedName",
																	"src": "3547:3:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3585:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3585:3:3"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3590:10:3",
																		"nodeType": "YulLiteral",
																		"src": "3590:10:3",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3578:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3578:6:3"
																},
																"nativeSrc": "3578:23:3",
																"nodeType": "YulFunctionCall",
																"src": "3578:23:3"
															},
															"nativeSrc": "3578:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "3578:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3625:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3625:3:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3630:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3630:4:3",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3621:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:3"
																		},
																		"nativeSrc": "3621:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3621:14:3"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3637:15:3",
																		"nodeType": "YulIdentifier",
																		"src": "3637:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3614:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:3"
																},
																"nativeSrc": "3614:39:3",
																"nodeType": "YulFunctionCall",
																"src": "3614:39:3"
															},
															"nativeSrc": "3614:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "3614:39:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3677:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3677:3:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3682:4:3",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3673:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:3"
																		},
																		"nativeSrc": "3673:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3673:14:3"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3689:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "3689:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3666:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:3"
																},
																"nativeSrc": "3666:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3666:34:3"
															},
															"nativeSrc": "3666:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "3666:34:3"
														},
														{
															"nativeSrc": "3713:30:3",
															"nodeType": "YulAssignment",
															"src": "3713:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3733:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3733:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3738:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3738:4:3",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3723:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "3723:9:3"
																},
																"nativeSrc": "3723:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3723:20:3"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3713:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:3"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 708,
														"isOffset": false,
														"isSlot": false,
														"src": "3713:6:3",
														"valueSize": 1
													},
													{
														"declaration": 703,
														"isOffset": false,
														"isSlot": false,
														"src": "3637:15:3",
														"valueSize": 1
													},
													{
														"declaration": 705,
														"isOffset": false,
														"isSlot": false,
														"src": "3689:10:3",
														"valueSize": 1
													}
												],
												"id": 710,
												"nodeType": "InlineAssembly",
												"src": "3520:233:3"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "2922:431:3",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3367:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3391:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3383:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 702,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3416:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3408:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:45:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3459:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3451:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:16:3"
									},
									"scope": 713,
									"src": "3358:401:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 714,
							"src": "526:3235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "128:3634:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1767
						]
					},
					"id": 1768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 716,
								"nodeType": "StructuredDocumentation",
								"src": "134:73:4",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1767,
							"linearizedBaseContracts": [
								1767
							],
							"name": "Math",
							"nameLocation": "216:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "227:50:4",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 719,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "288:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:4"
									},
									"src": "282:29:4"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 724,
									"members": [
										{
											"id": 720,
											"name": "Floor",
											"nameLocation": "341:5:4",
											"nodeType": "EnumValue",
											"src": "341:5:4"
										},
										{
											"id": 721,
											"name": "Ceil",
											"nameLocation": "384:4:4",
											"nodeType": "EnumValue",
											"src": "384:4:4"
										},
										{
											"id": 722,
											"name": "Trunc",
											"nameLocation": "426:5:4",
											"nodeType": "EnumValue",
											"src": "426:5:4"
										},
										{
											"id": 723,
											"name": "Expand",
											"nameLocation": "456:6:4",
											"nodeType": "EnumValue",
											"src": "456:6:4"
										}
									],
									"name": "Rounding",
									"nameLocation": "322:8:4",
									"nodeType": "EnumDefinition",
									"src": "317:169:4"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "666:140:4",
										"statements": [
											{
												"id": 754,
												"nodeType": "UncheckedBlock",
												"src": "676:124:4",
												"statements": [
													{
														"assignments": [
															737
														],
														"declarations": [
															{
																"constant": false,
																"id": 737,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "708:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 754,
																"src": "700:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "700:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 738,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "712:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 739,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "716:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "712:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "700:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 742,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "735:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 743,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "739:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 749,
														"nodeType": "IfStatement",
														"src": "731:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "750:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "757:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 747,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "749:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 735,
															"id": 748,
															"nodeType": "Return",
															"src": "742:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "781:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 751,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "787:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 752,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "780:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 735,
														"id": 753,
														"nodeType": "Return",
														"src": "773:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "492:93:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "599:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "614:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "606:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "625:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "617:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:22:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "651:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "651:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:15:4"
									},
									"scope": 1767,
									"src": "590:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "989:113:4",
										"statements": [
											{
												"id": 782,
												"nodeType": "UncheckedBlock",
												"src": "999:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 768,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "1027:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 769,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "1031:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1027:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 775,
														"nodeType": "IfStatement",
														"src": "1023:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1042:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1049:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1041:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 767,
															"id": 774,
															"nodeType": "Return",
															"src": "1034:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1073:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 777,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1079:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 778,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "1083:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1079:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 780,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1072:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 767,
														"id": 781,
														"nodeType": "Return",
														"src": "1065:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "812:96:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "922:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "937:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "929:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "948:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "940:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:22:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "974:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "974:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "980:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:4"
									},
									"scope": 1767,
									"src": "913:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "1288:417:4",
										"statements": [
											{
												"id": 824,
												"nodeType": "UncheckedBlock",
												"src": "1298:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 796,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1556:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1561:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1556:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 803,
														"nodeType": "IfStatement",
														"src": "1552:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1572:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1578:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1571:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 795,
															"id": 802,
															"nodeType": "Return",
															"src": "1564:16:4"
														}
													},
													{
														"assignments": [
															805
														],
														"declarations": [
															{
																"constant": false,
																"id": 805,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1602:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 824,
																"src": "1594:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 804,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1594:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 809,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 806,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1606:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "1610:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1606:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1594:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 810,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1629:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "1633:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1629:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "1638:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1629:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 819,
														"nodeType": "IfStatement",
														"src": "1625:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1649:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1656:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1648:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 795,
															"id": 818,
															"nodeType": "Return",
															"src": "1641:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1680:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 821,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1686:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 822,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1679:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 795,
														"id": 823,
														"nodeType": "Return",
														"src": "1672:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "1108:99:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1221:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1236:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1228:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1247:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1239:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:22:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1273:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1273:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "1279:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1272:15:4"
									},
									"scope": 1767,
									"src": "1212:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "1892:114:4",
										"statements": [
											{
												"id": 852,
												"nodeType": "UncheckedBlock",
												"src": "1902:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "1930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1935:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 845,
														"nodeType": "IfStatement",
														"src": "1926:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1946:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1953:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1945:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 837,
															"id": 844,
															"nodeType": "Return",
															"src": "1938:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1977:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 847,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "1983:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 848,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "1987:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1983:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 850,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1976:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 837,
														"id": 851,
														"nodeType": "Return",
														"src": "1969:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "1711:100:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1825:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1840:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1832:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1851:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1843:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:22:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1877:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1877:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1883:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:15:4"
									},
									"scope": 1767,
									"src": "1816:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "2203:114:4",
										"statements": [
											{
												"id": 880,
												"nodeType": "UncheckedBlock",
												"src": "2213:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "2241:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2246:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "2237:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2257:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2264:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 871,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2256:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 865,
															"id": 872,
															"nodeType": "Return",
															"src": "2249:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2288:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 875,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "2294:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 876,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "2298:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2294:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2287:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 865,
														"id": 879,
														"nodeType": "Return",
														"src": "2280:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2012:110:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2136:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2151:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2143:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2162:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2154:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2154:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:22:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2188:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2194:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:15:4"
									},
									"scope": 1767,
									"src": "2127:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2454:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 892,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "2471:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 893,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2475:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2471:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 896,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "2483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2471:13:4",
													"trueExpression": {
														"id": 895,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2479:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 891,
												"id": 898,
												"nodeType": "Return",
												"src": "2464:20:4"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "2323:59:4",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2396:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2408:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2400:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2419:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2411:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:22:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2445:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:9:4"
									},
									"scope": 1767,
									"src": "2387:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "2629:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 910,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2646:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 911,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "2650:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2646:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2658:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2646:13:4",
													"trueExpression": {
														"id": 913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2654:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 909,
												"id": 916,
												"nodeType": "Return",
												"src": "2639:20:4"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2497:60:4",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2571:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2583:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2575:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2594:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2586:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2586:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:22:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "2620:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:9:4"
									},
									"scope": 1767,
									"src": "2562:104:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "2850:82:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 928,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "2905:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 929,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "2909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2905:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 931,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2904:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 932,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "2915:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 933,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2919:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2915:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 935,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2914:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2924:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2914:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2904:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 927,
												"id": 939,
												"nodeType": "Return",
												"src": "2897:28:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "2672:102:4",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2788:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2804:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2796:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2815:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2807:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:22:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2841:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:9:4"
									},
									"scope": 1767,
									"src": "2779:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "3224:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3243:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3238:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "3234:127:4",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "3246:115:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3345:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 955,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "3349:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3345:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 950,
															"id": 957,
															"nodeType": "Return",
															"src": "3338:12:4"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 960,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "3449:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3454:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3449:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 964,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "3463:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3467:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3463:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 967,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3462:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3472:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3476:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3462:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3449:28:4",
													"trueExpression": {
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3458:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 973,
												"nodeType": "Return",
												"src": "3442:35:4"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "2938:210:4",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3162:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3178:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3170:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3189:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3181:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:22:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3215:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:9:4"
									},
									"scope": 1767,
									"src": "3153:331:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "3906:4018:4",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "3916:4002:4",
												"statements": [
													{
														"assignments": [
															988
														],
														"declarations": [
															{
																"constant": false,
																"id": 988,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4245:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "4237:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4237:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 992,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "4253:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 990,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "4257:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4237:21:4"
													},
													{
														"assignments": [
															994
														],
														"declarations": [
															{
																"constant": false,
																"id": 994,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4325:5:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "4317:13:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 993,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4317:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 995,
														"nodeType": "VariableDeclarationStatement",
														"src": "4317:13:4"
													},
													{
														"AST": {
															"nativeSrc": "4397:122:4",
															"nodeType": "YulBlock",
															"src": "4397:122:4",
															"statements": [
																{
																	"nativeSrc": "4415:30:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4415:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4432:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4432:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4435:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4435:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4442:1:4",
																						"nodeType": "YulLiteral",
																						"src": "4442:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4438:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4438:3:4"
																				},
																				"nativeSrc": "4438:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4438:6:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4425:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4425:6:4"
																		},
																		"nativeSrc": "4425:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4425:20:4"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4419:2:4",
																			"nodeType": "YulTypedName",
																			"src": "4419:2:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4462:43:4",
																	"nodeType": "YulAssignment",
																	"src": "4462:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4479:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4479:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4483:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4483:5:4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4475:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4475:3:4"
																				},
																				"nativeSrc": "4475:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4475:14:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4494:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4494:2:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4498:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4498:5:4"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4491:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4491:2:4"
																				},
																				"nativeSrc": "4491:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4491:13:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4471:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:4"
																		},
																		"nativeSrc": "4471:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:34:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4462:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "4462:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "4483:5:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "4498:5:4",
																"valueSize": 1
															},
															{
																"declaration": 994,
																"isOffset": false,
																"isSlot": false,
																"src": "4462:5:4",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "4432:1:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "4435:1:4",
																"valueSize": 1
															}
														],
														"id": 996,
														"nodeType": "InlineAssembly",
														"src": "4388:131:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 997,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "4600:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4609:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4600:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1005,
														"nodeType": "IfStatement",
														"src": "4596:368:4",
														"trueBody": {
															"id": 1004,
															"nodeType": "Block",
															"src": "4612:352:4",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1000,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 988,
																			"src": "4930:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1001,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "4938:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4930:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 986,
																	"id": 1003,
																	"nodeType": "Return",
																	"src": "4923:26:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5070:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1007,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "5085:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5070:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1013,
														"nodeType": "IfStatement",
														"src": "5066:88:4",
														"trueBody": {
															"id": 1012,
															"nodeType": "Block",
															"src": "5092:62:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1009,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "5117:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5117:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1011,
																	"nodeType": "RevertStatement",
																	"src": "5110:29:4"
																}
															]
														}
													},
													{
														"assignments": [
															1015
														],
														"declarations": [
															{
																"constant": false,
																"id": 1015,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5417:9:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "5409:17:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1014,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5409:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1016,
														"nodeType": "VariableDeclarationStatement",
														"src": "5409:17:4"
													},
													{
														"AST": {
															"nativeSrc": "5449:291:4",
															"nodeType": "YulBlock",
															"src": "5449:291:4",
															"statements": [
																{
																	"nativeSrc": "5518:38:4",
																	"nodeType": "YulAssignment",
																	"src": "5518:38:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5538:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5538:1:4"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5541:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5541:1:4"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5544:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "5544:11:4"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5531:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5531:6:4"
																		},
																		"nativeSrc": "5531:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5531:25:4"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5518:9:4",
																			"nodeType": "YulIdentifier",
																			"src": "5518:9:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5638:41:4",
																	"nodeType": "YulAssignment",
																	"src": "5638:41:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5651:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5651:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5661:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5661:9:4"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5672:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5672:5:4"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5658:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "5658:2:4"
																				},
																				"nativeSrc": "5658:20:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5658:20:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5647:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5647:3:4"
																		},
																		"nativeSrc": "5647:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5647:32:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5638:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5638:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "5696:30:4",
																	"nodeType": "YulAssignment",
																	"src": "5696:30:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5709:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5709:5:4"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5716:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5716:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5705:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:4"
																		},
																		"nativeSrc": "5705:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5705:21:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5696:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5696:5:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 982,
																"isOffset": false,
																"isSlot": false,
																"src": "5544:11:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "5672:5:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "5696:5:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "5709:5:4",
																"valueSize": 1
															},
															{
																"declaration": 994,
																"isOffset": false,
																"isSlot": false,
																"src": "5638:5:4",
																"valueSize": 1
															},
															{
																"declaration": 994,
																"isOffset": false,
																"isSlot": false,
																"src": "5651:5:4",
																"valueSize": 1
															},
															{
																"declaration": 1015,
																"isOffset": false,
																"isSlot": false,
																"src": "5518:9:4",
																"valueSize": 1
															},
															{
																"declaration": 1015,
																"isOffset": false,
																"isSlot": false,
																"src": "5661:9:4",
																"valueSize": 1
															},
															{
																"declaration": 1015,
																"isOffset": false,
																"isSlot": false,
																"src": "5716:9:4",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "5538:1:4",
																"valueSize": 1
															},
															{
																"declaration": 980,
																"isOffset": false,
																"isSlot": false,
																"src": "5541:1:4",
																"valueSize": 1
															}
														],
														"id": 1017,
														"nodeType": "InlineAssembly",
														"src": "5440:300:4"
													},
													{
														"assignments": [
															1019
														],
														"declarations": [
															{
																"constant": false,
																"id": 1019,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5952:4:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "5944:12:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5944:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1026,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1020,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5959:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5974:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1022,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "5978:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5974:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5973:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5959:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5944:46:4"
													},
													{
														"AST": {
															"nativeSrc": "6013:362:4",
															"nodeType": "YulBlock",
															"src": "6013:362:4",
															"statements": [
																{
																	"nativeSrc": "6078:37:4",
																	"nodeType": "YulAssignment",
																	"src": "6078:37:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6097:11:4",
																				"nodeType": "YulIdentifier",
																				"src": "6097:11:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6110:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6110:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6093:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:4"
																		},
																		"nativeSrc": "6093:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6093:22:4"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6078:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "6078:11:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6182:25:4",
																	"nodeType": "YulAssignment",
																	"src": "6182:25:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6195:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6195:5:4"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6202:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6202:4:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6191:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6191:3:4"
																		},
																		"nativeSrc": "6191:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:16:4"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6182:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6182:5:4"
																		}
																	]
																},
																{
																	"nativeSrc": "6322:39:4",
																	"nodeType": "YulAssignment",
																	"src": "6322:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6342:1:4",
																								"nodeType": "YulLiteral",
																								"src": "6342:1:4",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6345:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "6345:4:4"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6338:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6338:3:4"
																						},
																						"nativeSrc": "6338:12:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6338:12:4"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6352:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "6352:4:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6334:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6334:3:4"
																				},
																				"nativeSrc": "6334:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6334:23:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6359:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6359:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6330:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:4"
																		},
																		"nativeSrc": "6330:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6330:31:4"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6322:4:4",
																			"nodeType": "YulIdentifier",
																			"src": "6322:4:4"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 982,
																"isOffset": false,
																"isSlot": false,
																"src": "6078:11:4",
																"valueSize": 1
															},
															{
																"declaration": 982,
																"isOffset": false,
																"isSlot": false,
																"src": "6097:11:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6182:5:4",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "6195:5:4",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "6110:4:4",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "6202:4:4",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "6322:4:4",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "6345:4:4",
																"valueSize": 1
															},
															{
																"declaration": 1019,
																"isOffset": false,
																"isSlot": false,
																"src": "6352:4:4",
																"valueSize": 1
															}
														],
														"id": 1027,
														"nodeType": "InlineAssembly",
														"src": "6004:371:4"
													},
													{
														"expression": {
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "6441:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1029,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "6450:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1030,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "6458:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6450:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6441:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1033,
														"nodeType": "ExpressionStatement",
														"src": "6441:21:4"
													},
													{
														"assignments": [
															1035
														],
														"declarations": [
															{
																"constant": false,
																"id": 1035,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6788:7:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "6780:15:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1034,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6780:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1042,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6799:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1037,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "6803:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6799:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6798:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6818:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6798:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6780:39:4"
													},
													{
														"expression": {
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1043,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7036:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7047:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1045,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7051:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1046,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7065:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7051:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7047:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7036:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "7036:36:4"
													},
													{
														"expression": {
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1051,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7105:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7116:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7120:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1054,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7134:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7120:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7116:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7105:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "7105:36:4"
													},
													{
														"expression": {
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1059,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7175:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7186:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7190:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1062,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7204:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7190:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7186:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7175:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1066,
														"nodeType": "ExpressionStatement",
														"src": "7175:36:4"
													},
													{
														"expression": {
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1067,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7256:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1069,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7260:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1070,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7274:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7260:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7256:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7245:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1074,
														"nodeType": "ExpressionStatement",
														"src": "7245:36:4"
													},
													{
														"expression": {
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1075,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7315:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7326:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1077,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7330:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1078,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7344:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7330:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7326:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7315:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1082,
														"nodeType": "ExpressionStatement",
														"src": "7315:36:4"
													},
													{
														"expression": {
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1083,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "7386:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "7401:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1086,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "7415:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7401:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7397:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7386:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1090,
														"nodeType": "ExpressionStatement",
														"src": "7386:36:4"
													},
													{
														"expression": {
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1091,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "7856:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1092,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "7865:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1093,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "7873:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7865:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7856:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1096,
														"nodeType": "ExpressionStatement",
														"src": "7856:24:4"
													},
													{
														"expression": {
															"id": 1097,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "7901:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 986,
														"id": 1098,
														"nodeType": "Return",
														"src": "7894:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "3490:313:4",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3817:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3832:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3824:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3843:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3835:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3854:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3846:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3823:43:4"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3898:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3890:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:16:4"
									},
									"scope": 1767,
									"src": "3808:4116:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "8166:192:4",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8184:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "8176:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8176:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"arguments": [
														{
															"id": 1119,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "8200:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1120,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8203:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1121,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "8206:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1101,
															1144
														],
														"referencedDeclaration": 1101,
														"src": "8193:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8176:42:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1125,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "8249:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$724",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$724",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1124,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "8232:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$724_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8232:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1128,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8269:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1129,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "8272:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1130,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "8275:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1127,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8262:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8262:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8290:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8262:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8232:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "8228:101:4",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "8293:36:4",
													"statements": [
														{
															"expression": {
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1135,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "8307:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8317:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8307:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1138,
															"nodeType": "ExpressionStatement",
															"src": "8307:11:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1141,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "8345:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1142,
												"nodeType": "Return",
												"src": "8338:13:4"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "7930:121:4",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8065:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8080:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "8072:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8091:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "8083:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8102:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "8094:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8124:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "8115:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1109,
														"name": "Rounding",
														"nameLocations": [
															"8115:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "8115:8:4"
													},
													"referencedDeclaration": 724,
													"src": "8115:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8071:62:4"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "8157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8156:9:4"
									},
									"scope": 1767,
									"src": "8056:302:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "8649:1585:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "8663:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8668:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8663:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "8659:45:4",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "8671:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8692:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1151,
															"id": 1156,
															"nodeType": "Return",
															"src": "8685:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9391:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "9383:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9383:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1163,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "9411:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1162,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1423,
																			1458
																		],
																		"referencedDeclaration": 1423,
																		"src": "9406:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9406:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9417:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9406:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1167,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9405:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9400:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9383:36:4"
											},
											{
												"id": 1254,
												"nodeType": "UncheckedBlock",
												"src": "9820:408:4",
												"statements": [
													{
														"expression": {
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1170,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "9844:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1171,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "9854:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1172,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "9863:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1173,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "9867:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9863:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9854:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1176,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9853:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9878:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9853:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9844:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1180,
														"nodeType": "ExpressionStatement",
														"src": "9844:35:4"
													},
													{
														"expression": {
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1181,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "9893:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1182,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "9903:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1183,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "9912:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1184,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "9916:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9912:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9903:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1187,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9902:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9902:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9893:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1191,
														"nodeType": "ExpressionStatement",
														"src": "9893:35:4"
													},
													{
														"expression": {
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1192,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "9942:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1193,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "9952:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1194,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "9961:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1195,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "9965:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9961:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9952:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1198,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9951:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9976:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9951:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9942:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1202,
														"nodeType": "ExpressionStatement",
														"src": "9942:35:4"
													},
													{
														"expression": {
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1203,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "9991:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1204,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "10001:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1205,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "10010:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1206,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "10014:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10010:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10001:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10000:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10025:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10000:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9991:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1213,
														"nodeType": "ExpressionStatement",
														"src": "9991:35:4"
													},
													{
														"expression": {
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1214,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "10040:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1215,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "10050:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1216,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "10059:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1217,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "10063:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10059:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10050:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1220,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10049:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10074:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10049:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10040:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1224,
														"nodeType": "ExpressionStatement",
														"src": "10040:35:4"
													},
													{
														"expression": {
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1225,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "10089:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1226,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "10099:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1227,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "10108:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1228,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "10112:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10108:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10099:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1231,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10098:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10123:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10098:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10089:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1235,
														"nodeType": "ExpressionStatement",
														"src": "10089:35:4"
													},
													{
														"expression": {
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1236,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "10138:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1237,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "10148:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "10157:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1239,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "10161:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10157:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10148:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1242,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10147:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10172:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10147:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10138:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1246,
														"nodeType": "ExpressionStatement",
														"src": "10138:35:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1248,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "10198:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "10206:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1250,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "10210:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10206:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1247,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "10194:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10194:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1151,
														"id": 1253,
														"nodeType": "Return",
														"src": "10187:30:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "8364:223:4",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8601:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8614:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "8606:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8605:11:4"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "8640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8639:9:4"
									},
									"scope": 1767,
									"src": "8592:1642:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "10410:164:4",
										"statements": [
											{
												"id": 1289,
												"nodeType": "UncheckedBlock",
												"src": "10420:148:4",
												"statements": [
													{
														"assignments": [
															1268
														],
														"declarations": [
															{
																"constant": false,
																"id": 1268,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10452:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1289,
																"src": "10444:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1267,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1272,
														"initialValue": {
															"arguments": [
																{
																	"id": 1270,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "10466:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1269,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1256,
																	1291
																],
																"referencedDeclaration": 1256,
																"src": "10461:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10461:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10444:24:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1273,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "10489:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1275,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "10516:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1274,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "10499:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$724_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10499:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1277,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1268,
																						"src": "10529:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1278,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1268,
																						"src": "10538:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10529:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1280,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "10547:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10529:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10499:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10555:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10499:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10551:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1286,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10498:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10489:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1266,
														"id": 1288,
														"nodeType": "Return",
														"src": "10482:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "10240:89:4",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10343:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10356:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10348:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10368:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10359:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1260,
														"name": "Rounding",
														"nameLocations": [
															"10359:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "10359:8:4"
													},
													"referencedDeclaration": 724,
													"src": "10359:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10347:30:4"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10401:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10401:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10400:9:4"
									},
									"scope": 1767,
									"src": "10334:240:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "10765:922:4",
										"statements": [
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10783:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "10775:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10775:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"hexValue": "30",
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10792:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10775:18:4"
											},
											{
												"id": 1419,
												"nodeType": "UncheckedBlock",
												"src": "10803:855:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1303,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "10831:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10840:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10831:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10846:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10831:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1317,
														"nodeType": "IfStatement",
														"src": "10827:99:4",
														"trueBody": {
															"id": 1316,
															"nodeType": "Block",
															"src": "10849:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1308,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "10867:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10877:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10867:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "10867:13:4"
																},
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "10898:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10908:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10898:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "10898:13:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1318,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "10943:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10952:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10943:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10957:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10943:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1332,
														"nodeType": "IfStatement",
														"src": "10939:96:4",
														"trueBody": {
															"id": 1331,
															"nodeType": "Block",
															"src": "10960:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "10978:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10988:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10978:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "10978:12:4"
																},
																{
																	"expression": {
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11008:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11018:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11008:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1330,
																	"nodeType": "ExpressionStatement",
																	"src": "11008:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11052:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11061:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11052:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11066:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11052:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1347,
														"nodeType": "IfStatement",
														"src": "11048:96:4",
														"trueBody": {
															"id": 1346,
															"nodeType": "Block",
															"src": "11069:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "11087:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11097:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11087:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1341,
																	"nodeType": "ExpressionStatement",
																	"src": "11087:12:4"
																},
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1342,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11117:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11127:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11117:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "11117:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1348,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11161:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11170:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11161:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11175:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11161:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1362,
														"nodeType": "IfStatement",
														"src": "11157:96:4",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "11178:75:4",
															"statements": [
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "11196:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11206:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11196:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "11196:12:4"
																},
																{
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11226:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11236:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11226:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "11226:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1363,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11270:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11279:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11270:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11283:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11270:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1377,
														"nodeType": "IfStatement",
														"src": "11266:93:4",
														"trueBody": {
															"id": 1376,
															"nodeType": "Block",
															"src": "11286:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "11304:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11314:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11304:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1371,
																	"nodeType": "ExpressionStatement",
																	"src": "11304:11:4"
																},
																{
																	"expression": {
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11333:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11343:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11333:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "11333:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1378,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11376:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11385:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11376:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11389:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11376:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "11372:93:4",
														"trueBody": {
															"id": 1391,
															"nodeType": "Block",
															"src": "11392:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "11410:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11420:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11410:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "11410:11:4"
																},
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11439:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11439:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "11439:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11482:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11491:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11482:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11495:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11482:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1407,
														"nodeType": "IfStatement",
														"src": "11478:93:4",
														"trueBody": {
															"id": 1406,
															"nodeType": "Block",
															"src": "11498:73:4",
															"statements": [
																{
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "11516:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11526:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11516:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1401,
																	"nodeType": "ExpressionStatement",
																	"src": "11516:11:4"
																},
																{
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11545:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11555:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11545:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1405,
																	"nodeType": "ExpressionStatement",
																	"src": "11545:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11588:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11597:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11588:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11588:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1418,
														"nodeType": "IfStatement",
														"src": "11584:64:4",
														"trueBody": {
															"id": 1417,
															"nodeType": "Block",
															"src": "11604:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1413,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1300,
																			"src": "11622:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11632:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11622:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1416,
																	"nodeType": "ExpressionStatement",
																	"src": "11622:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1420,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "11674:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1421,
												"nodeType": "Return",
												"src": "11667:13:4"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "10580:119:4",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10713:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10726:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "10718:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10717:15:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "10756:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10756:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10755:9:4"
									},
									"scope": 1767,
									"src": "10704:983:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "11920:168:4",
										"statements": [
											{
												"id": 1456,
												"nodeType": "UncheckedBlock",
												"src": "11930:152:4",
												"statements": [
													{
														"assignments": [
															1435
														],
														"declarations": [
															{
																"constant": false,
																"id": 1435,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11962:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1456,
																"src": "11954:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1434,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11954:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1439,
														"initialValue": {
															"arguments": [
																{
																	"id": 1437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "11976:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1436,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1423,
																	1458
																],
																"referencedDeclaration": 1423,
																"src": "11971:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11971:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11954:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1440,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "12003:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1442,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1429,
																						"src": "12030:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1441,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "12013:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$724_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12013:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12043:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1445,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1435,
																						"src": "12048:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12043:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1447,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "12057:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12043:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12013:49:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12069:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12013:57:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12065:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12012:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12003:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1433,
														"id": 1455,
														"nodeType": "Return",
														"src": "11996:75:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "11693:142:4",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11849:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11862:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "11854:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11878:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "11869:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1427,
														"name": "Rounding",
														"nameLocations": [
															"11869:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "11869:8:4"
													},
													"referencedDeclaration": 724,
													"src": "11869:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11853:34:4"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "11911:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11911:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11910:9:4"
									},
									"scope": 1767,
									"src": "11840:248:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "12281:854:4",
										"statements": [
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12299:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1586,
														"src": "12291:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12291:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"hexValue": "30",
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12308:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12291:18:4"
											},
											{
												"id": 1583,
												"nodeType": "UncheckedBlock",
												"src": "12319:787:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1470,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12347:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12356:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12362:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12356:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12347:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1486,
														"nodeType": "IfStatement",
														"src": "12343:103:4",
														"trueBody": {
															"id": 1485,
															"nodeType": "Block",
															"src": "12366:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1475,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12384:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12393:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12399:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12393:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12384:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1480,
																	"nodeType": "ExpressionStatement",
																	"src": "12384:17:4"
																},
																{
																	"expression": {
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1481,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12419:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12429:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12419:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1484,
																	"nodeType": "ExpressionStatement",
																	"src": "12419:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1487,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12463:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12472:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12478:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12472:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12463:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1503,
														"nodeType": "IfStatement",
														"src": "12459:103:4",
														"trueBody": {
															"id": 1502,
															"nodeType": "Block",
															"src": "12482:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1492,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12500:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12509:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12515:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12509:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12500:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1497,
																	"nodeType": "ExpressionStatement",
																	"src": "12500:17:4"
																},
																{
																	"expression": {
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1498,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12535:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12545:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12535:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1501,
																	"nodeType": "ExpressionStatement",
																	"src": "12535:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1504,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12579:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12588:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12594:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12588:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12579:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1520,
														"nodeType": "IfStatement",
														"src": "12575:103:4",
														"trueBody": {
															"id": 1519,
															"nodeType": "Block",
															"src": "12598:80:4",
															"statements": [
																{
																	"expression": {
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1509,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12616:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12625:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12631:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12625:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12616:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1514,
																	"nodeType": "ExpressionStatement",
																	"src": "12616:17:4"
																},
																{
																	"expression": {
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12651:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12661:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12651:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1518,
																	"nodeType": "ExpressionStatement",
																	"src": "12651:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1521,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12695:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12704:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12710:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12704:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12695:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1537,
														"nodeType": "IfStatement",
														"src": "12691:100:4",
														"trueBody": {
															"id": 1536,
															"nodeType": "Block",
															"src": "12713:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1526,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12731:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12740:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12746:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12740:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12731:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1531,
																	"nodeType": "ExpressionStatement",
																	"src": "12731:16:4"
																},
																{
																	"expression": {
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1532,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12765:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12775:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12765:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1535,
																	"nodeType": "ExpressionStatement",
																	"src": "12765:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1538,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12808:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12817:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12817:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12808:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1554,
														"nodeType": "IfStatement",
														"src": "12804:100:4",
														"trueBody": {
															"id": 1553,
															"nodeType": "Block",
															"src": "12826:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1543,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12844:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12853:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12859:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12853:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12844:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1548,
																	"nodeType": "ExpressionStatement",
																	"src": "12844:16:4"
																},
																{
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12878:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12888:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12878:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1552,
																	"nodeType": "ExpressionStatement",
																	"src": "12878:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1555,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "12921:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12930:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12936:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12930:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12921:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1571,
														"nodeType": "IfStatement",
														"src": "12917:100:4",
														"trueBody": {
															"id": 1570,
															"nodeType": "Block",
															"src": "12939:78:4",
															"statements": [
																{
																	"expression": {
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "12957:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12966:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12972:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12966:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12957:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1565,
																	"nodeType": "ExpressionStatement",
																	"src": "12957:16:4"
																},
																{
																	"expression": {
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1566,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "12991:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13001:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12991:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1569,
																	"nodeType": "ExpressionStatement",
																	"src": "12991:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1572,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "13034:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13043:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13049:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13043:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13034:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1582,
														"nodeType": "IfStatement",
														"src": "13030:66:4",
														"trueBody": {
															"id": 1581,
															"nodeType": "Block",
															"src": "13052:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1577,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1467,
																			"src": "13070:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13080:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13070:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1580,
																	"nodeType": "ExpressionStatement",
																	"src": "13070:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1584,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1467,
													"src": "13122:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1585,
												"nodeType": "Return",
												"src": "13115:13:4"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "12094:120:4",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12228:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12233:15:4"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12272:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12271:9:4"
									},
									"scope": 1767,
									"src": "12219:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "13370:170:4",
										"statements": [
											{
												"id": 1620,
												"nodeType": "UncheckedBlock",
												"src": "13380:154:4",
												"statements": [
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13412:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1620,
																"src": "13404:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1603,
														"initialValue": {
															"arguments": [
																{
																	"id": 1601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "13427:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1600,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1587,
																	1622
																],
																"referencedDeclaration": 1587,
																"src": "13421:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13421:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13404:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "13454:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1606,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1593,
																						"src": "13481:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1605,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "13464:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$724_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13464:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1610,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1608,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13494:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1609,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1599,
																						"src": "13500:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13494:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1611,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "13509:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13494:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13464:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13521:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13464:58:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13517:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1617,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13463:60:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13454:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1597,
														"id": 1619,
														"nodeType": "Return",
														"src": "13447:76:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "13141:143:4",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13298:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13312:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "13304:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13328:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "13319:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1591,
														"name": "Rounding",
														"nameLocations": [
															"13319:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "13319:8:4"
													},
													"referencedDeclaration": 724,
													"src": "13319:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13303:34:4"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "13361:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13361:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:9:4"
									},
									"scope": 1767,
									"src": "13289:251:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "13860:600:4",
										"statements": [
											{
												"assignments": [
													1631
												],
												"declarations": [
													{
														"constant": false,
														"id": 1631,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13878:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1708,
														"src": "13870:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13870:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1633,
												"initialValue": {
													"hexValue": "30",
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13887:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13870:18:4"
											},
											{
												"id": 1705,
												"nodeType": "UncheckedBlock",
												"src": "13898:533:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "13926:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13935:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13926:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13941:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13926:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1648,
														"nodeType": "IfStatement",
														"src": "13922:98:4",
														"trueBody": {
															"id": 1647,
															"nodeType": "Block",
															"src": "13944:76:4",
															"statements": [
																{
																	"expression": {
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "13962:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13972:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13962:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1642,
																	"nodeType": "ExpressionStatement",
																	"src": "13962:13:4"
																},
																{
																	"expression": {
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "13993:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14003:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13993:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1646,
																	"nodeType": "ExpressionStatement",
																	"src": "13993:12:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1649,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "14037:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14046:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14037:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14037:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1663,
														"nodeType": "IfStatement",
														"src": "14033:95:4",
														"trueBody": {
															"id": 1662,
															"nodeType": "Block",
															"src": "14054:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "14072:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14082:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14072:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1657,
																	"nodeType": "ExpressionStatement",
																	"src": "14072:12:4"
																},
																{
																	"expression": {
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "14102:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14112:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14102:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1661,
																	"nodeType": "ExpressionStatement",
																	"src": "14102:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "14145:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14154:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14145:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14159:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14145:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "14141:95:4",
														"trueBody": {
															"id": 1677,
															"nodeType": "Block",
															"src": "14162:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "14180:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14190:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14180:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1672,
																	"nodeType": "ExpressionStatement",
																	"src": "14180:12:4"
																},
																{
																	"expression": {
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "14210:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14220:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14210:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1676,
																	"nodeType": "ExpressionStatement",
																	"src": "14210:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "14253:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14262:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14253:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14267:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14253:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1693,
														"nodeType": "IfStatement",
														"src": "14249:95:4",
														"trueBody": {
															"id": 1692,
															"nodeType": "Block",
															"src": "14270:74:4",
															"statements": [
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "14288:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14298:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14288:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "14288:12:4"
																},
																{
																	"expression": {
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "14318:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14328:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14318:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1691,
																	"nodeType": "ExpressionStatement",
																	"src": "14318:11:4"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "14361:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14370:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14361:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14374:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14361:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "14357:64:4",
														"trueBody": {
															"id": 1703,
															"nodeType": "Block",
															"src": "14377:44:4",
															"statements": [
																{
																	"expression": {
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "14395:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14405:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14395:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1702,
																	"nodeType": "ExpressionStatement",
																	"src": "14395:11:4"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1706,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1631,
													"src": "14447:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1707,
												"nodeType": "Return",
												"src": "14440:13:4"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "13546:246:4",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13806:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13821:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "13813:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13812:15:4"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "13851:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13851:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13850:9:4"
									},
									"scope": 1767,
									"src": "13797:663:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "14697:177:4",
										"statements": [
											{
												"id": 1745,
												"nodeType": "UncheckedBlock",
												"src": "14707:161:4",
												"statements": [
													{
														"assignments": [
															1721
														],
														"declarations": [
															{
																"constant": false,
																"id": 1721,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14739:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 1745,
																"src": "14731:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14731:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1725,
														"initialValue": {
															"arguments": [
																{
																	"id": 1723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "14755:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1722,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1709,
																	1747
																],
																"referencedDeclaration": 1709,
																"src": "14748:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14748:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14731:30:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "14782:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1728,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1715,
																						"src": "14809:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$724",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1727,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "14792:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$724_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14792:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14822:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1733,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1731,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1721,
																									"src": "14828:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1732,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14838:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14828:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1734,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14827:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14822:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1736,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1712,
																					"src": "14843:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14822:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14792:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14855:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14792:64:4",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14851:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1742,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14791:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14782:75:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1719,
														"id": 1744,
														"nodeType": "Return",
														"src": "14775:82:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "14466:144:4",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14624:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14639:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "14631:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14655:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "14646:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1713,
														"name": "Rounding",
														"nameLocations": [
															"14646:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "14646:8:4"
													},
													"referencedDeclaration": 724,
													"src": "14646:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14630:34:4"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "14688:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14688:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14687:9:4"
									},
									"scope": 1767,
									"src": "14615:259:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "15072:48:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "15095:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$724",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$724",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15089:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1756,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15089:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15089:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15107:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15089:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15112:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15089:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1764,
												"nodeType": "Return",
												"src": "15082:31:4"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "14880:113:4",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15007:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15033:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "15024:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$724",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1749,
														"name": "Rounding",
														"nameLocations": [
															"15024:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 724,
														"src": "15024:8:4"
													},
													"referencedDeclaration": 724,
													"src": "15024:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$724",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15023:19:4"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "15066:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15066:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15065:6:4"
									},
									"scope": 1767,
									"src": "14998:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1768,
							"src": "208:14914:4",
							"usedErrors": [
								719
							],
							"usedEvents": []
						}
					],
					"src": "108:15015:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0-rc.0/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1770,
								"nodeType": "StructuredDocumentation",
								"src": "140:80:5",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "SignedMath",
							"nameLocation": "229:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "381:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1780,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "398:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1781,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "402:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "398:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1784,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "410:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "398:13:5",
													"trueExpression": {
														"id": 1783,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "406:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1779,
												"id": 1786,
												"nodeType": "Return",
												"src": "391:20:5"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "246:66:5",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "326:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "337:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "330:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1772,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "330:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "347:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "340:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1774,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "340:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:20:5"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "373:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1777,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "373:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:8:5"
									},
									"scope": 1872,
									"src": "317:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "560:37:5",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1798,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "577:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1799,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "581:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "577:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1802,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "589:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "577:13:5",
													"trueExpression": {
														"id": 1801,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "585:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1797,
												"id": 1804,
												"nodeType": "Return",
												"src": "570:20:5"
											}
										]
									},
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "424:67:5",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "505:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "516:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "509:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1790,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "509:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "526:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "519:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1792,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "519:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:20:5"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "552:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1795,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "552:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:8:5"
									},
									"scope": 1872,
									"src": "496:101:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "802:162:5",
										"statements": [
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "871:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1849,
														"src": "864:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1816,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "864:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1830,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1818,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "876:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1819,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "880:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "876:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1821,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "875:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1822,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "887:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1823,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1811,
																				"src": "891:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "887:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1825,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "886:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "897:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "886:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1828,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "885:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "875:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "864:35:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1831,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "916:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1836,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1817,
																						"src": "936:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "928:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1834,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "928:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "928:10:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "942:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "928:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "921:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1832,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "921:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "921:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1841,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "950:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1842,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1811,
																				"src": "954:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "950:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1844,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "949:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "921:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1846,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "916:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1848,
												"nodeType": "Return",
												"src": "909:48:5"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "603:126:5",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "743:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "758:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "751:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1808,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "768:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "761:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1810,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "761:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:20:5"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "794:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1813,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:8:5"
									},
									"scope": 1872,
									"src": "734:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "1108:158:5",
										"statements": [
											{
												"id": 1869,
												"nodeType": "UncheckedBlock",
												"src": "1118:142:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1860,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "1233:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1238:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1233:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1246:2:5",
																		"subExpression": {
																			"id": 1864,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "1247:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1233:15:5",
																	"trueExpression": {
																		"id": 1863,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1853,
																		"src": "1242:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1225:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1858,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1225:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1225:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1857,
														"id": 1868,
														"nodeType": "Return",
														"src": "1218:31:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "970:78:5",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1062:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1073:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "1066:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1852,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:10:5"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "1099:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:9:5"
									},
									"scope": 1872,
									"src": "1053:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1873,
							"src": "221:1047:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:1155:5"
				},
				"id": 5
			}
		}
	}
}