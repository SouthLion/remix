{
	"id": "967c12d67307643ed3248b74beeae99d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/program/vault/vault01.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Vault01 {\n    IERC20 public immutable token;\n    uint256 public totalsupply;\n    mapping(address => uint256) public balance0f;\n\n    constructor(IERC20 _token) {\n        token = _token;\n    }\n\n    function _mint(address _to, uint256 _shares) private {\n        totalsupply += _shares;\n        balance0f[_to] += _shares;\n    }\n\n    function _burn(address _from, uint256 _shares) private {\n        totalsupply -= _shares;\n        balance0f[_from] -= _shares;\n    }\n\n    function deposit(uint256 _amount) external {\n        /*\n            a = amount\n            B = balance of token before deposit\n            T = shares total supply\n            s = shares to mint\n        \n            (T + s) / T = (a + B) / B\n            s = aT /B\n        */\n\n        uint256 shares;\n        if (totalsupply == 0) {\n            shares = _amount;\n        } else {\n            shares = (_amount * totalsupply) / token.balanceOf(address(this));\n        }\n        _mint(msg.sender, shares);\n        token.transferFrom(msg.sender, address(this), _amount);\n    }\n\n    function withdraw(uint256 _shares) external {\n        /*\n            a = amount\n            B = balance of token before withdraw\n            T= shares total supply\n            s= shares to burn\n            (T-s) / T = (B - a) / B \n            a = SB /T \n        */\n        uint256 amount = (_shares * token.balanceOf(address(this))) / totalsupply;\n        _burn(msg.sender, _shares);\n        token.transfer(msg.sender, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/program/vault/vault01.sol": {
				"Vault01": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balance0f",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalsupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/program/vault/vault01.sol\":114:1601  contract Vault01 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/program/vault/vault01.sol\":255:313  constructor(IERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/program/vault/vault01.sol\":300:306  _token */\n  dup1\n    /* \"contracts/program/vault/vault01.sol\":292:306  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/program/vault/vault01.sol\":255:313  constructor(IERC20 _token) {... */\n  pop\n    /* \"contracts/program/vault/vault01.sol\":114:1601  contract Vault01 {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_12:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_23\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_13:\n    /* \"#utility.yul\":771:809   */\n  tag_25\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_26:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_14:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_28\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1118:1237   */\ntag_30:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_32\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/program/vault/vault01.sol\":114:1601  contract Vault01 {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/program/vault/vault01.sol\":114:1601  contract Vault01 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x72dd529b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb4de8673\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/program/vault/vault01.sol\":1166:1599  function withdraw(uint256 _shares) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/program/vault/vault01.sol\":172:198  uint256 public totalsupply */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault01.sol\":204:248  mapping(address => uint256) public balance0f */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault01.sol\":589:1160  function deposit(uint256 _amount) external {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/program/vault/vault01.sol\":137:166  IERC20 public immutable token */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault01.sol\":1166:1599  function withdraw(uint256 _shares) external {... */\n    tag_11:\n        /* \"contracts/program/vault/vault01.sol\":1439:1453  uint256 amount */\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":1501:1512  totalsupply */\n      dup1\n      sload\n        /* \"contracts/program/vault/vault01.sol\":1467:1472  token */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"contracts/program/vault/vault01.sol\":1467:1482  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/program/vault/vault01.sol\":1491:1495  this */\n      address\n        /* \"contracts/program/vault/vault01.sol\":1467:1497  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/program/vault/vault01.sol\":1457:1464  _shares */\n      dup4\n        /* \"contracts/program/vault/vault01.sol\":1457:1497  _shares * token.balanceOf(address(this)) */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/program/vault/vault01.sol\":1456:1512  (_shares * token.balanceOf(address(this))) / totalsupply */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/program/vault/vault01.sol\":1439:1512  uint256 amount = (_shares * token.balanceOf(address(this))) / totalsupply */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault01.sol\":1522:1548  _burn(msg.sender, _shares) */\n      tag_39\n        /* \"contracts/program/vault/vault01.sol\":1528:1538  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault01.sol\":1540:1547  _shares */\n      dup4\n        /* \"contracts/program/vault/vault01.sol\":1522:1527  _burn */\n      tag_40\n        /* \"contracts/program/vault/vault01.sol\":1522:1548  _burn(msg.sender, _shares) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/program/vault/vault01.sol\":1558:1563  token */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"contracts/program/vault/vault01.sol\":1558:1572  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/program/vault/vault01.sol\":1573:1583  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault01.sol\":1585:1591  amount */\n      dup4\n        /* \"contracts/program/vault/vault01.sol\":1558:1592  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      pop\n        /* \"contracts/program/vault/vault01.sol\":1210:1599  {... */\n      pop\n        /* \"contracts/program/vault/vault01.sol\":1166:1599  function withdraw(uint256 _shares) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":172:198  uint256 public totalsupply */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":204:248  mapping(address => uint256) public balance0f */\n    tag_19:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":589:1160  function deposit(uint256 _amount) external {... */\n    tag_23:\n        /* \"contracts/program/vault/vault01.sol\":872:886  uint256 shares */\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":915:916  0 */\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":900:911  totalsupply */\n      sload(0x00)\n        /* \"contracts/program/vault/vault01.sol\":900:916  totalsupply == 0 */\n      sub\n        /* \"contracts/program/vault/vault01.sol\":896:1055  if (totalsupply == 0) {... */\n      tag_48\n      jumpi\n        /* \"contracts/program/vault/vault01.sol\":941:948  _amount */\n      dup2\n        /* \"contracts/program/vault/vault01.sol\":932:948  shares = _amount */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault01.sol\":896:1055  if (totalsupply == 0) {... */\n      jump(tag_49)\n    tag_48:\n        /* \"contracts/program/vault/vault01.sol\":1014:1019  token */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"contracts/program/vault/vault01.sol\":1014:1029  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/program/vault/vault01.sol\":1038:1042  this */\n      address\n        /* \"contracts/program/vault/vault01.sol\":1014:1044  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n        /* \"contracts/program/vault/vault01.sol\":999:1010  totalsupply */\n      sload(0x00)\n        /* \"contracts/program/vault/vault01.sol\":989:996  _amount */\n      dup4\n        /* \"contracts/program/vault/vault01.sol\":989:1010  _amount * totalsupply */\n      tag_54\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_54:\n        /* \"contracts/program/vault/vault01.sol\":988:1044  (_amount * totalsupply) / token.balanceOf(address(this)) */\n      tag_55\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"contracts/program/vault/vault01.sol\":979:1044  shares = (_amount * totalsupply) / token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault01.sol\":896:1055  if (totalsupply == 0) {... */\n    tag_49:\n        /* \"contracts/program/vault/vault01.sol\":1064:1089  _mint(msg.sender, shares) */\n      tag_56\n        /* \"contracts/program/vault/vault01.sol\":1070:1080  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault01.sol\":1082:1088  shares */\n      dup3\n        /* \"contracts/program/vault/vault01.sol\":1064:1069  _mint */\n      tag_57\n        /* \"contracts/program/vault/vault01.sol\":1064:1089  _mint(msg.sender, shares) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/program/vault/vault01.sol\":1099:1104  token */\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n        /* \"contracts/program/vault/vault01.sol\":1099:1117  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/program/vault/vault01.sol\":1118:1128  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault01.sol\":1138:1142  this */\n      address\n        /* \"contracts/program/vault/vault01.sol\":1145:1152  _amount */\n      dup6\n        /* \"contracts/program/vault/vault01.sol\":1099:1153  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n      pop\n        /* \"contracts/program/vault/vault01.sol\":632:1160  {... */\n      pop\n        /* \"contracts/program/vault/vault01.sol\":589:1160  function deposit(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":137:166  IERC20 public immutable token */\n    tag_25:\n      immutable(\"0x588e5ad3f145f9d841773d4229bac23d743ef980914ad5d2b613712259f67f55\")\n      dup2\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":452:583  function _burn(address _from, uint256 _shares) private {... */\n    tag_40:\n        /* \"contracts/program/vault/vault01.sol\":532:539  _shares */\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":517:528  totalsupply */\n      0x00\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":517:539  totalsupply -= _shares */\n      dup3\n      dup3\n      sload\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/program/vault/vault01.sol\":569:576  _shares */\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":549:558  balance0f */\n      0x01\n        /* \"contracts/program/vault/vault01.sol\":549:565  balance0f[_from] */\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":559:564  _from */\n      dup5\n        /* \"contracts/program/vault/vault01.sol\":549:565  balance0f[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":549:576  balance0f[_from] -= _shares */\n      dup3\n      dup3\n      sload\n      tag_66\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/program/vault/vault01.sol\":452:583  function _burn(address _from, uint256 _shares) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault01.sol\":319:446  function _mint(address _to, uint256 _shares) private {... */\n    tag_57:\n        /* \"contracts/program/vault/vault01.sol\":397:404  _shares */\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":382:393  totalsupply */\n      0x00\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":382:404  totalsupply += _shares */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/program/vault/vault01.sol\":432:439  _shares */\n      dup1\n        /* \"contracts/program/vault/vault01.sol\":414:423  balance0f */\n      0x01\n        /* \"contracts/program/vault/vault01.sol\":414:428  balance0f[_to] */\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":424:427  _to */\n      dup5\n        /* \"contracts/program/vault/vault01.sol\":414:428  balance0f[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/program/vault/vault01.sol\":414:439  balance0f[_to] += _shares */\n      dup3\n      dup3\n      sload\n      tag_70\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/program/vault/vault01.sol\":319:446  function _mint(address _to, uint256 _shares) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_75:\n        /* \"#utility.yul\":490:514   */\n      tag_100\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_74\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_101:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_76:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_103\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_75\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_106\n      tag_72\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":766:885   */\n    tag_105:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_107\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_76\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_77:\n        /* \"#utility.yul\":1112:1136   */\n      tag_109\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_74\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_15:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_111\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_78:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_79:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_114\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_78\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_80:\n        /* \"#utility.yul\":1684:1708   */\n      tag_116\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_117:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_81:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_119\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_80\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_18:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_122\n      tag_72\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1960:2079   */\n    tag_121:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_123\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_81\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_82:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_83:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_126\n        /* \"#utility.yul\":2386:2420   */\n      tag_127\n        /* \"#utility.yul\":2395:2419   */\n      tag_128\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_78\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2386:2420   */\n      tag_82\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2368:2421   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_84:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_130\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_83\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_85:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_132\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_84\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_86:\n        /* \"#utility.yul\":2812:2863   */\n      tag_134\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_85\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_27:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_136\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_86\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_87:\n        /* \"#utility.yul\":3219:3243   */\n      tag_138\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_79\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_30:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_140\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_87\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3627   */\n    tag_88:\n        /* \"#utility.yul\":3541:3546   */\n      0x00\n        /* \"#utility.yul\":3572:3578   */\n      dup2\n        /* \"#utility.yul\":3566:3579   */\n      mload\n        /* \"#utility.yul\":3557:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3621   */\n      tag_142\n        /* \"#utility.yul\":3615:3620   */\n      dup2\n        /* \"#utility.yul\":3588:3621   */\n      tag_75\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3484:3627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3633:3984   */\n    tag_34:\n        /* \"#utility.yul\":3703:3709   */\n      0x00\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup3\n        /* \"#utility.yul\":3731:3738   */\n      dup5\n        /* \"#utility.yul\":3727:3750   */\n      sub\n        /* \"#utility.yul\":3723:3755   */\n      slt\n        /* \"#utility.yul\":3720:3839   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":3758:3837   */\n      tag_145\n      tag_72\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3720:3839   */\n    tag_144:\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3903:3967   */\n      tag_146\n        /* \"#utility.yul\":3959:3966   */\n      dup5\n        /* \"#utility.yul\":3950:3956   */\n      dup3\n        /* \"#utility.yul\":3939:3948   */\n      dup6\n        /* \"#utility.yul\":3935:3957   */\n      add\n        /* \"#utility.yul\":3903:3967   */\n      tag_88\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3893:3967   */\n      swap2\n      pop\n        /* \"#utility.yul\":3849:3977   */\n      pop\n        /* \"#utility.yul\":3633:3984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4170   */\n    tag_89:\n        /* \"#utility.yul\":4038:4115   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4028:4116   */\n      mstore\n        /* \"#utility.yul\":4135:4139   */\n      0x11\n        /* \"#utility.yul\":4132:4133   */\n      0x04\n        /* \"#utility.yul\":4125:4140   */\n      mstore\n        /* \"#utility.yul\":4159:4163   */\n      0x24\n        /* \"#utility.yul\":4156:4157   */\n      0x00\n        /* \"#utility.yul\":4149:4164   */\n      revert\n        /* \"#utility.yul\":4176:4586   */\n    tag_36:\n        /* \"#utility.yul\":4216:4223   */\n      0x00\n        /* \"#utility.yul\":4239:4259   */\n      tag_149\n        /* \"#utility.yul\":4257:4258   */\n      dup3\n        /* \"#utility.yul\":4239:4259   */\n      tag_74\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4234:4259   */\n      swap2\n      pop\n        /* \"#utility.yul\":4273:4293   */\n      tag_150\n        /* \"#utility.yul\":4291:4292   */\n      dup4\n        /* \"#utility.yul\":4273:4293   */\n      tag_74\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4268:4293   */\n      swap3\n      pop\n        /* \"#utility.yul\":4328:4329   */\n      dup3\n        /* \"#utility.yul\":4325:4326   */\n      dup3\n        /* \"#utility.yul\":4321:4330   */\n      mul\n        /* \"#utility.yul\":4350:4380   */\n      tag_151\n        /* \"#utility.yul\":4368:4379   */\n      dup2\n        /* \"#utility.yul\":4350:4380   */\n      tag_74\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4339:4380   */\n      swap2\n      pop\n        /* \"#utility.yul\":4529:4530   */\n      dup3\n        /* \"#utility.yul\":4520:4527   */\n      dup3\n        /* \"#utility.yul\":4516:4531   */\n      div\n        /* \"#utility.yul\":4513:4514   */\n      dup5\n        /* \"#utility.yul\":4510:4532   */\n      eq\n        /* \"#utility.yul\":4490:4491   */\n      dup4\n        /* \"#utility.yul\":4483:4492   */\n      iszero\n        /* \"#utility.yul\":4463:4546   */\n      or\n        /* \"#utility.yul\":4440:4579   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":4559:4577   */\n      tag_153\n      tag_89\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4440:4579   */\n    tag_152:\n        /* \"#utility.yul\":4224:4586   */\n      pop\n        /* \"#utility.yul\":4176:4586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4592:4772   */\n    tag_90:\n        /* \"#utility.yul\":4640:4717   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4637:4638   */\n      0x00\n        /* \"#utility.yul\":4630:4718   */\n      mstore\n        /* \"#utility.yul\":4737:4741   */\n      0x12\n        /* \"#utility.yul\":4734:4735   */\n      0x04\n        /* \"#utility.yul\":4727:4742   */\n      mstore\n        /* \"#utility.yul\":4761:4765   */\n      0x24\n        /* \"#utility.yul\":4758:4759   */\n      0x00\n        /* \"#utility.yul\":4751:4766   */\n      revert\n        /* \"#utility.yul\":4778:4963   */\n    tag_38:\n        /* \"#utility.yul\":4818:4819   */\n      0x00\n        /* \"#utility.yul\":4835:4855   */\n      tag_156\n        /* \"#utility.yul\":4853:4854   */\n      dup3\n        /* \"#utility.yul\":4835:4855   */\n      tag_74\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4830:4855   */\n      swap2\n      pop\n        /* \"#utility.yul\":4869:4889   */\n      tag_157\n        /* \"#utility.yul\":4887:4888   */\n      dup4\n        /* \"#utility.yul\":4869:4889   */\n      tag_74\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4864:4889   */\n      swap3\n      pop\n        /* \"#utility.yul\":4908:4909   */\n      dup3\n        /* \"#utility.yul\":4898:4933   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":4913:4931   */\n      tag_159\n      tag_90\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4898:4933   */\n    tag_158:\n        /* \"#utility.yul\":4955:4956   */\n      dup3\n        /* \"#utility.yul\":4952:4953   */\n      dup3\n        /* \"#utility.yul\":4948:4957   */\n      div\n        /* \"#utility.yul\":4943:4957   */\n      swap1\n      pop\n        /* \"#utility.yul\":4778:4963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5301   */\n    tag_42:\n        /* \"#utility.yul\":5090:5094   */\n      0x00\n        /* \"#utility.yul\":5128:5130   */\n      0x40\n        /* \"#utility.yul\":5117:5126   */\n      dup3\n        /* \"#utility.yul\":5113:5131   */\n      add\n        /* \"#utility.yul\":5105:5131   */\n      swap1\n      pop\n        /* \"#utility.yul\":5141:5212   */\n      tag_161\n        /* \"#utility.yul\":5209:5210   */\n      0x00\n        /* \"#utility.yul\":5198:5207   */\n      dup4\n        /* \"#utility.yul\":5194:5211   */\n      add\n        /* \"#utility.yul\":5185:5191   */\n      dup6\n        /* \"#utility.yul\":5141:5212   */\n      tag_87\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5222:5294   */\n      tag_162\n        /* \"#utility.yul\":5290:5292   */\n      0x20\n        /* \"#utility.yul\":5279:5288   */\n      dup4\n        /* \"#utility.yul\":5275:5293   */\n      add\n        /* \"#utility.yul\":5266:5272   */\n      dup5\n        /* \"#utility.yul\":5222:5294   */\n      tag_77\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4969:5301   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5307:5397   */\n    tag_91:\n        /* \"#utility.yul\":5341:5348   */\n      0x00\n        /* \"#utility.yul\":5384:5389   */\n      dup2\n        /* \"#utility.yul\":5377:5390   */\n      iszero\n        /* \"#utility.yul\":5370:5391   */\n      iszero\n        /* \"#utility.yul\":5359:5391   */\n      swap1\n      pop\n        /* \"#utility.yul\":5307:5397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5403:5519   */\n    tag_92:\n        /* \"#utility.yul\":5473:5494   */\n      tag_165\n        /* \"#utility.yul\":5488:5493   */\n      dup2\n        /* \"#utility.yul\":5473:5494   */\n      tag_91\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5466:5471   */\n      dup2\n        /* \"#utility.yul\":5463:5495   */\n      eq\n        /* \"#utility.yul\":5453:5513   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":5509:5510   */\n      0x00\n        /* \"#utility.yul\":5506:5507   */\n      dup1\n        /* \"#utility.yul\":5499:5511   */\n      revert\n        /* \"#utility.yul\":5453:5513   */\n    tag_166:\n        /* \"#utility.yul\":5403:5519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5525:5662   */\n    tag_93:\n        /* \"#utility.yul\":5579:5584   */\n      0x00\n        /* \"#utility.yul\":5610:5616   */\n      dup2\n        /* \"#utility.yul\":5604:5617   */\n      mload\n        /* \"#utility.yul\":5595:5617   */\n      swap1\n      pop\n        /* \"#utility.yul\":5626:5656   */\n      tag_168\n        /* \"#utility.yul\":5650:5655   */\n      dup2\n        /* \"#utility.yul\":5626:5656   */\n      tag_92\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5525:5662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:6013   */\n    tag_46:\n        /* \"#utility.yul\":5735:5741   */\n      0x00\n        /* \"#utility.yul\":5784:5786   */\n      0x20\n        /* \"#utility.yul\":5772:5781   */\n      dup3\n        /* \"#utility.yul\":5763:5770   */\n      dup5\n        /* \"#utility.yul\":5759:5782   */\n      sub\n        /* \"#utility.yul\":5755:5787   */\n      slt\n        /* \"#utility.yul\":5752:5871   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5790:5869   */\n      tag_171\n      tag_72\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5752:5871   */\n    tag_170:\n        /* \"#utility.yul\":5910:5911   */\n      0x00\n        /* \"#utility.yul\":5935:5996   */\n      tag_172\n        /* \"#utility.yul\":5988:5995   */\n      dup5\n        /* \"#utility.yul\":5979:5985   */\n      dup3\n        /* \"#utility.yul\":5968:5977   */\n      dup6\n        /* \"#utility.yul\":5964:5986   */\n      add\n        /* \"#utility.yul\":5935:5996   */\n      tag_93\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5925:5996   */\n      swap2\n      pop\n        /* \"#utility.yul\":5881:6006   */\n      pop\n        /* \"#utility.yul\":5668:6013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6461   */\n    tag_59:\n        /* \"#utility.yul\":6168:6172   */\n      0x00\n        /* \"#utility.yul\":6206:6208   */\n      0x60\n        /* \"#utility.yul\":6195:6204   */\n      dup3\n        /* \"#utility.yul\":6191:6209   */\n      add\n        /* \"#utility.yul\":6183:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6219:6290   */\n      tag_174\n        /* \"#utility.yul\":6287:6288   */\n      0x00\n        /* \"#utility.yul\":6276:6285   */\n      dup4\n        /* \"#utility.yul\":6272:6289   */\n      add\n        /* \"#utility.yul\":6263:6269   */\n      dup7\n        /* \"#utility.yul\":6219:6290   */\n      tag_87\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6300:6372   */\n      tag_175\n        /* \"#utility.yul\":6368:6370   */\n      0x20\n        /* \"#utility.yul\":6357:6366   */\n      dup4\n        /* \"#utility.yul\":6353:6371   */\n      add\n        /* \"#utility.yul\":6344:6350   */\n      dup6\n        /* \"#utility.yul\":6300:6372   */\n      tag_87\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6382:6454   */\n      tag_176\n        /* \"#utility.yul\":6450:6452   */\n      0x40\n        /* \"#utility.yul\":6439:6448   */\n      dup4\n        /* \"#utility.yul\":6435:6453   */\n      add\n        /* \"#utility.yul\":6426:6432   */\n      dup5\n        /* \"#utility.yul\":6382:6454   */\n      tag_77\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6019:6461   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6467:6661   */\n    tag_65:\n        /* \"#utility.yul\":6507:6511   */\n      0x00\n        /* \"#utility.yul\":6527:6547   */\n      tag_178\n        /* \"#utility.yul\":6545:6546   */\n      dup3\n        /* \"#utility.yul\":6527:6547   */\n      tag_74\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6522:6547   */\n      swap2\n      pop\n        /* \"#utility.yul\":6561:6581   */\n      tag_179\n        /* \"#utility.yul\":6579:6580   */\n      dup4\n        /* \"#utility.yul\":6561:6581   */\n      tag_74\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6556:6581   */\n      swap3\n      pop\n        /* \"#utility.yul\":6605:6606   */\n      dup3\n        /* \"#utility.yul\":6602:6603   */\n      dup3\n        /* \"#utility.yul\":6598:6607   */\n      sub\n        /* \"#utility.yul\":6590:6607   */\n      swap1\n      pop\n        /* \"#utility.yul\":6629:6630   */\n      dup2\n        /* \"#utility.yul\":6623:6627   */\n      dup2\n        /* \"#utility.yul\":6620:6631   */\n      gt\n        /* \"#utility.yul\":6617:6654   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":6634:6652   */\n      tag_181\n      tag_89\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6617:6654   */\n    tag_180:\n        /* \"#utility.yul\":6467:6661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6667:6858   */\n    tag_69:\n        /* \"#utility.yul\":6707:6710   */\n      0x00\n        /* \"#utility.yul\":6726:6746   */\n      tag_183\n        /* \"#utility.yul\":6744:6745   */\n      dup3\n        /* \"#utility.yul\":6726:6746   */\n      tag_74\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6721:6746   */\n      swap2\n      pop\n        /* \"#utility.yul\":6760:6780   */\n      tag_184\n        /* \"#utility.yul\":6778:6779   */\n      dup4\n        /* \"#utility.yul\":6760:6780   */\n      tag_74\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6755:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6803:6804   */\n      dup3\n        /* \"#utility.yul\":6800:6801   */\n      dup3\n        /* \"#utility.yul\":6796:6805   */\n      add\n        /* \"#utility.yul\":6789:6805   */\n      swap1\n      pop\n        /* \"#utility.yul\":6824:6827   */\n      dup1\n        /* \"#utility.yul\":6821:6822   */\n      dup3\n        /* \"#utility.yul\":6818:6828   */\n      gt\n        /* \"#utility.yul\":6815:6851   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":6831:6849   */\n      tag_186\n      tag_89\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6815:6851   */\n    tag_185:\n        /* \"#utility.yul\":6667:6858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d7ac7c86dfc3bf4e04b9d8cf21cb786ee7c6636e413d64a398bf7ef8c03bbbb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_808": {
									"entryPoint": null,
									"id": 808,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1399:6",
										"nodeType": "YulBlock",
										"src": "0:1399:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1108:288:6",
													"nodeType": "YulBlock",
													"src": "1108:288:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:6",
																"nodeType": "YulBlock",
																"src": "1154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:6"
																			},
																			"nativeSrc": "1156:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:6"
																		},
																		"nativeSrc": "1156:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nativeSrc": "1125:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nativeSrc": "1121:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nativeSrc": "1118:119:6",
															"nodeType": "YulIf",
															"src": "1118:119:6"
														},
														{
															"nativeSrc": "1247:142:6",
															"nodeType": "YulBlock",
															"src": "1247:142:6",
															"statements": [
																{
																	"nativeSrc": "1262:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:6"
																				},
																				"nativeSrc": "1347:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1301:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:6"
																		},
																		"nativeSrc": "1301:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "1017:379:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:6",
														"nodeType": "YulTypedName",
														"src": "1078:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:6",
														"nodeType": "YulTypedName",
														"src": "1089:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:6",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													}
												],
												"src": "1017:379:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$729_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f80fd5b50604051610a28380380610a28833981810160405281019061003191906100da565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610105565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100988261006f565b9050919050565b5f6100a98261008e565b9050919050565b6100b98161009f565b81146100c3575f80fd5b50565b5f815190506100d4816100b0565b92915050565b5f602082840312156100ef576100ee61006b565b5b5f6100fc848285016100c6565b91505092915050565b6080516108ef6101395f395f8181610102015281816101bb015281816102860152818161034201526103e401526108ef5ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632e1a7d4d1461005957806372dd529b14610075578063b4de867314610093578063b6b55f25146100c3578063fc0c546a146100df575b5f80fd5b610073600480360381019061006e9190610519565b6100fd565b005b61007d610259565b60405161008a9190610553565b60405180910390f35b6100ad60048036038101906100a891906105c6565b61025e565b6040516100ba9190610553565b60405180910390f35b6100dd60048036038101906100d89190610519565b610273565b005b6100e76103e2565b6040516100f4919061064c565b60405180910390f35b5f80547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101599190610674565b602060405180830381865afa158015610174573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019891906106a1565b836101a391906106f9565b6101ad9190610767565b90506101b93383610406565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610214929190610797565b6020604051808303815f875af1158015610230573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025491906107f3565b505050565b5f5481565b6001602052805f5260405f205f915090505481565b5f805f540361028457819050610336565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102dd9190610674565b602060405180830381865afa1580156102f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031c91906106a1565b5f548361032991906106f9565b6103339190610767565b90505b6103403382610474565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161039d9392919061081e565b6020604051808303815f875af11580156103b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103dd91906107f3565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b805f808282546104169190610853565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104699190610853565b925050819055505050565b805f808282546104849190610886565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104d79190610886565b925050819055505050565b5f80fd5b5f819050919050565b6104f8816104e6565b8114610502575f80fd5b50565b5f81359050610513816104ef565b92915050565b5f6020828403121561052e5761052d6104e2565b5b5f61053b84828501610505565b91505092915050565b61054d816104e6565b82525050565b5f6020820190506105665f830184610544565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105958261056c565b9050919050565b6105a58161058b565b81146105af575f80fd5b50565b5f813590506105c08161059c565b92915050565b5f602082840312156105db576105da6104e2565b5b5f6105e8848285016105b2565b91505092915050565b5f819050919050565b5f61061461060f61060a8461056c565b6105f1565b61056c565b9050919050565b5f610625826105fa565b9050919050565b5f6106368261061b565b9050919050565b6106468161062c565b82525050565b5f60208201905061065f5f83018461063d565b92915050565b61066e8161058b565b82525050565b5f6020820190506106875f830184610665565b92915050565b5f8151905061069b816104ef565b92915050565b5f602082840312156106b6576106b56104e2565b5b5f6106c38482850161068d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610703826104e6565b915061070e836104e6565b925082820261071c816104e6565b91508282048414831517610733576107326106cc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610771826104e6565b915061077c836104e6565b92508261078c5761078b61073a565b5b828204905092915050565b5f6040820190506107aa5f830185610665565b6107b76020830184610544565b9392505050565b5f8115159050919050565b6107d2816107be565b81146107dc575f80fd5b50565b5f815190506107ed816107c9565b92915050565b5f60208284031215610808576108076104e2565b5b5f610815848285016107df565b91505092915050565b5f6060820190506108315f830186610665565b61083e6020830185610665565b61084b6040830184610544565b949350505050565b5f61085d826104e6565b9150610868836104e6565b92508282039050818111156108805761087f6106cc565b5b92915050565b5f610890826104e6565b915061089b836104e6565b92508282019050808211156108b3576108b26106cc565b5b9291505056fea26469706673582212203d7ac7c86dfc3bf4e04b9d8cf21cb786ee7c6636e413d64a398bf7ef8c03bbbb64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA28 CODESIZE SUB DUP1 PUSH2 0xA28 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x105 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x98 DUP3 PUSH2 0x6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA9 DUP3 PUSH2 0x8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0x9F JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD4 DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x6B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x8EF PUSH2 0x139 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x102 ADD MSTORE DUP2 DUP2 PUSH2 0x1BB ADD MSTORE DUP2 DUP2 PUSH2 0x286 ADD MSTORE DUP2 DUP2 PUSH2 0x342 ADD MSTORE PUSH2 0x3E4 ADD MSTORE PUSH2 0x8EF PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x72DD529B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xB4DE8673 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x519 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST DUP4 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 CALLER DUP4 PUSH2 0x406 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x230 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SLOAD SUB PUSH2 0x284 JUMPI DUP2 SWAP1 POP PUSH2 0x336 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH0 SLOAD DUP4 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x340 CALLER DUP3 PUSH2 0x474 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x513 DUP2 PUSH2 0x4EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x53B DUP5 DUP3 DUP6 ADD PUSH2 0x505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x566 PUSH0 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x595 DUP3 PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x58B JUMP JUMPDEST DUP2 EQ PUSH2 0x5AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E8 DUP5 DUP3 DUP6 ADD PUSH2 0x5B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x614 PUSH2 0x60F PUSH2 0x60A DUP5 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x625 DUP3 PUSH2 0x5FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x636 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x646 DUP2 PUSH2 0x62C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65F PUSH0 DUP4 ADD DUP5 PUSH2 0x63D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E DUP2 PUSH2 0x58B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x687 PUSH0 DUP4 ADD DUP5 PUSH2 0x665 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x69B DUP2 PUSH2 0x4EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH2 0x6B5 PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C3 DUP5 DUP3 DUP6 ADD PUSH2 0x68D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x703 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x70E DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x71C DUP2 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x771 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x77C DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x73A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AA PUSH0 DUP4 ADD DUP6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP2 EQ PUSH2 0x7DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7ED DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x815 DUP5 DUP3 DUP6 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x831 PUSH0 DUP4 ADD DUP7 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x83E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x84B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85D DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x868 DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0x6CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x89B DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8B3 JUMPI PUSH2 0x8B2 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH27 0xC7C86DFC3BF4E04B9D8CF21CB786EE7C6636E413D64A398BF7EF8C SUB 0xBB 0xBB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "114:1487:5:-:0;;;255:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;300:6;292:14;;;;;;;;;;255:58;114:1487;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;114:1487:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_844": {
									"entryPoint": 1030,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_826": {
									"entryPoint": 1140,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balance0f_797": {
									"entryPoint": 606,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_896": {
									"entryPoint": 627,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_791": {
									"entryPoint": 994,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalsupply_793": {
									"entryPoint": 601,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_931": {
									"entryPoint": 253,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6861:6",
										"nodeType": "YulBlock",
										"src": "0:6861:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "756:263:6",
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:6",
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nativeSrc": "804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nativeSrc": "804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nativeSrc": "773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nativeSrc": "769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nativeSrc": "766:119:6",
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nativeSrc": "895:117:6",
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nativeSrc": "910:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:6",
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nativeSrc": "970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nativeSrc": "949:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:6",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:6",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:6",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nativeSrc": "1090:53:6",
													"nodeType": "YulBlock",
													"src": "1090:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:6"
																		},
																		"nativeSrc": "1112:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:6"
																},
																"nativeSrc": "1100:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:6"
															},
															"nativeSrc": "1100:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:6",
														"nodeType": "YulTypedName",
														"src": "1078:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:6",
														"nodeType": "YulTypedName",
														"src": "1085:3:6",
														"type": ""
													}
												],
												"src": "1025:118:6"
											},
											{
												"body": {
													"nativeSrc": "1247:124:6",
													"nodeType": "YulBlock",
													"src": "1247:124:6",
													"statements": [
														{
															"nativeSrc": "1257:26:6",
															"nodeType": "YulAssignment",
															"src": "1257:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:6"
																},
																"nativeSrc": "1265:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:6"
																		},
																		"nativeSrc": "1346:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:6"
																},
																"nativeSrc": "1293:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:6"
															},
															"nativeSrc": "1293:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:6",
														"nodeType": "YulTypedName",
														"src": "1219:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:6",
														"nodeType": "YulTypedName",
														"src": "1231:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:6",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													}
												],
												"src": "1149:222:6"
											},
											{
												"body": {
													"nativeSrc": "1422:81:6",
													"nodeType": "YulBlock",
													"src": "1422:81:6",
													"statements": [
														{
															"nativeSrc": "1432:65:6",
															"nodeType": "YulAssignment",
															"src": "1432:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:6"
																},
																"nativeSrc": "1443:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:6",
														"nodeType": "YulTypedName",
														"src": "1404:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:6",
														"nodeType": "YulTypedName",
														"src": "1414:7:6",
														"type": ""
													}
												],
												"src": "1377:126:6"
											},
											{
												"body": {
													"nativeSrc": "1554:51:6",
													"nodeType": "YulBlock",
													"src": "1554:51:6",
													"statements": [
														{
															"nativeSrc": "1564:35:6",
															"nodeType": "YulAssignment",
															"src": "1564:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:6"
																},
																"nativeSrc": "1575:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:6",
														"nodeType": "YulTypedName",
														"src": "1536:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:6",
														"nodeType": "YulTypedName",
														"src": "1546:7:6",
														"type": ""
													}
												],
												"src": "1509:96:6"
											},
											{
												"body": {
													"nativeSrc": "1654:79:6",
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:6",
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nativeSrc": "1713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nativeSrc": "1713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nativeSrc": "1684:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nativeSrc": "1674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nativeSrc": "1667:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nativeSrc": "1664:63:6",
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nativeSrc": "1791:87:6",
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nativeSrc": "1801:29:6",
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nativeSrc": "1810:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nativeSrc": "1839:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nativeSrc": "1839:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:6",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:6",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:6",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nativeSrc": "1950:263:6",
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:6",
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nativeSrc": "1998:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nativeSrc": "1998:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nativeSrc": "1967:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nativeSrc": "1963:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nativeSrc": "1960:119:6",
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nativeSrc": "2089:117:6",
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nativeSrc": "2104:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nativeSrc": "2164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2143:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nativeSrc": "2143:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1884:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:6",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:6",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:6",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nativeSrc": "2251:28:6",
													"nodeType": "YulBlock",
													"src": "2251:28:6",
													"statements": [
														{
															"nativeSrc": "2261:12:6",
															"nodeType": "YulAssignment",
															"src": "2261:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:6",
																"nodeType": "YulIdentifier",
																"src": "2268:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:6",
														"nodeType": "YulTypedName",
														"src": "2237:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:6",
														"nodeType": "YulTypedName",
														"src": "2247:3:6",
														"type": ""
													}
												],
												"src": "2219:60:6"
											},
											{
												"body": {
													"nativeSrc": "2345:82:6",
													"nodeType": "YulBlock",
													"src": "2345:82:6",
													"statements": [
														{
															"nativeSrc": "2355:66:6",
															"nodeType": "YulAssignment",
															"src": "2355:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:6"
																				},
																				"nativeSrc": "2395:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:6"
																		},
																		"nativeSrc": "2386:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:6"
																},
																"nativeSrc": "2368:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:6",
														"nodeType": "YulTypedName",
														"src": "2325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:6",
														"nodeType": "YulTypedName",
														"src": "2335:9:6",
														"type": ""
													}
												],
												"src": "2285:142:6"
											},
											{
												"body": {
													"nativeSrc": "2493:66:6",
													"nodeType": "YulBlock",
													"src": "2493:66:6",
													"statements": [
														{
															"nativeSrc": "2503:50:6",
															"nodeType": "YulAssignment",
															"src": "2503:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:6"
																},
																"nativeSrc": "2516:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:6",
														"nodeType": "YulTypedName",
														"src": "2473:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:6",
														"nodeType": "YulTypedName",
														"src": "2483:9:6",
														"type": ""
													}
												],
												"src": "2433:126:6"
											},
											{
												"body": {
													"nativeSrc": "2639:66:6",
													"nodeType": "YulBlock",
													"src": "2639:66:6",
													"statements": [
														{
															"nativeSrc": "2649:50:6",
															"nodeType": "YulAssignment",
															"src": "2649:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:6"
																},
																"nativeSrc": "2662:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "2565:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:6",
														"nodeType": "YulTypedName",
														"src": "2619:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:6",
														"nodeType": "YulTypedName",
														"src": "2629:9:6",
														"type": ""
													}
												],
												"src": "2565:140:6"
											},
											{
												"body": {
													"nativeSrc": "2790:80:6",
													"nodeType": "YulBlock",
													"src": "2790:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "2812:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:6"
																		},
																		"nativeSrc": "2812:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:6"
																},
																"nativeSrc": "2800:64:6",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:6"
															},
															"nativeSrc": "2800:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "2711:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:6",
														"nodeType": "YulTypedName",
														"src": "2778:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:6",
														"nodeType": "YulTypedName",
														"src": "2785:3:6",
														"type": ""
													}
												],
												"src": "2711:159:6"
											},
											{
												"body": {
													"nativeSrc": "2988:138:6",
													"nodeType": "YulBlock",
													"src": "2988:138:6",
													"statements": [
														{
															"nativeSrc": "2998:26:6",
															"nodeType": "YulAssignment",
															"src": "2998:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:6"
																},
																"nativeSrc": "3006:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:6"
																		},
																		"nativeSrc": "3101:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "3034:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:6"
																},
																"nativeSrc": "3034:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:6"
															},
															"nativeSrc": "3034:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:6",
														"nodeType": "YulTypedName",
														"src": "2960:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:6",
														"nodeType": "YulTypedName",
														"src": "2972:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:6",
														"nodeType": "YulTypedName",
														"src": "2983:4:6",
														"type": ""
													}
												],
												"src": "2876:250:6"
											},
											{
												"body": {
													"nativeSrc": "3197:53:6",
													"nodeType": "YulBlock",
													"src": "3197:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3219:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:6"
																		},
																		"nativeSrc": "3219:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:6"
																},
																"nativeSrc": "3207:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:6"
															},
															"nativeSrc": "3207:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3132:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:6",
														"nodeType": "YulTypedName",
														"src": "3185:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:6",
														"nodeType": "YulTypedName",
														"src": "3192:3:6",
														"type": ""
													}
												],
												"src": "3132:118:6"
											},
											{
												"body": {
													"nativeSrc": "3354:124:6",
													"nodeType": "YulBlock",
													"src": "3354:124:6",
													"statements": [
														{
															"nativeSrc": "3364:26:6",
															"nodeType": "YulAssignment",
															"src": "3364:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:6"
																},
																"nativeSrc": "3372:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:6"
																		},
																		"nativeSrc": "3453:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3400:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:6"
																},
																"nativeSrc": "3400:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:6"
															},
															"nativeSrc": "3400:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:6",
														"nodeType": "YulTypedName",
														"src": "3326:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:6",
														"nodeType": "YulTypedName",
														"src": "3338:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:6",
														"nodeType": "YulTypedName",
														"src": "3349:4:6",
														"type": ""
													}
												],
												"src": "3256:222:6"
											},
											{
												"body": {
													"nativeSrc": "3547:80:6",
													"nodeType": "YulBlock",
													"src": "3547:80:6",
													"statements": [
														{
															"nativeSrc": "3557:22:6",
															"nodeType": "YulAssignment",
															"src": "3557:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3572:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3572:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3566:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3566:5:6"
																},
																"nativeSrc": "3566:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3566:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3557:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3557:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3615:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3615:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3588:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3588:26:6"
																},
																"nativeSrc": "3588:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3588:33:6"
															},
															"nativeSrc": "3588:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3588:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3484:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3525:6:6",
														"nodeType": "YulTypedName",
														"src": "3525:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3533:3:6",
														"nodeType": "YulTypedName",
														"src": "3533:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3541:5:6",
														"nodeType": "YulTypedName",
														"src": "3541:5:6",
														"type": ""
													}
												],
												"src": "3484:143:6"
											},
											{
												"body": {
													"nativeSrc": "3710:274:6",
													"nodeType": "YulBlock",
													"src": "3710:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3756:83:6",
																"nodeType": "YulBlock",
																"src": "3756:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3758:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3758:77:6"
																			},
																			"nativeSrc": "3758:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3758:79:6"
																		},
																		"nativeSrc": "3758:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3731:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3731:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3740:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3727:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:6"
																		},
																		"nativeSrc": "3727:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3752:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3752:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3723:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:6"
																},
																"nativeSrc": "3723:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3723:32:6"
															},
															"nativeSrc": "3720:119:6",
															"nodeType": "YulIf",
															"src": "3720:119:6"
														},
														{
															"nativeSrc": "3849:128:6",
															"nodeType": "YulBlock",
															"src": "3849:128:6",
															"statements": [
																{
																	"nativeSrc": "3864:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3864:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3878:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3878:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3868:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3868:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3893:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3893:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3939:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3939:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3950:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3950:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3935:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3935:3:6"
																				},
																				"nativeSrc": "3935:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3935:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3959:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3959:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3903:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3903:31:6"
																		},
																		"nativeSrc": "3903:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3893:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3893:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3633:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:6",
														"nodeType": "YulTypedName",
														"src": "3680:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3691:7:6",
														"nodeType": "YulTypedName",
														"src": "3691:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3703:6:6",
														"nodeType": "YulTypedName",
														"src": "3703:6:6",
														"type": ""
													}
												],
												"src": "3633:351:6"
											},
											{
												"body": {
													"nativeSrc": "4018:152:6",
													"nodeType": "YulBlock",
													"src": "4018:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4035:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4035:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4038:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4038:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4028:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:6"
																},
																"nativeSrc": "4028:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4028:88:6"
															},
															"nativeSrc": "4028:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4028:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4132:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4132:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4135:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4135:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:6"
																},
																"nativeSrc": "4125:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4125:15:6"
															},
															"nativeSrc": "4125:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4125:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4156:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4156:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4159:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4159:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:6"
																},
																"nativeSrc": "4149:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4149:15:6"
															},
															"nativeSrc": "4149:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4149:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3990:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3990:180:6"
											},
											{
												"body": {
													"nativeSrc": "4224:362:6",
													"nodeType": "YulBlock",
													"src": "4224:362:6",
													"statements": [
														{
															"nativeSrc": "4234:25:6",
															"nodeType": "YulAssignment",
															"src": "4234:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4257:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4257:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4239:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4239:17:6"
																},
																"nativeSrc": "4239:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4239:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4234:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4234:1:6"
																}
															]
														},
														{
															"nativeSrc": "4268:25:6",
															"nodeType": "YulAssignment",
															"src": "4268:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4291:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4291:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4273:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4273:17:6"
																},
																"nativeSrc": "4273:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4273:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4268:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4268:1:6"
																}
															]
														},
														{
															"nativeSrc": "4302:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4302:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4325:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4325:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4328:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4328:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4321:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4321:3:6"
																},
																"nativeSrc": "4321:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4321:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4306:11:6",
																	"nodeType": "YulTypedName",
																	"src": "4306:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4339:41:6",
															"nodeType": "YulAssignment",
															"src": "4339:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4368:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "4368:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4350:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4350:17:6"
																},
																"nativeSrc": "4350:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4350:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4339:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4339:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4557:22:6",
																"nodeType": "YulBlock",
																"src": "4557:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4559:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4559:16:6"
																			},
																			"nativeSrc": "4559:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4559:18:6"
																		},
																		"nativeSrc": "4559:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4559:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4490:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4490:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4483:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4483:6:6"
																				},
																				"nativeSrc": "4483:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4483:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4513:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4513:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4520:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4520:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4529:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4529:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4516:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4516:3:6"
																						},
																						"nativeSrc": "4516:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4516:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4510:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4510:2:6"
																				},
																				"nativeSrc": "4510:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4510:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4463:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4463:2:6"
																		},
																		"nativeSrc": "4463:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4463:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:6"
																},
																"nativeSrc": "4443:113:6",
																"nodeType": "YulFunctionCall",
																"src": "4443:113:6"
															},
															"nativeSrc": "4440:139:6",
															"nodeType": "YulIf",
															"src": "4440:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4176:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4207:1:6",
														"nodeType": "YulTypedName",
														"src": "4207:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4210:1:6",
														"nodeType": "YulTypedName",
														"src": "4210:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4216:7:6",
														"nodeType": "YulTypedName",
														"src": "4216:7:6",
														"type": ""
													}
												],
												"src": "4176:410:6"
											},
											{
												"body": {
													"nativeSrc": "4620:152:6",
													"nodeType": "YulBlock",
													"src": "4620:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4637:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4637:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4640:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4630:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:6"
																},
																"nativeSrc": "4630:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4630:88:6"
															},
															"nativeSrc": "4630:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4630:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4734:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4734:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4737:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4737:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4727:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:6"
																},
																"nativeSrc": "4727:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4727:15:6"
															},
															"nativeSrc": "4727:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4727:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4758:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4758:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4761:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4761:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4751:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:6"
																},
																"nativeSrc": "4751:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4751:15:6"
															},
															"nativeSrc": "4751:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4751:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4592:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4592:180:6"
											},
											{
												"body": {
													"nativeSrc": "4820:143:6",
													"nodeType": "YulBlock",
													"src": "4820:143:6",
													"statements": [
														{
															"nativeSrc": "4830:25:6",
															"nodeType": "YulAssignment",
															"src": "4830:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4853:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4853:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4835:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4835:17:6"
																},
																"nativeSrc": "4835:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4835:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4830:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4830:1:6"
																}
															]
														},
														{
															"nativeSrc": "4864:25:6",
															"nodeType": "YulAssignment",
															"src": "4864:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4887:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4887:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4869:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4869:17:6"
																},
																"nativeSrc": "4869:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4869:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4864:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4864:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4911:22:6",
																"nodeType": "YulBlock",
																"src": "4911:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4913:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4913:16:6"
																			},
																			"nativeSrc": "4913:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4913:18:6"
																		},
																		"nativeSrc": "4913:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4913:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4908:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4908:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4901:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:6"
																},
																"nativeSrc": "4901:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4901:9:6"
															},
															"nativeSrc": "4898:35:6",
															"nodeType": "YulIf",
															"src": "4898:35:6"
														},
														{
															"nativeSrc": "4943:14:6",
															"nodeType": "YulAssignment",
															"src": "4943:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4952:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4952:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4955:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4955:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4948:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4948:3:6"
																},
																"nativeSrc": "4948:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4948:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4943:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4943:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4778:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4809:1:6",
														"nodeType": "YulTypedName",
														"src": "4809:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4812:1:6",
														"nodeType": "YulTypedName",
														"src": "4812:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4818:1:6",
														"nodeType": "YulTypedName",
														"src": "4818:1:6",
														"type": ""
													}
												],
												"src": "4778:185:6"
											},
											{
												"body": {
													"nativeSrc": "5095:206:6",
													"nodeType": "YulBlock",
													"src": "5095:206:6",
													"statements": [
														{
															"nativeSrc": "5105:26:6",
															"nodeType": "YulAssignment",
															"src": "5105:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5117:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5117:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5128:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5128:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5113:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:6"
																},
																"nativeSrc": "5113:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5113:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5105:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5105:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5185:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5185:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5198:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5198:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5209:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5209:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5194:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:6"
																		},
																		"nativeSrc": "5194:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5141:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5141:43:6"
																},
																"nativeSrc": "5141:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5141:71:6"
															},
															"nativeSrc": "5141:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5141:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5266:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5266:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5279:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5279:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5290:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5290:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5275:3:6"
																		},
																		"nativeSrc": "5275:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5222:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5222:43:6"
																},
																"nativeSrc": "5222:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5222:72:6"
															},
															"nativeSrc": "5222:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5222:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4969:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:6",
														"nodeType": "YulTypedName",
														"src": "5059:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5071:6:6",
														"nodeType": "YulTypedName",
														"src": "5071:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5079:6:6",
														"nodeType": "YulTypedName",
														"src": "5079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5090:4:6",
														"nodeType": "YulTypedName",
														"src": "5090:4:6",
														"type": ""
													}
												],
												"src": "4969:332:6"
											},
											{
												"body": {
													"nativeSrc": "5349:48:6",
													"nodeType": "YulBlock",
													"src": "5349:48:6",
													"statements": [
														{
															"nativeSrc": "5359:32:6",
															"nodeType": "YulAssignment",
															"src": "5359:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5384:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5384:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5377:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5377:6:6"
																		},
																		"nativeSrc": "5377:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5370:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:6"
																},
																"nativeSrc": "5370:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5370:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5359:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5359:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5307:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5331:5:6",
														"nodeType": "YulTypedName",
														"src": "5331:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5341:7:6",
														"nodeType": "YulTypedName",
														"src": "5341:7:6",
														"type": ""
													}
												],
												"src": "5307:90:6"
											},
											{
												"body": {
													"nativeSrc": "5443:76:6",
													"nodeType": "YulBlock",
													"src": "5443:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5497:16:6",
																"nodeType": "YulBlock",
																"src": "5497:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5506:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5506:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5509:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5509:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5499:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5499:6:6"
																			},
																			"nativeSrc": "5499:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5499:12:6"
																		},
																		"nativeSrc": "5499:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5499:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5466:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5466:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5488:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5488:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5473:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "5473:14:6"
																				},
																				"nativeSrc": "5473:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5473:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5463:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5463:2:6"
																		},
																		"nativeSrc": "5463:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5456:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:6"
																},
																"nativeSrc": "5456:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5456:40:6"
															},
															"nativeSrc": "5453:60:6",
															"nodeType": "YulIf",
															"src": "5453:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5403:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5436:5:6",
														"nodeType": "YulTypedName",
														"src": "5436:5:6",
														"type": ""
													}
												],
												"src": "5403:116:6"
											},
											{
												"body": {
													"nativeSrc": "5585:77:6",
													"nodeType": "YulBlock",
													"src": "5585:77:6",
													"statements": [
														{
															"nativeSrc": "5595:22:6",
															"nodeType": "YulAssignment",
															"src": "5595:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5610:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5610:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5604:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5604:5:6"
																},
																"nativeSrc": "5604:13:6",
																"nodeType": "YulFunctionCall",
																"src": "5604:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5595:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5595:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5650:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5650:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5626:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "5626:23:6"
																},
																"nativeSrc": "5626:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5626:30:6"
															},
															"nativeSrc": "5626:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5626:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5525:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5563:6:6",
														"nodeType": "YulTypedName",
														"src": "5563:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5571:3:6",
														"nodeType": "YulTypedName",
														"src": "5571:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5579:5:6",
														"nodeType": "YulTypedName",
														"src": "5579:5:6",
														"type": ""
													}
												],
												"src": "5525:137:6"
											},
											{
												"body": {
													"nativeSrc": "5742:271:6",
													"nodeType": "YulBlock",
													"src": "5742:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5788:83:6",
																"nodeType": "YulBlock",
																"src": "5788:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5790:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5790:77:6"
																			},
																			"nativeSrc": "5790:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5790:79:6"
																		},
																		"nativeSrc": "5790:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5790:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5763:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5763:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5772:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5772:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5759:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:6"
																		},
																		"nativeSrc": "5759:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5759:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5784:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5784:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5755:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5755:3:6"
																},
																"nativeSrc": "5755:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5755:32:6"
															},
															"nativeSrc": "5752:119:6",
															"nodeType": "YulIf",
															"src": "5752:119:6"
														},
														{
															"nativeSrc": "5881:125:6",
															"nodeType": "YulBlock",
															"src": "5881:125:6",
															"statements": [
																{
																	"nativeSrc": "5896:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5896:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5910:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5910:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5900:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5900:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5925:71:6",
																	"nodeType": "YulAssignment",
																	"src": "5925:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5968:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5968:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5979:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5964:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5964:3:6"
																				},
																				"nativeSrc": "5964:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5935:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5935:28:6"
																		},
																		"nativeSrc": "5935:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5935:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5925:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5925:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5668:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5712:9:6",
														"nodeType": "YulTypedName",
														"src": "5712:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5723:7:6",
														"nodeType": "YulTypedName",
														"src": "5723:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5735:6:6",
														"nodeType": "YulTypedName",
														"src": "5735:6:6",
														"type": ""
													}
												],
												"src": "5668:345:6"
											},
											{
												"body": {
													"nativeSrc": "6173:288:6",
													"nodeType": "YulBlock",
													"src": "6173:288:6",
													"statements": [
														{
															"nativeSrc": "6183:26:6",
															"nodeType": "YulAssignment",
															"src": "6183:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6195:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6195:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6206:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:6"
																},
																"nativeSrc": "6191:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6191:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6183:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6183:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6263:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6276:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6276:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6287:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6287:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6272:3:6"
																		},
																		"nativeSrc": "6272:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6272:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6219:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6219:43:6"
																},
																"nativeSrc": "6219:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6219:71:6"
															},
															"nativeSrc": "6219:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6219:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6344:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6357:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6368:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6368:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:6"
																		},
																		"nativeSrc": "6353:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6353:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6300:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6300:43:6"
																},
																"nativeSrc": "6300:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6300:72:6"
															},
															"nativeSrc": "6300:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6300:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6426:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6439:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6439:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6450:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6450:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6435:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:6"
																		},
																		"nativeSrc": "6435:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6435:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6382:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6382:43:6"
																},
																"nativeSrc": "6382:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6382:72:6"
															},
															"nativeSrc": "6382:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6382:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6019:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6129:9:6",
														"nodeType": "YulTypedName",
														"src": "6129:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6141:6:6",
														"nodeType": "YulTypedName",
														"src": "6141:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6149:6:6",
														"nodeType": "YulTypedName",
														"src": "6149:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6157:6:6",
														"nodeType": "YulTypedName",
														"src": "6157:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6168:4:6",
														"nodeType": "YulTypedName",
														"src": "6168:4:6",
														"type": ""
													}
												],
												"src": "6019:442:6"
											},
											{
												"body": {
													"nativeSrc": "6512:149:6",
													"nodeType": "YulBlock",
													"src": "6512:149:6",
													"statements": [
														{
															"nativeSrc": "6522:25:6",
															"nodeType": "YulAssignment",
															"src": "6522:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6545:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6545:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6527:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6527:17:6"
																},
																"nativeSrc": "6527:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6527:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6522:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6522:1:6"
																}
															]
														},
														{
															"nativeSrc": "6556:25:6",
															"nodeType": "YulAssignment",
															"src": "6556:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6579:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6579:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6561:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6561:17:6"
																},
																"nativeSrc": "6561:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6561:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6556:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6556:1:6"
																}
															]
														},
														{
															"nativeSrc": "6590:17:6",
															"nodeType": "YulAssignment",
															"src": "6590:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6602:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6602:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6605:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6605:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6598:3:6"
																},
																"nativeSrc": "6598:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6598:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6590:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6632:22:6",
																"nodeType": "YulBlock",
																"src": "6632:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6634:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6634:16:6"
																			},
																			"nativeSrc": "6634:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6634:18:6"
																		},
																		"nativeSrc": "6634:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6634:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6623:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6623:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6629:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6629:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6620:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6620:2:6"
																},
																"nativeSrc": "6620:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6620:11:6"
															},
															"nativeSrc": "6617:37:6",
															"nodeType": "YulIf",
															"src": "6617:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6467:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6498:1:6",
														"nodeType": "YulTypedName",
														"src": "6498:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6501:1:6",
														"nodeType": "YulTypedName",
														"src": "6501:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6507:4:6",
														"nodeType": "YulTypedName",
														"src": "6507:4:6",
														"type": ""
													}
												],
												"src": "6467:194:6"
											},
											{
												"body": {
													"nativeSrc": "6711:147:6",
													"nodeType": "YulBlock",
													"src": "6711:147:6",
													"statements": [
														{
															"nativeSrc": "6721:25:6",
															"nodeType": "YulAssignment",
															"src": "6721:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6744:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6744:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6726:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6726:17:6"
																},
																"nativeSrc": "6726:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6726:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6721:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6721:1:6"
																}
															]
														},
														{
															"nativeSrc": "6755:25:6",
															"nodeType": "YulAssignment",
															"src": "6755:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6778:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6778:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6760:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6760:17:6"
																},
																"nativeSrc": "6760:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6760:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6755:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6755:1:6"
																}
															]
														},
														{
															"nativeSrc": "6789:16:6",
															"nodeType": "YulAssignment",
															"src": "6789:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6800:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6800:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6803:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6803:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6796:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6796:3:6"
																},
																"nativeSrc": "6796:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6796:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6789:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6829:22:6",
																"nodeType": "YulBlock",
																"src": "6829:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6831:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6831:16:6"
																			},
																			"nativeSrc": "6831:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6831:18:6"
																		},
																		"nativeSrc": "6831:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6831:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6821:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6821:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6824:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6824:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6818:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6818:2:6"
																},
																"nativeSrc": "6818:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6818:10:6"
															},
															"nativeSrc": "6815:36:6",
															"nodeType": "YulIf",
															"src": "6815:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6667:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6698:1:6",
														"nodeType": "YulTypedName",
														"src": "6698:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6701:1:6",
														"nodeType": "YulTypedName",
														"src": "6701:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6707:3:6",
														"nodeType": "YulTypedName",
														"src": "6707:3:6",
														"type": ""
													}
												],
												"src": "6667:191:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"791": [
									{
										"length": 32,
										"start": 258
									},
									{
										"length": 32,
										"start": 443
									},
									{
										"length": 32,
										"start": 646
									},
									{
										"length": 32,
										"start": 834
									},
									{
										"length": 32,
										"start": 996
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632e1a7d4d1461005957806372dd529b14610075578063b4de867314610093578063b6b55f25146100c3578063fc0c546a146100df575b5f80fd5b610073600480360381019061006e9190610519565b6100fd565b005b61007d610259565b60405161008a9190610553565b60405180910390f35b6100ad60048036038101906100a891906105c6565b61025e565b6040516100ba9190610553565b60405180910390f35b6100dd60048036038101906100d89190610519565b610273565b005b6100e76103e2565b6040516100f4919061064c565b60405180910390f35b5f80547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101599190610674565b602060405180830381865afa158015610174573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061019891906106a1565b836101a391906106f9565b6101ad9190610767565b90506101b93383610406565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610214929190610797565b6020604051808303815f875af1158015610230573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061025491906107f3565b505050565b5f5481565b6001602052805f5260405f205f915090505481565b5f805f540361028457819050610336565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102dd9190610674565b602060405180830381865afa1580156102f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031c91906106a1565b5f548361032991906106f9565b6103339190610767565b90505b6103403382610474565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161039d9392919061081e565b6020604051808303815f875af11580156103b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103dd91906107f3565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b805f808282546104169190610853565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104699190610853565b925050819055505050565b805f808282546104849190610886565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104d79190610886565b925050819055505050565b5f80fd5b5f819050919050565b6104f8816104e6565b8114610502575f80fd5b50565b5f81359050610513816104ef565b92915050565b5f6020828403121561052e5761052d6104e2565b5b5f61053b84828501610505565b91505092915050565b61054d816104e6565b82525050565b5f6020820190506105665f830184610544565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105958261056c565b9050919050565b6105a58161058b565b81146105af575f80fd5b50565b5f813590506105c08161059c565b92915050565b5f602082840312156105db576105da6104e2565b5b5f6105e8848285016105b2565b91505092915050565b5f819050919050565b5f61061461060f61060a8461056c565b6105f1565b61056c565b9050919050565b5f610625826105fa565b9050919050565b5f6106368261061b565b9050919050565b6106468161062c565b82525050565b5f60208201905061065f5f83018461063d565b92915050565b61066e8161058b565b82525050565b5f6020820190506106875f830184610665565b92915050565b5f8151905061069b816104ef565b92915050565b5f602082840312156106b6576106b56104e2565b5b5f6106c38482850161068d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610703826104e6565b915061070e836104e6565b925082820261071c816104e6565b91508282048414831517610733576107326106cc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610771826104e6565b915061077c836104e6565b92508261078c5761078b61073a565b5b828204905092915050565b5f6040820190506107aa5f830185610665565b6107b76020830184610544565b9392505050565b5f8115159050919050565b6107d2816107be565b81146107dc575f80fd5b50565b5f815190506107ed816107c9565b92915050565b5f60208284031215610808576108076104e2565b5b5f610815848285016107df565b91505092915050565b5f6060820190506108315f830186610665565b61083e6020830185610665565b61084b6040830184610544565b949350505050565b5f61085d826104e6565b9150610868836104e6565b92508282039050818111156108805761087f6106cc565b5b92915050565b5f610890826104e6565b915061089b836104e6565b92508282019050808211156108b3576108b26106cc565b5b9291505056fea26469706673582212203d7ac7c86dfc3bf4e04b9d8cf21cb786ee7c6636e413d64a398bf7ef8c03bbbb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x72DD529B EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xB4DE8673 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xDF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x519 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST DUP4 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B9 CALLER DUP4 PUSH2 0x406 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214 SWAP3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x230 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SLOAD SUB PUSH2 0x284 JUMPI DUP2 SWAP1 POP PUSH2 0x336 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH0 SLOAD DUP4 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x340 CALLER DUP3 PUSH2 0x474 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x502 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x513 DUP2 PUSH2 0x4EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x53B DUP5 DUP3 DUP6 ADD PUSH2 0x505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x566 PUSH0 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x595 DUP3 PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x58B JUMP JUMPDEST DUP2 EQ PUSH2 0x5AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5E8 DUP5 DUP3 DUP6 ADD PUSH2 0x5B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x614 PUSH2 0x60F PUSH2 0x60A DUP5 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x625 DUP3 PUSH2 0x5FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x636 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x646 DUP2 PUSH2 0x62C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x65F PUSH0 DUP4 ADD DUP5 PUSH2 0x63D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66E DUP2 PUSH2 0x58B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x687 PUSH0 DUP4 ADD DUP5 PUSH2 0x665 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x69B DUP2 PUSH2 0x4EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH2 0x6B5 PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C3 DUP5 DUP3 DUP6 ADD PUSH2 0x68D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x703 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x70E DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x71C DUP2 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x771 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x77C DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x73A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AA PUSH0 DUP4 ADD DUP6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x7B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP2 EQ PUSH2 0x7DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7ED DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x4E2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x815 DUP5 DUP3 DUP6 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x831 PUSH0 DUP4 ADD DUP7 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x83E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x84B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x544 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85D DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x868 DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x880 JUMPI PUSH2 0x87F PUSH2 0x6CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x890 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x89B DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8B3 JUMPI PUSH2 0x8B2 PUSH2 0x6CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE PUSH27 0xC7C86DFC3BF4E04B9D8CF21CB786EE7C6636E413D64A398BF7EF8C SUB 0xBB 0xBB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "114:1487:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;172:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;589:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;137:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:433;1439:14;1501:11;;1467:5;:15;;;1491:4;1467:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1457:7;:40;;;;:::i;:::-;1456:56;;;;:::i;:::-;1439:73;;1522:26;1528:10;1540:7;1522:5;:26::i;:::-;1558:5;:14;;;1573:10;1585:6;1558:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1210:389;1166:433;:::o;172:26::-;;;;:::o;204:44::-;;;;;;;;;;;;;;;;;:::o;589:571::-;872:14;915:1;900:11;;:16;896:159;;941:7;932:16;;896:159;;;1014:5;:15;;;1038:4;1014:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;999:11;;989:7;:21;;;;:::i;:::-;988:56;;;;:::i;:::-;979:65;;896:159;1064:25;1070:10;1082:6;1064:5;:25::i;:::-;1099:5;:18;;;1118:10;1138:4;1145:7;1099:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;632:528;589:571;:::o;137:29::-;;;:::o;452:131::-;532:7;517:11;;:22;;;;;;;:::i;:::-;;;;;;;;569:7;549:9;:16;559:5;549:16;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;452:131;;:::o;319:127::-;397:7;382:11;;:22;;;;;;;:::i;:::-;;;;;;;;432:7;414:9;:14;424:3;414:14;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;319:127;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:143::-;3541:5;3572:6;3566:13;3557:22;;3588:33;3615:5;3588:33;:::i;:::-;3484:143;;;;:::o;3633:351::-;3703:6;3752:2;3740:9;3731:7;3727:23;3723:32;3720:119;;;3758:79;;:::i;:::-;3720:119;3878:1;3903:64;3959:7;3950:6;3939:9;3935:22;3903:64;:::i;:::-;3893:74;;3849:128;3633:351;;;;:::o;3990:180::-;4038:77;4035:1;4028:88;4135:4;4132:1;4125:15;4159:4;4156:1;4149:15;4176:410;4216:7;4239:20;4257:1;4239:20;:::i;:::-;4234:25;;4273:20;4291:1;4273:20;:::i;:::-;4268:25;;4328:1;4325;4321:9;4350:30;4368:11;4350:30;:::i;:::-;4339:41;;4529:1;4520:7;4516:15;4513:1;4510:22;4490:1;4483:9;4463:83;4440:139;;4559:18;;:::i;:::-;4440:139;4224:362;4176:410;;;;:::o;4592:180::-;4640:77;4637:1;4630:88;4737:4;4734:1;4727:15;4761:4;4758:1;4751:15;4778:185;4818:1;4835:20;4853:1;4835:20;:::i;:::-;4830:25;;4869:20;4887:1;4869:20;:::i;:::-;4864:25;;4908:1;4898:35;;4913:18;;:::i;:::-;4898:35;4955:1;4952;4948:9;4943:14;;4778:185;;;;:::o;4969:332::-;5090:4;5128:2;5117:9;5113:18;5105:26;;5141:71;5209:1;5198:9;5194:17;5185:6;5141:71;:::i;:::-;5222:72;5290:2;5279:9;5275:18;5266:6;5222:72;:::i;:::-;4969:332;;;;;:::o;5307:90::-;5341:7;5384:5;5377:13;5370:21;5359:32;;5307:90;;;:::o;5403:116::-;5473:21;5488:5;5473:21;:::i;:::-;5466:5;5463:32;5453:60;;5509:1;5506;5499:12;5453:60;5403:116;:::o;5525:137::-;5579:5;5610:6;5604:13;5595:22;;5626:30;5650:5;5626:30;:::i;:::-;5525:137;;;;:::o;5668:345::-;5735:6;5784:2;5772:9;5763:7;5759:23;5755:32;5752:119;;;5790:79;;:::i;:::-;5752:119;5910:1;5935:61;5988:7;5979:6;5968:9;5964:22;5935:61;:::i;:::-;5925:71;;5881:125;5668:345;;;;:::o;6019:442::-;6168:4;6206:2;6195:9;6191:18;6183:26;;6219:71;6287:1;6276:9;6272:17;6263:6;6219:71;:::i;:::-;6300:72;6368:2;6357:9;6353:18;6344:6;6300:72;:::i;:::-;6382;6450:2;6439:9;6435:18;6426:6;6382:72;:::i;:::-;6019:442;;;;;;:::o;6467:194::-;6507:4;6527:20;6545:1;6527:20;:::i;:::-;6522:25;;6561:20;6579:1;6561:20;:::i;:::-;6556:25;;6605:1;6602;6598:9;6590:17;;6629:1;6623:4;6620:11;6617:37;;;6634:18;;:::i;:::-;6617:37;6467:194;;;;:::o;6667:191::-;6707:3;6726:20;6744:1;6726:20;:::i;:::-;6721:25;;6760:20;6778:1;6760:20;:::i;:::-;6755:25;;6803:1;6800;6796:9;6789:16;;6824:3;6821:1;6818:10;6815:36;;;6831:18;;:::i;:::-;6815:36;6667:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "457400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance0f(address)": "2824",
								"deposit(uint256)": "infinite",
								"token()": "infinite",
								"totalsupply()": "2424",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 255,
									"end": 313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 255,
									"end": 313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 300,
									"end": 306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 292,
									"end": 306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 292,
									"end": 306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 292,
									"end": 306,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 292,
									"end": 306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 255,
									"end": 313,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "791"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1601,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d7ac7c86dfc3bf4e04b9d8cf21cb786ee7c6636e413d64a398bf7ef8c03bbbb64736f6c63430008180033",
									".code": [
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "72DD529B"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "B4DE8673"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1601,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1166,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1166,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 172,
											"end": 198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 204,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 204,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 204,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 589,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 589,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 137,
											"end": 166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 137,
											"end": 166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1512,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1472,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1482,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1467,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1467,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1467,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1457,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1457,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1456,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1456,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1439,
											"end": 1512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1528,
											"end": 1538,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1547,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1522,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1558,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1558,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1558,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 198,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 172,
											"end": 198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 872,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 911,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 900,
											"end": 916,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 932,
											"end": 948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1019,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1014,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1014,
											"end": 1029,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1014,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1014,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1014,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1010,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 989,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 989,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 988,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 988,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 979,
											"end": 1044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 979,
											"end": 1044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 896,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1064,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1064,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1118,
											"end": 1128,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1138,
											"end": 1142,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1099,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1099,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 1160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "791"
										},
										{
											"begin": 137,
											"end": 166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 137,
											"end": 166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 532,
											"end": 539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 517,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 517,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 569,
											"end": 576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 564,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 565,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 549,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 549,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 549,
											"end": 576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 549,
											"end": 576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 319,
											"end": 446,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 319,
											"end": 446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 397,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 382,
											"end": 393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 393,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 382,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 382,
											"end": 404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 382,
											"end": 404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 423,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 427,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 428,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 414,
											"end": 428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 414,
											"end": 439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 414,
											"end": 439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 319,
											"end": 446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 319,
											"end": 446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 319,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3588,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3723,
											"end": 3755,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3758,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3903,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4170,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3990,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4038,
											"end": 4115,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4125,
											"end": 4140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4239,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4259,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4239,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4273,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4330,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4368,
											"end": 4379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4350,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4380,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4350,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4339,
											"end": 4380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4531,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4463,
											"end": 4546,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4440,
											"end": 4579,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4559,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4579,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4440,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4224,
											"end": 4586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4772,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4592,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4717,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4741,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4734,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4758,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4766,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4835,
											"end": 4855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4887,
											"end": 4888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4869,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4889,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4869,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4913,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4898,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 4953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4778,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5105,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5105,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5141,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5141,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5141,
											"end": 5212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5141,
											"end": 5212,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5141,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5222,
											"end": 5294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5222,
											"end": 5294,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5222,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5397,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5307,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5390,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5370,
											"end": 5391,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5403,
											"end": 5519,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5403,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5488,
											"end": 5493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5473,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5473,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5495,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5453,
											"end": 5513,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5513,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5453,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5403,
											"end": 5519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5403,
											"end": 5519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5650,
											"end": 5655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5626,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5626,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5772,
											"end": 5781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5782,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5787,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5752,
											"end": 5871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5790,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5790,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5869,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5790,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5871,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5752,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5988,
											"end": 5995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 5935,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 5996,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5935,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 6006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6168,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6208,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6269,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6219,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6290,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6219,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6368,
											"end": 6370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6300,
											"end": 6372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6372,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6300,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6450,
											"end": 6452,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6435,
											"end": 6453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6382,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6527,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6579,
											"end": 6580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6561,
											"end": 6581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6561,
											"end": 6581,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6561,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6629,
											"end": 6630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6631,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6654,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6617,
											"end": 6654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6634,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6654,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6617,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6726,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6726,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6760,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6760,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6824,
											"end": 6827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6818,
											"end": 6828,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6851,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6815,
											"end": 6851,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6831,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6815,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/program/vault/vault01.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance0f(address)": "b4de8673",
							"deposit(uint256)": "b6b55f25",
							"token()": "fc0c546a",
							"totalsupply()": "72dd529b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance0f\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/program/vault/vault01.sol\":\"Vault01\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/program/vault/vault01.sol\":{\"keccak256\":\"0xfa758fab4c25fa29bcd45ff9d718ad511de1f82bc5122b82b3b5c77bba4c6e78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a551f55c583490ca90be89eb823031cdd5f87287478050fcf861fd3c111928c0\",\"dweb:/ipfs/QmcTSxBMv3eoMmjq57zKW4abJdarNcYTNAPSbhf9MA8mbs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 793,
								"contract": "contracts/program/vault/vault01.sol:Vault01",
								"label": "totalsupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 797,
								"contract": "contracts/program/vault/vault01.sol:Vault01",
								"label": "balance0f",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/program/vault/vault01.sol": {
				"ast": {
					"absolutePath": "contracts/program/vault/vault01.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Vault01": [
							932
						]
					},
					"id": 933,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 933,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Vault01",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 932,
							"linearizedBaseContracts": [
								932
							],
							"name": "Vault01",
							"nameLocation": "123:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 791,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "161:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 932,
									"src": "137:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "IERC20",
											"nameLocations": [
												"137:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "137:6:5"
										},
										"referencedDeclaration": 729,
										"src": "137:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72dd529b",
									"id": 793,
									"mutability": "mutable",
									"name": "totalsupply",
									"nameLocation": "187:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 932,
									"src": "172:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 792,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4de8673",
									"id": 797,
									"mutability": "mutable",
									"name": "balance0f",
									"nameLocation": "239:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 932,
									"src": "204:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 796,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "204:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 795,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "282:31:5",
										"statements": [
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "292:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 804,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "300:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "292:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "292:14:5"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "274:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "IERC20",
														"nameLocations": [
															"267:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "267:6:5"
													},
													"referencedDeclaration": 729,
													"src": "267:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:15:5"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:5"
									},
									"scope": 932,
									"src": "255:58:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "372:74:5",
										"statements": [
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 815,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "382:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 816,
														"name": "_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "397:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "382:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "382:22:5"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 819,
															"name": "balance0f",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "414:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"id": 820,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "424:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "414:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 822,
														"name": "_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "432:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "414:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "414:25:5"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "328:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "342:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "334:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "355:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "347:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:30:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:0:5"
									},
									"scope": 932,
									"src": "319:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "507:76:5",
										"statements": [
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 833,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "517:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 834,
														"name": "_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "532:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "517:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "517:22:5"
											},
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 837,
															"name": "balance0f",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "549:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 839,
														"indexExpression": {
															"id": 838,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "559:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "549:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 840,
														"name": "_shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "569:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "549:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "549:27:5"
											}
										]
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "461:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "475:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "467:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "490:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "482:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:32:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:5"
									},
									"scope": 932,
									"src": "452:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "632:528:5",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "880:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 895,
														"src": "872:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "872:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 851,
												"nodeType": "VariableDeclarationStatement",
												"src": "872:14:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "900:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "915:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "900:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "965:90:5",
													"statements": [
														{
															"expression": {
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 860,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "979:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 861,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 846,
																					"src": "989:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 862,
																					"name": "totalsupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "999:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "989:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 864,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "988:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 869,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1038:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Vault01_$932",
																							"typeString": "contract Vault01"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Vault01_$932",
																							"typeString": "contract Vault01"
																						}
																					],
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1030:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 867,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1030:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1030:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 865,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "1014:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$729",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1020:9:5",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 686,
																			"src": "1014:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1014:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "988:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "979:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 874,
															"nodeType": "ExpressionStatement",
															"src": "979:65:5"
														}
													]
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "896:159:5",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "918:41:5",
													"statements": [
														{
															"expression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 855,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "932:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 856,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "941:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "932:16:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1070:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1074:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1070:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "1082:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1064:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "1064:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 886,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1118:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1122:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1118:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 890,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1138:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault01_$932",
																		"typeString": "contract Vault01"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault01_$932",
																		"typeString": "contract Vault01"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1130:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1130:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1130:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1145:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 883,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1099:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1105:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1099:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1099:54:5"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "598:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "614:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "606:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:17:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:0:5"
									},
									"scope": 932,
									"src": "589:571:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "1210:389:5",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1447:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "1439:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1439:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "1457:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 908,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1491:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Vault01_$932",
																						"typeString": "contract Vault01"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Vault01_$932",
																						"typeString": "contract Vault01"
																					}
																				],
																				"id": 907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1483:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 906,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1483:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1483:13:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 904,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1467:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$729",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1473:9:5",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 686,
																		"src": "1467:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1467:30:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1457:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1456:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 913,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1501:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1456:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1439:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 917,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1528:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1532:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1528:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "1540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1522:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1522:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1522:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1573:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1577:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1573:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "1585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 922,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1558:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1564:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "1558:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1558:34:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1175:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "1192:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1184:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:17:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:5"
									},
									"scope": 932,
									"src": "1166:433:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 933,
							"src": "114:1487:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1570:5"
				},
				"id": 5
			}
		}
	}
}