{
	"id": "f196c2ed7cd4c557dce6dd7f1e006a8f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/program/vault/vault02.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\nimport {IERC4626} from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\nimport {ERC20, IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC4626 is ERC20, IERC4626 {\n    ERC20 private immutable _asset;\n\n    constructor(\n        ERC20 asset_,\n        string memory name_,\n        string memory symbol_\n    ) ERC20(name_, symbol_) {\n        _asset = asset_;\n    }\n\n    function asset() public view virtual override returns (address) {\n        return address(_asset);\n    }\n\n    function deposit(uint256 assets, address receiver)\n        public\n        virtual\n        override\n        returns (uint256 shares)\n    {\n        // 利用 previewDeposit()计算将获得的金库份额\n        shares = previewDeposit(assets);\n\n        //先 transfer 后 mint，防止重入\n        _asset.transferFrom(msg.sender, address(this), assets);\n        _mint(receiver, shares);\n        // 释放 Deposit 事件\n        emit Deposit(msg.sender, receiver, assets, shares);\n    }\n\n    function mint(uint256 shares, address receiver)\n        public\n        virtual\n        override\n        returns (uint256 assets)\n    {\n        // 利用 previewint()计算需要存款的基础资产数额\n        assets = previewMint(shares);\n        //先 transfer 后 mint，防止重入\n        _asset.transferFrom(msg.sender, address(this), assets);\n        _mint(receiver, shares);\n        // 释放 Deposit 事件\n        emit Deposit(msg.sender, receiver, assets, shares);\n    }\n\n    function withdraw(\n        uint256 assets,\n        address receiver,\n        address owner\n    ) public virtual returns (uint256 shares) {\n        // 利用 previewwithdraw()计算将销毁的金库份额\n        shares = previewWithdraw(assets);\n\n        // 如果调用者不是 owner，则检查并更新授权\n        if (msg.sender != owner) {\n            _spendAllowance(owner, msg.sender, shares);\n        }\n\n        // 先销毁后 transfer，防止重入\n        _burn(owner, shares);\n        _asset.transfer(receiver, assets);\n        // 释放 Withdraw 事件\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\n    }\n\n    function redeem(\n        uint256 shares,\n        address receiver,\n        address owner\n    ) public virtual returns (uint256 assets) {\n        // 利用 previewRedeem()计算能赎回的基础资产数额\n        assets = previewRedeem(shares);\n\n        // 如果调用者不是 owner，则检查并更新授权\n        if (msg.sender != owner) {\n            _spendAllowance(owner, msg.sender, shares);\n        }\n\n        // 先销毁后 transfer，防止重入\n        _burn(owner, shares);\n        _asset.transfer(receiver, assets);\n\n        // 释放 Withdraw 事件\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\n    }\n\n    function totalAssets() public view virtual returns (uint256) {\n        // 返回合约中基础资产持仓\n        return _asset.balanceOf(address(this));\n    }\n\n    function convertToShares(uint256 assets)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        uint256 supply = totalSupply();\n        // 如果 supply 为0，那么 1:1 铸造金库份额\n        // 如果 supply 不为0，那么按比例铸造\n        return supply == 0 ? assets : (assets * supply) / totalAssets();\n    }\n\n    function convertToAssets(uint256 shares)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        uint256 supply = totalSupply();\n        // 如果 supply 为那么 1:1 赎回基础资产\n        // 如果supply 不为0, 那么按比例赎回\n        return supply == 0 ? shares : (shares * totalAssets()) / supply;\n    }\n\n    function previewDeposit(uint256 assets)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return convertToShares(assets);\n    }\n\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\n        return convertToAssets(shares);\n    }\n\n    function previewWithdraw(uint256 assets)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return convertToShares(assets);\n    }\n\n    function previewRedeem(uint256 shares)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return convertToAssets(shares);\n    }\n\n    function maxDeposit(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    function maxMint(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\n        return convertToAssets(balanceOf(owner));\n    }\n\n    function maxRedeem(address owner) public view virtual returns (uint256) {\n        return balanceOf(owner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"IERC4626": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "assetTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalManagedAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"asset()": {
								"details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"convertToAssets(uint256)": {
								"details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"convertToShares(uint256)": {
								"details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"deposit(uint256,address)": {
								"details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"maxDeposit(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."
							},
							"maxMint(address)": {
								"details": "Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."
							},
							"maxRedeem(address)": {
								"details": "Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."
							},
							"maxWithdraw(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."
							},
							"mint(uint256,address)": {
								"details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"previewMint(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
							},
							"previewRedeem(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
							},
							"previewWithdraw(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"redeem(uint256,address,address)": {
								"details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalAssets()": {
								"details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"withdraw(uint256,address,address)": {
								"details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 329,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 341,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/program/vault/vault02.sol": {
				"ERC4626": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "asset_",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"asset()": {
								"details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"convertToAssets(uint256)": {
								"details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"convertToShares(uint256)": {
								"details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"deposit(uint256,address)": {
								"details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"maxRedeem(address)": {
								"details": "Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."
							},
							"maxWithdraw(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."
							},
							"mint(uint256,address)": {
								"details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"previewMint(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
							},
							"previewRedeem(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
							},
							"previewWithdraw(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"redeem(uint256,address,address)": {
								"details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalAssets()": {
								"details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"withdraw(uint256,address,address)": {
								"details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/program/vault/vault02.sol\":216:4835  contract ERC4626 is ERC20, IERC4626 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/program/vault/vault02.sol\":295:449  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/program/vault/vault02.sol\":401:406  name_ */\n  dup2\n    /* \"contracts/program/vault/vault02.sol\":408:415  symbol_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/program/vault/vault02.sol\":436:442  asset_ */\n  dup3\n    /* \"contracts/program/vault/vault02.sol\":427:442  _asset = asset_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/program/vault/vault02.sol\":295:449  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/program/vault/vault02.sol\":216:4835  contract ERC4626 is ERC20, IERC4626 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_55\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_17:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_57\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_16\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_18:\n    /* \"#utility.yul\":769:806   */\n  tag_59\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_17\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  dup1\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_60:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_19:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_62\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_18\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1129   */\ntag_20:\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1118:1119   */\n  dup1\n    /* \"#utility.yul\":1111:1123   */\n  revert\n    /* \"#utility.yul\":1135:1252   */\ntag_21:\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1241:1242   */\n  dup1\n    /* \"#utility.yul\":1234:1246   */\n  revert\n    /* \"#utility.yul\":1258:1360   */\ntag_22:\n    /* \"#utility.yul\":1299:1305   */\n  0x00\n    /* \"#utility.yul\":1350:1352   */\n  0x1f\n    /* \"#utility.yul\":1346:1353   */\n  not\n    /* \"#utility.yul\":1341:1343   */\n  0x1f\n    /* \"#utility.yul\":1334:1339   */\n  dup4\n    /* \"#utility.yul\":1330:1344   */\n  add\n    /* \"#utility.yul\":1326:1354   */\n  and\n    /* \"#utility.yul\":1316:1354   */\n  swap1\n  pop\n    /* \"#utility.yul\":1258:1360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1366:1546   */\ntag_23:\n    /* \"#utility.yul\":1414:1491   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1411:1412   */\n  0x00\n    /* \"#utility.yul\":1404:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x41\n    /* \"#utility.yul\":1508:1509   */\n  0x04\n    /* \"#utility.yul\":1501:1516   */\n  mstore\n    /* \"#utility.yul\":1535:1539   */\n  0x24\n    /* \"#utility.yul\":1532:1533   */\n  0x00\n    /* \"#utility.yul\":1525:1540   */\n  revert\n    /* \"#utility.yul\":1552:1833   */\ntag_24:\n    /* \"#utility.yul\":1635:1662   */\n  tag_68\n    /* \"#utility.yul\":1657:1661   */\n  dup3\n    /* \"#utility.yul\":1635:1662   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1627:1633   */\n  dup2\n    /* \"#utility.yul\":1623:1663   */\n  add\n    /* \"#utility.yul\":1765:1771   */\n  dup2\n    /* \"#utility.yul\":1753:1763   */\n  dup2\n    /* \"#utility.yul\":1750:1772   */\n  lt\n    /* \"#utility.yul\":1729:1747   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1717:1727   */\n  dup3\n    /* \"#utility.yul\":1714:1748   */\n  gt\n    /* \"#utility.yul\":1711:1773   */\n  or\n    /* \"#utility.yul\":1708:1796   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1776:1794   */\n  tag_70\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1708:1796   */\ntag_69:\n    /* \"#utility.yul\":1816:1826   */\n  dup1\n    /* \"#utility.yul\":1812:1814   */\n  0x40\n    /* \"#utility.yul\":1805:1827   */\n  mstore\n    /* \"#utility.yul\":1595:1833   */\n  pop\n    /* \"#utility.yul\":1552:1833   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1839:1968   */\ntag_25:\n    /* \"#utility.yul\":1873:1879   */\n  0x00\n    /* \"#utility.yul\":1900:1920   */\n  tag_72\n  tag_12\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1890:1920   */\n  swap1\n  pop\n    /* \"#utility.yul\":1929:1962   */\n  tag_73\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1949:1955   */\n  dup3\n    /* \"#utility.yul\":1929:1962   */\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1839:1968   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1974:2282   */\ntag_26:\n    /* \"#utility.yul\":2036:2040   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2115:2145   */\n  gt\n    /* \"#utility.yul\":2112:2168   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2148:2166   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2112:2168   */\ntag_75:\n    /* \"#utility.yul\":2186:2215   */\n  tag_77\n    /* \"#utility.yul\":2208:2214   */\n  dup3\n    /* \"#utility.yul\":2186:2215   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2178:2215   */\n  swap1\n  pop\n    /* \"#utility.yul\":2270:2274   */\n  0x20\n    /* \"#utility.yul\":2264:2268   */\n  dup2\n    /* \"#utility.yul\":2260:2275   */\n  add\n    /* \"#utility.yul\":2252:2275   */\n  swap1\n  pop\n    /* \"#utility.yul\":1974:2282   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2288:2534   */\ntag_27:\n    /* \"#utility.yul\":2369:2370   */\n  0x00\n    /* \"#utility.yul\":2379:2492   */\ntag_79:\n    /* \"#utility.yul\":2393:2399   */\n  dup4\n    /* \"#utility.yul\":2390:2391   */\n  dup2\n    /* \"#utility.yul\":2387:2400   */\n  lt\n    /* \"#utility.yul\":2379:2492   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2478:2479   */\n  dup1\n    /* \"#utility.yul\":2473:2476   */\n  dup3\n    /* \"#utility.yul\":2469:2480   */\n  add\n    /* \"#utility.yul\":2463:2481   */\n  mload\n    /* \"#utility.yul\":2459:2460   */\n  dup2\n    /* \"#utility.yul\":2454:2457   */\n  dup5\n    /* \"#utility.yul\":2450:2461   */\n  add\n    /* \"#utility.yul\":2443:2482   */\n  mstore\n    /* \"#utility.yul\":2415:2417   */\n  0x20\n    /* \"#utility.yul\":2412:2413   */\n  dup2\n    /* \"#utility.yul\":2408:2418   */\n  add\n    /* \"#utility.yul\":2403:2418   */\n  swap1\n  pop\n    /* \"#utility.yul\":2379:2492   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":2526:2527   */\n  0x00\n    /* \"#utility.yul\":2517:2523   */\n  dup5\n    /* \"#utility.yul\":2512:2515   */\n  dup5\n    /* \"#utility.yul\":2508:2524   */\n  add\n    /* \"#utility.yul\":2501:2528   */\n  mstore\n    /* \"#utility.yul\":2350:2534   */\n  pop\n    /* \"#utility.yul\":2288:2534   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2540:2974   */\ntag_28:\n    /* \"#utility.yul\":2629:2634   */\n  0x00\n    /* \"#utility.yul\":2654:2720   */\n  tag_83\n    /* \"#utility.yul\":2670:2719   */\n  tag_84\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2670:2719   */\n  tag_26\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2654:2720   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2645:2720   */\n  swap1\n  pop\n    /* \"#utility.yul\":2743:2749   */\n  dup3\n    /* \"#utility.yul\":2736:2741   */\n  dup2\n    /* \"#utility.yul\":2729:2750   */\n  mstore\n    /* \"#utility.yul\":2781:2785   */\n  0x20\n    /* \"#utility.yul\":2774:2779   */\n  dup2\n    /* \"#utility.yul\":2770:2786   */\n  add\n    /* \"#utility.yul\":2819:2822   */\n  dup5\n    /* \"#utility.yul\":2810:2816   */\n  dup5\n    /* \"#utility.yul\":2805:2808   */\n  dup5\n    /* \"#utility.yul\":2801:2817   */\n  add\n    /* \"#utility.yul\":2798:2823   */\n  gt\n    /* \"#utility.yul\":2795:2907   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2826:2905   */\n  tag_86\n  tag_21\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2795:2907   */\ntag_85:\n    /* \"#utility.yul\":2916:2968   */\n  tag_87\n    /* \"#utility.yul\":2961:2967   */\n  dup5\n    /* \"#utility.yul\":2956:2959   */\n  dup3\n    /* \"#utility.yul\":2951:2954   */\n  dup6\n    /* \"#utility.yul\":2916:2968   */\n  tag_27\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2635:2974   */\n  pop\n    /* \"#utility.yul\":2540:2974   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2994:3349   */\ntag_29:\n    /* \"#utility.yul\":3061:3066   */\n  0x00\n    /* \"#utility.yul\":3110:3113   */\n  dup3\n    /* \"#utility.yul\":3103:3107   */\n  0x1f\n    /* \"#utility.yul\":3095:3101   */\n  dup4\n    /* \"#utility.yul\":3091:3108   */\n  add\n    /* \"#utility.yul\":3087:3114   */\n  slt\n    /* \"#utility.yul\":3077:3199   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3118:3197   */\n  tag_90\n  tag_20\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3077:3199   */\ntag_89:\n    /* \"#utility.yul\":3228:3234   */\n  dup2\n    /* \"#utility.yul\":3222:3235   */\n  mload\n    /* \"#utility.yul\":3253:3343   */\n  tag_91\n    /* \"#utility.yul\":3339:3342   */\n  dup5\n    /* \"#utility.yul\":3331:3337   */\n  dup3\n    /* \"#utility.yul\":3324:3328   */\n  0x20\n    /* \"#utility.yul\":3316:3322   */\n  dup7\n    /* \"#utility.yul\":3312:3329   */\n  add\n    /* \"#utility.yul\":3253:3343   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3244:3343   */\n  swap2\n  pop\n    /* \"#utility.yul\":3067:3349   */\n  pop\n    /* \"#utility.yul\":2994:3349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3355:4390   */\ntag_3:\n    /* \"#utility.yul\":3476:3482   */\n  0x00\n    /* \"#utility.yul\":3484:3490   */\n  dup1\n    /* \"#utility.yul\":3492:3498   */\n  0x00\n    /* \"#utility.yul\":3541:3543   */\n  0x60\n    /* \"#utility.yul\":3529:3538   */\n  dup5\n    /* \"#utility.yul\":3520:3527   */\n  dup7\n    /* \"#utility.yul\":3516:3539   */\n  sub\n    /* \"#utility.yul\":3512:3544   */\n  slt\n    /* \"#utility.yul\":3509:3628   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3547:3626   */\n  tag_94\n  tag_13\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3509:3628   */\ntag_93:\n    /* \"#utility.yul\":3667:3668   */\n  0x00\n    /* \"#utility.yul\":3692:3769   */\n  tag_95\n    /* \"#utility.yul\":3761:3768   */\n  dup7\n    /* \"#utility.yul\":3752:3758   */\n  dup3\n    /* \"#utility.yul\":3741:3750   */\n  dup8\n    /* \"#utility.yul\":3737:3759   */\n  add\n    /* \"#utility.yul\":3692:3769   */\n  tag_19\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3682:3769   */\n  swap4\n  pop\n    /* \"#utility.yul\":3638:3779   */\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3828:3837   */\n  dup5\n    /* \"#utility.yul\":3824:3842   */\n  add\n    /* \"#utility.yul\":3818:3843   */\n  mload\n    /* \"#utility.yul\":3870:3888   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3862:3868   */\n  dup2\n    /* \"#utility.yul\":3859:3889   */\n  gt\n    /* \"#utility.yul\":3856:3973   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3892:3971   */\n  tag_97\n  tag_14\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3856:3973   */\ntag_96:\n    /* \"#utility.yul\":3997:4071   */\n  tag_98\n    /* \"#utility.yul\":4063:4070   */\n  dup7\n    /* \"#utility.yul\":4054:4060   */\n  dup3\n    /* \"#utility.yul\":4043:4052   */\n  dup8\n    /* \"#utility.yul\":4039:4061   */\n  add\n    /* \"#utility.yul\":3997:4071   */\n  tag_29\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3987:4071   */\n  swap3\n  pop\n    /* \"#utility.yul\":3789:4081   */\n  pop\n    /* \"#utility.yul\":4141:4143   */\n  0x40\n    /* \"#utility.yul\":4130:4139   */\n  dup5\n    /* \"#utility.yul\":4126:4144   */\n  add\n    /* \"#utility.yul\":4120:4145   */\n  mload\n    /* \"#utility.yul\":4172:4190   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4164:4170   */\n  dup2\n    /* \"#utility.yul\":4161:4191   */\n  gt\n    /* \"#utility.yul\":4158:4275   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4194:4273   */\n  tag_100\n  tag_14\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4158:4275   */\ntag_99:\n    /* \"#utility.yul\":4299:4373   */\n  tag_101\n    /* \"#utility.yul\":4365:4372   */\n  dup7\n    /* \"#utility.yul\":4356:4362   */\n  dup3\n    /* \"#utility.yul\":4345:4354   */\n  dup8\n    /* \"#utility.yul\":4341:4363   */\n  add\n    /* \"#utility.yul\":4299:4373   */\n  tag_29\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4289:4373   */\n  swap2\n  pop\n    /* \"#utility.yul\":4091:4383   */\n  pop\n    /* \"#utility.yul\":3355:4390   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4396:4495   */\ntag_30:\n    /* \"#utility.yul\":4448:4454   */\n  0x00\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4476:4488   */\n  mload\n    /* \"#utility.yul\":4466:4488   */\n  swap1\n  pop\n    /* \"#utility.yul\":4396:4495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4501:4681   */\ntag_31:\n    /* \"#utility.yul\":4549:4626   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4546:4547   */\n  0x00\n    /* \"#utility.yul\":4539:4627   */\n  mstore\n    /* \"#utility.yul\":4646:4650   */\n  0x22\n    /* \"#utility.yul\":4643:4644   */\n  0x04\n    /* \"#utility.yul\":4636:4651   */\n  mstore\n    /* \"#utility.yul\":4670:4674   */\n  0x24\n    /* \"#utility.yul\":4667:4668   */\n  0x00\n    /* \"#utility.yul\":4660:4675   */\n  revert\n    /* \"#utility.yul\":4687:5007   */\ntag_32:\n    /* \"#utility.yul\":4731:4737   */\n  0x00\n    /* \"#utility.yul\":4768:4769   */\n  0x02\n    /* \"#utility.yul\":4762:4766   */\n  dup3\n    /* \"#utility.yul\":4758:4770   */\n  div\n    /* \"#utility.yul\":4748:4770   */\n  swap1\n  pop\n    /* \"#utility.yul\":4815:4816   */\n  0x01\n    /* \"#utility.yul\":4809:4813   */\n  dup3\n    /* \"#utility.yul\":4805:4817   */\n  and\n    /* \"#utility.yul\":4836:4854   */\n  dup1\n    /* \"#utility.yul\":4826:4907   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4892:4896   */\n  0x7f\n    /* \"#utility.yul\":4884:4890   */\n  dup3\n    /* \"#utility.yul\":4880:4897   */\n  and\n    /* \"#utility.yul\":4870:4897   */\n  swap2\n  pop\n    /* \"#utility.yul\":4826:4907   */\ntag_105:\n    /* \"#utility.yul\":4954:4956   */\n  0x20\n    /* \"#utility.yul\":4946:4952   */\n  dup3\n    /* \"#utility.yul\":4943:4957   */\n  lt\n    /* \"#utility.yul\":4923:4941   */\n  dup2\n    /* \"#utility.yul\":4920:4958   */\n  sub\n    /* \"#utility.yul\":4917:5001   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4973:4991   */\n  tag_107\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4917:5001   */\ntag_106:\n    /* \"#utility.yul\":4738:5007   */\n  pop\n    /* \"#utility.yul\":4687:5007   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5013:5154   */\ntag_33:\n    /* \"#utility.yul\":5062:5066   */\n  0x00\n    /* \"#utility.yul\":5085:5088   */\n  dup2\n    /* \"#utility.yul\":5077:5088   */\n  swap1\n  pop\n    /* \"#utility.yul\":5108:5111   */\n  dup2\n    /* \"#utility.yul\":5105:5106   */\n  0x00\n    /* \"#utility.yul\":5098:5112   */\n  mstore\n    /* \"#utility.yul\":5142:5146   */\n  0x20\n    /* \"#utility.yul\":5139:5140   */\n  0x00\n    /* \"#utility.yul\":5129:5147   */\n  keccak256\n    /* \"#utility.yul\":5121:5147   */\n  swap1\n  pop\n    /* \"#utility.yul\":5013:5154   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5160:5253   */\ntag_34:\n    /* \"#utility.yul\":5197:5203   */\n  0x00\n    /* \"#utility.yul\":5244:5246   */\n  0x20\n    /* \"#utility.yul\":5239:5241   */\n  0x1f\n    /* \"#utility.yul\":5232:5237   */\n  dup4\n    /* \"#utility.yul\":5228:5242   */\n  add\n    /* \"#utility.yul\":5224:5247   */\n  div\n    /* \"#utility.yul\":5214:5247   */\n  swap1\n  pop\n    /* \"#utility.yul\":5160:5253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5259:5366   */\ntag_35:\n    /* \"#utility.yul\":5303:5311   */\n  0x00\n    /* \"#utility.yul\":5353:5358   */\n  dup3\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5343:5359   */\n  shl\n    /* \"#utility.yul\":5322:5359   */\n  swap1\n  pop\n    /* \"#utility.yul\":5259:5366   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5372:5765   */\ntag_36:\n    /* \"#utility.yul\":5441:5447   */\n  0x00\n    /* \"#utility.yul\":5491:5492   */\n  0x08\n    /* \"#utility.yul\":5479:5489   */\n  dup4\n    /* \"#utility.yul\":5475:5493   */\n  mul\n    /* \"#utility.yul\":5514:5611   */\n  tag_112\n    /* \"#utility.yul\":5544:5610   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5533:5542   */\n  dup3\n    /* \"#utility.yul\":5514:5611   */\n  tag_35\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5632:5671   */\n  tag_113\n    /* \"#utility.yul\":5662:5670   */\n  dup7\n    /* \"#utility.yul\":5651:5660   */\n  dup4\n    /* \"#utility.yul\":5632:5671   */\n  tag_35\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5620:5671   */\n  swap6\n  pop\n    /* \"#utility.yul\":5704:5708   */\n  dup1\n    /* \"#utility.yul\":5700:5709   */\n  not\n    /* \"#utility.yul\":5693:5698   */\n  dup5\n    /* \"#utility.yul\":5689:5710   */\n  and\n    /* \"#utility.yul\":5680:5710   */\n  swap4\n  pop\n    /* \"#utility.yul\":5753:5757   */\n  dup1\n    /* \"#utility.yul\":5743:5751   */\n  dup7\n    /* \"#utility.yul\":5739:5758   */\n  and\n    /* \"#utility.yul\":5732:5737   */\n  dup5\n    /* \"#utility.yul\":5729:5759   */\n  or\n    /* \"#utility.yul\":5719:5759   */\n  swap3\n  pop\n    /* \"#utility.yul\":5448:5765   */\n  pop\n  pop\n    /* \"#utility.yul\":5372:5765   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5771:5848   */\ntag_37:\n    /* \"#utility.yul\":5808:5815   */\n  0x00\n    /* \"#utility.yul\":5837:5842   */\n  dup2\n    /* \"#utility.yul\":5826:5842   */\n  swap1\n  pop\n    /* \"#utility.yul\":5771:5848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5854:5914   */\ntag_38:\n    /* \"#utility.yul\":5882:5885   */\n  0x00\n    /* \"#utility.yul\":5903:5908   */\n  dup2\n    /* \"#utility.yul\":5896:5908   */\n  swap1\n  pop\n    /* \"#utility.yul\":5854:5914   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5920:6062   */\ntag_39:\n    /* \"#utility.yul\":5970:5979   */\n  0x00\n    /* \"#utility.yul\":6003:6056   */\n  tag_117\n    /* \"#utility.yul\":6021:6055   */\n  tag_118\n    /* \"#utility.yul\":6030:6054   */\n  tag_119\n    /* \"#utility.yul\":6048:6053   */\n  dup5\n    /* \"#utility.yul\":6030:6054   */\n  tag_37\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6021:6055   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6003:6056   */\n  tag_37\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5990:6056   */\n  swap1\n  pop\n    /* \"#utility.yul\":5920:6062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6068:6143   */\ntag_40:\n    /* \"#utility.yul\":6111:6114   */\n  0x00\n    /* \"#utility.yul\":6132:6137   */\n  dup2\n    /* \"#utility.yul\":6125:6137   */\n  swap1\n  pop\n    /* \"#utility.yul\":6068:6143   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6149:6418   */\ntag_41:\n    /* \"#utility.yul\":6259:6298   */\n  tag_122\n    /* \"#utility.yul\":6290:6297   */\n  dup4\n    /* \"#utility.yul\":6259:6298   */\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6320:6411   */\n  tag_123\n    /* \"#utility.yul\":6369:6410   */\n  tag_124\n    /* \"#utility.yul\":6393:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6410   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6361:6367   */\n  dup5\n    /* \"#utility.yul\":6354:6358   */\n  dup5\n    /* \"#utility.yul\":6348:6359   */\n  sload\n    /* \"#utility.yul\":6320:6411   */\n  tag_36\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6314:6318   */\n  dup3\n    /* \"#utility.yul\":6307:6412   */\n  sstore\n    /* \"#utility.yul\":6225:6418   */\n  pop\n    /* \"#utility.yul\":6149:6418   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6424:6497   */\ntag_42:\n    /* \"#utility.yul\":6469:6472   */\n  0x00\n    /* \"#utility.yul\":6424:6497   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6503:6692   */\ntag_43:\n    /* \"#utility.yul\":6580:6612   */\n  tag_127\n  tag_42\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6621:6686   */\n  tag_128\n    /* \"#utility.yul\":6679:6685   */\n  dup2\n    /* \"#utility.yul\":6671:6677   */\n  dup5\n    /* \"#utility.yul\":6665:6669   */\n  dup5\n    /* \"#utility.yul\":6621:6686   */\n  tag_41\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6556:6692   */\n  pop\n    /* \"#utility.yul\":6503:6692   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6698:6884   */\ntag_44:\n    /* \"#utility.yul\":6758:6878   */\ntag_130:\n    /* \"#utility.yul\":6775:6778   */\n  dup2\n    /* \"#utility.yul\":6768:6773   */\n  dup2\n    /* \"#utility.yul\":6765:6779   */\n  lt\n    /* \"#utility.yul\":6758:6878   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6829:6868   */\n  tag_133\n    /* \"#utility.yul\":6866:6867   */\n  0x00\n    /* \"#utility.yul\":6859:6864   */\n  dup3\n    /* \"#utility.yul\":6829:6868   */\n  tag_43\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6802:6803   */\n  0x01\n    /* \"#utility.yul\":6795:6800   */\n  dup2\n    /* \"#utility.yul\":6791:6804   */\n  add\n    /* \"#utility.yul\":6782:6804   */\n  swap1\n  pop\n    /* \"#utility.yul\":6758:6878   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":6698:6884   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6890:7433   */\ntag_45:\n    /* \"#utility.yul\":6991:6993   */\n  0x1f\n    /* \"#utility.yul\":6986:6989   */\n  dup3\n    /* \"#utility.yul\":6983:6994   */\n  gt\n    /* \"#utility.yul\":6980:7426   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7025:7063   */\n  tag_136\n    /* \"#utility.yul\":7057:7062   */\n  dup2\n    /* \"#utility.yul\":7025:7063   */\n  tag_33\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7109:7138   */\n  tag_137\n    /* \"#utility.yul\":7127:7137   */\n  dup5\n    /* \"#utility.yul\":7109:7138   */\n  tag_34\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7099:7107   */\n  dup2\n    /* \"#utility.yul\":7095:7139   */\n  add\n    /* \"#utility.yul\":7292:7294   */\n  0x20\n    /* \"#utility.yul\":7280:7290   */\n  dup6\n    /* \"#utility.yul\":7277:7295   */\n  lt\n    /* \"#utility.yul\":7274:7323   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":7313:7321   */\n  dup2\n    /* \"#utility.yul\":7298:7321   */\n  swap1\n  pop\n    /* \"#utility.yul\":7274:7323   */\ntag_138:\n    /* \"#utility.yul\":7336:7416   */\n  tag_139\n    /* \"#utility.yul\":7392:7414   */\n  tag_140\n    /* \"#utility.yul\":7410:7413   */\n  dup6\n    /* \"#utility.yul\":7392:7414   */\n  tag_34\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7382:7390   */\n  dup4\n    /* \"#utility.yul\":7378:7415   */\n  add\n    /* \"#utility.yul\":7365:7376   */\n  dup3\n    /* \"#utility.yul\":7336:7416   */\n  tag_44\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6995:7426   */\n  pop\n  pop\n    /* \"#utility.yul\":6980:7426   */\ntag_135:\n    /* \"#utility.yul\":6890:7433   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7439:7556   */\ntag_46:\n    /* \"#utility.yul\":7493:7501   */\n  0x00\n    /* \"#utility.yul\":7543:7548   */\n  dup3\n    /* \"#utility.yul\":7537:7541   */\n  dup3\n    /* \"#utility.yul\":7533:7549   */\n  shr\n    /* \"#utility.yul\":7512:7549   */\n  swap1\n  pop\n    /* \"#utility.yul\":7439:7556   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7562:7731   */\ntag_47:\n    /* \"#utility.yul\":7606:7612   */\n  0x00\n    /* \"#utility.yul\":7639:7690   */\n  tag_143\n    /* \"#utility.yul\":7687:7688   */\n  0x00\n    /* \"#utility.yul\":7683:7689   */\n  not\n    /* \"#utility.yul\":7675:7680   */\n  dup5\n    /* \"#utility.yul\":7672:7673   */\n  0x08\n    /* \"#utility.yul\":7668:7681   */\n  mul\n    /* \"#utility.yul\":7639:7690   */\n  tag_46\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7635:7691   */\n  not\n    /* \"#utility.yul\":7720:7724   */\n  dup1\n    /* \"#utility.yul\":7714:7718   */\n  dup4\n    /* \"#utility.yul\":7710:7725   */\n  and\n    /* \"#utility.yul\":7700:7725   */\n  swap2\n  pop\n    /* \"#utility.yul\":7613:7731   */\n  pop\n    /* \"#utility.yul\":7562:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:8031   */\ntag_48:\n    /* \"#utility.yul\":7812:7816   */\n  0x00\n    /* \"#utility.yul\":7958:7987   */\n  tag_145\n    /* \"#utility.yul\":7983:7986   */\n  dup4\n    /* \"#utility.yul\":7977:7981   */\n  dup4\n    /* \"#utility.yul\":7958:7987   */\n  tag_47\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7950:7987   */\n  swap2\n  pop\n    /* \"#utility.yul\":8020:8023   */\n  dup3\n    /* \"#utility.yul\":8017:8018   */\n  0x02\n    /* \"#utility.yul\":8013:8024   */\n  mul\n    /* \"#utility.yul\":8007:8011   */\n  dup3\n    /* \"#utility.yul\":8004:8025   */\n  or\n    /* \"#utility.yul\":7996:8025   */\n  swap1\n  pop\n    /* \"#utility.yul\":7736:8031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8036:9431   */\ntag_8:\n    /* \"#utility.yul\":8153:8190   */\n  tag_147\n    /* \"#utility.yul\":8186:8189   */\n  dup3\n    /* \"#utility.yul\":8153:8190   */\n  tag_30\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":8255:8273   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8247:8253   */\n  dup2\n    /* \"#utility.yul\":8244:8274   */\n  gt\n    /* \"#utility.yul\":8241:8297   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":8277:8295   */\n  tag_149\n  tag_23\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":8241:8297   */\ntag_148:\n    /* \"#utility.yul\":8321:8359   */\n  tag_150\n    /* \"#utility.yul\":8353:8357   */\n  dup3\n    /* \"#utility.yul\":8347:8358   */\n  sload\n    /* \"#utility.yul\":8321:8359   */\n  tag_32\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8406:8473   */\n  tag_151\n    /* \"#utility.yul\":8466:8472   */\n  dup3\n    /* \"#utility.yul\":8458:8464   */\n  dup3\n    /* \"#utility.yul\":8452:8456   */\n  dup6\n    /* \"#utility.yul\":8406:8473   */\n  tag_45\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8500:8501   */\n  0x00\n    /* \"#utility.yul\":8524:8528   */\n  0x20\n    /* \"#utility.yul\":8511:8528   */\n  swap1\n  pop\n    /* \"#utility.yul\":8556:8558   */\n  0x1f\n    /* \"#utility.yul\":8548:8554   */\n  dup4\n    /* \"#utility.yul\":8545:8559   */\n  gt\n    /* \"#utility.yul\":8573:8574   */\n  0x01\n    /* \"#utility.yul\":8568:9186   */\n  dup2\n  eq\n  tag_153\n  jumpi\n    /* \"#utility.yul\":9230:9231   */\n  0x00\n    /* \"#utility.yul\":9247:9253   */\n  dup5\n    /* \"#utility.yul\":9244:9321   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":9296:9305   */\n  dup3\n    /* \"#utility.yul\":9291:9294   */\n  dup8\n    /* \"#utility.yul\":9287:9306   */\n  add\n    /* \"#utility.yul\":9281:9307   */\n  mload\n    /* \"#utility.yul\":9272:9307   */\n  swap1\n  pop\n    /* \"#utility.yul\":9244:9321   */\ntag_154:\n    /* \"#utility.yul\":9347:9414   */\n  tag_155\n    /* \"#utility.yul\":9407:9413   */\n  dup6\n    /* \"#utility.yul\":9400:9405   */\n  dup3\n    /* \"#utility.yul\":9347:9414   */\n  tag_48\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":9341:9345   */\n  dup7\n    /* \"#utility.yul\":9334:9415   */\n  sstore\n    /* \"#utility.yul\":9203:9425   */\n  pop\n    /* \"#utility.yul\":8538:9425   */\n  jump(tag_152)\n    /* \"#utility.yul\":8568:9186   */\ntag_153:\n    /* \"#utility.yul\":8620:8624   */\n  0x1f\n    /* \"#utility.yul\":8616:8625   */\n  not\n    /* \"#utility.yul\":8608:8614   */\n  dup5\n    /* \"#utility.yul\":8604:8626   */\n  and\n    /* \"#utility.yul\":8654:8691   */\n  tag_156\n    /* \"#utility.yul\":8686:8690   */\n  dup7\n    /* \"#utility.yul\":8654:8691   */\n  tag_33\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8713:8714   */\n  0x00\n    /* \"#utility.yul\":8727:8935   */\ntag_157:\n    /* \"#utility.yul\":8741:8748   */\n  dup3\n    /* \"#utility.yul\":8738:8739   */\n  dup2\n    /* \"#utility.yul\":8735:8749   */\n  lt\n    /* \"#utility.yul\":8727:8935   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":8820:8829   */\n  dup5\n    /* \"#utility.yul\":8815:8818   */\n  dup10\n    /* \"#utility.yul\":8811:8830   */\n  add\n    /* \"#utility.yul\":8805:8831   */\n  mload\n    /* \"#utility.yul\":8797:8803   */\n  dup3\n    /* \"#utility.yul\":8790:8832   */\n  sstore\n    /* \"#utility.yul\":8871:8872   */\n  0x01\n    /* \"#utility.yul\":8863:8869   */\n  dup3\n    /* \"#utility.yul\":8859:8873   */\n  add\n    /* \"#utility.yul\":8849:8873   */\n  swap2\n  pop\n    /* \"#utility.yul\":8918:8920   */\n  0x20\n    /* \"#utility.yul\":8907:8916   */\n  dup6\n    /* \"#utility.yul\":8903:8921   */\n  add\n    /* \"#utility.yul\":8890:8921   */\n  swap5\n  pop\n    /* \"#utility.yul\":8764:8768   */\n  0x20\n    /* \"#utility.yul\":8761:8762   */\n  dup2\n    /* \"#utility.yul\":8757:8769   */\n  add\n    /* \"#utility.yul\":8752:8769   */\n  swap1\n  pop\n    /* \"#utility.yul\":8727:8935   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":8963:8969   */\n  dup7\n    /* \"#utility.yul\":8954:8961   */\n  dup4\n    /* \"#utility.yul\":8951:8970   */\n  lt\n    /* \"#utility.yul\":8948:9127   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":9021:9030   */\n  dup5\n    /* \"#utility.yul\":9016:9019   */\n  dup10\n    /* \"#utility.yul\":9012:9031   */\n  add\n    /* \"#utility.yul\":9006:9032   */\n  mload\n    /* \"#utility.yul\":9064:9112   */\n  tag_161\n    /* \"#utility.yul\":9106:9110   */\n  0x1f\n    /* \"#utility.yul\":9098:9104   */\n  dup10\n    /* \"#utility.yul\":9094:9111   */\n  and\n    /* \"#utility.yul\":9083:9092   */\n  dup3\n    /* \"#utility.yul\":9064:9112   */\n  tag_47\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":9056:9062   */\n  dup4\n    /* \"#utility.yul\":9049:9113   */\n  sstore\n    /* \"#utility.yul\":8971:9127   */\n  pop\n    /* \"#utility.yul\":8948:9127   */\ntag_160:\n    /* \"#utility.yul\":9173:9174   */\n  0x01\n    /* \"#utility.yul\":9169:9170   */\n  0x02\n    /* \"#utility.yul\":9161:9167   */\n  dup9\n    /* \"#utility.yul\":9157:9171   */\n  mul\n    /* \"#utility.yul\":9153:9175   */\n  add\n    /* \"#utility.yul\":9147:9151   */\n  dup9\n    /* \"#utility.yul\":9140:9176   */\n  sstore\n    /* \"#utility.yul\":8575:9186   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8538:9425   */\ntag_152:\n  pop\n    /* \"#utility.yul\":8128:9431   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8036:9431   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/program/vault/vault02.sol\":216:4835  contract ERC4626 is ERC20, IERC4626 {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/program/vault/vault02.sol\":216:4835  contract ERC4626 is ERC20, IERC4626 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xba087652\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xce96cb77\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xce96cb77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd905777e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xef8b30f7\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xba087652\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc63d75b6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6e6f592\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x94bf804d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb3d7f6b9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb460af94\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x402d267d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4cdad506\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e553f65\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01e1d114\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07a2d13a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0a28a477\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/program/vault/vault02.sol\":2849:3010  function totalAssets() public view virtual returns (uint256) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":3376:3724  function convertToAssets(uint256 shares)... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4025:4187  function previewWithdraw(uint256 assets)... */\n    tag_7:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":455:558  function asset() public view virtual override returns (address) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4359:4467  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4193:4353  function previewRedeem(uint256 shares)... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":564:1051  function deposit(uint256 assets, address receiver)... */\n    tag_14:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":1057:1542  function mint(uint256 shares, address receiver)... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":3897:4019  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":1548:2192  function withdraw(... */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":2198:2843  function redeem(... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4473:4578  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":3016:3370  function convertToShares(uint256 assets)... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4584:4715  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":4721:4833  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":3730:3891  function previewDeposit(uint256 assets)... */\n    tag_27:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/program/vault/vault02.sol\":2849:3010  function totalAssets() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"contracts/program/vault/vault02.sol\":2901:2908  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":2972:2978  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":2972:2988  _asset.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/program/vault/vault02.sol\":2997:3001  this */\n      address\n        /* \"contracts/program/vault/vault02.sol\":2972:3003  _asset.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/program/vault/vault02.sol\":2965:3003  return _asset.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":2849:3010  function totalAssets() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":3376:3724  function convertToAssets(uint256 shares)... */\n    tag_43:\n        /* \"contracts/program/vault/vault02.sol\":3478:3485  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3501:3515  uint256 supply */\n      dup1\n        /* \"contracts/program/vault/vault02.sol\":3518:3531  totalSupply() */\n      tag_152\n        /* \"contracts/program/vault/vault02.sol\":3518:3529  totalSupply */\n      tag_56\n        /* \"contracts/program/vault/vault02.sol\":3518:3531  totalSupply() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/program/vault/vault02.sol\":3501:3531  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3671:3672  0 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3661:3667  supply */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":3661:3672  supply == 0 */\n      eq\n        /* \"contracts/program/vault/vault02.sol\":3661:3717  supply == 0 ? shares : (shares * totalAssets()) / supply */\n      tag_153\n      jumpi\n        /* \"contracts/program/vault/vault02.sol\":3711:3717  supply */\n      dup1\n        /* \"contracts/program/vault/vault02.sol\":3694:3707  totalAssets() */\n      tag_154\n        /* \"contracts/program/vault/vault02.sol\":3694:3705  totalAssets */\n      tag_33\n        /* \"contracts/program/vault/vault02.sol\":3694:3707  totalAssets() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/program/vault/vault02.sol\":3685:3691  shares */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":3685:3707  shares * totalAssets() */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/program/vault/vault02.sol\":3684:3717  (shares * totalAssets()) / supply */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/program/vault/vault02.sol\":3661:3717  supply == 0 ? shares : (shares * totalAssets()) / supply */\n      jump(tag_159)\n    tag_153:\n        /* \"contracts/program/vault/vault02.sol\":3675:3681  shares */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":3661:3717  supply == 0 ? shares : (shares * totalAssets()) / supply */\n    tag_159:\n        /* \"contracts/program/vault/vault02.sol\":3654:3717  return supply == 0 ? shares : (shares * totalAssets()) / supply */\n      swap2\n      pop\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3376:3724  function convertToAssets(uint256 shares)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4025:4187  function previewWithdraw(uint256 assets)... */\n    tag_53:\n        /* \"contracts/program/vault/vault02.sol\":4127:4134  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4157:4180  convertToShares(assets) */\n      tag_166\n        /* \"contracts/program/vault/vault02.sol\":4173:4179  assets */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":4157:4172  convertToShares */\n      tag_119\n        /* \"contracts/program/vault/vault02.sol\":4157:4180  convertToShares(assets) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/program/vault/vault02.sol\":4150:4180  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4025:4187  function previewWithdraw(uint256 assets)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":455:558  function asset() public view virtual override returns (address) {... */\n    tag_68:\n        /* \"contracts/program/vault/vault02.sol\":510:517  address */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":544:550  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":529:551  return address(_asset) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":455:558  function asset() public view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4359:4467  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"contracts/program/vault/vault02.sol\":4417:4424  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4443:4460  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/program/vault/vault02.sol\":4436:4460  return type(uint256).max */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4359:4467  function maxDeposit(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4193:4353  function previewRedeem(uint256 shares)... */\n    tag_78:\n        /* \"contracts/program/vault/vault02.sol\":4293:4300  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4323:4346  convertToAssets(shares) */\n      tag_178\n        /* \"contracts/program/vault/vault02.sol\":4339:4345  shares */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":4323:4338  convertToAssets */\n      tag_43\n        /* \"contracts/program/vault/vault02.sol\":4323:4346  convertToAssets(shares) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/program/vault/vault02.sol\":4316:4346  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4193:4353  function previewRedeem(uint256 shares)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":564:1051  function deposit(uint256 assets, address receiver)... */\n    tag_83:\n        /* \"contracts/program/vault/vault02.sol\":680:694  uint256 shares */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":784:806  previewDeposit(assets) */\n      tag_180\n        /* \"contracts/program/vault/vault02.sol\":799:805  assets */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":784:798  previewDeposit */\n      tag_136\n        /* \"contracts/program/vault/vault02.sol\":784:806  previewDeposit(assets) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/program/vault/vault02.sol\":775:806  shares = previewDeposit(assets) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":864:870  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":864:883  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/program/vault/vault02.sol\":884:894  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":904:908  this */\n      address\n        /* \"contracts/program/vault/vault02.sol\":911:917  assets */\n      dup7\n        /* \"contracts/program/vault/vault02.sol\":864:918  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      pop\n        /* \"contracts/program/vault/vault02.sol\":928:951  _mint(receiver, shares) */\n      tag_187\n        /* \"contracts/program/vault/vault02.sol\":934:942  receiver */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":944:950  shares */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":928:933  _mint */\n      tag_188\n        /* \"contracts/program/vault/vault02.sol\":928:951  _mint(receiver, shares) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/program/vault/vault02.sol\":1019:1027  receiver */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":999:1044  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":1007:1017  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":999:1044  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"contracts/program/vault/vault02.sol\":1029:1035  assets */\n      dup6\n        /* \"contracts/program/vault/vault02.sol\":1037:1043  shares */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":999:1044  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/program/vault/vault02.sol\":564:1051  function deposit(uint256 assets, address receiver)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":1057:1542  function mint(uint256 shares, address receiver)... */\n    tag_91:\n        /* \"contracts/program/vault/vault02.sol\":1170:1184  uint256 assets */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":1279:1298  previewMint(shares) */\n      tag_193\n        /* \"contracts/program/vault/vault02.sol\":1291:1297  shares */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":1279:1290  previewMint */\n      tag_102\n        /* \"contracts/program/vault/vault02.sol\":1279:1298  previewMint(shares) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/program/vault/vault02.sol\":1270:1298  assets = previewMint(shares) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":1355:1361  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":1355:1374  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/program/vault/vault02.sol\":1375:1385  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":1395:1399  this */\n      address\n        /* \"contracts/program/vault/vault02.sol\":1402:1408  assets */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":1355:1409  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_194:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_197:\n      pop\n        /* \"contracts/program/vault/vault02.sol\":1419:1442  _mint(receiver, shares) */\n      tag_198\n        /* \"contracts/program/vault/vault02.sol\":1425:1433  receiver */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":1435:1441  shares */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":1419:1424  _mint */\n      tag_188\n        /* \"contracts/program/vault/vault02.sol\":1419:1442  _mint(receiver, shares) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/program/vault/vault02.sol\":1510:1518  receiver */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":1490:1535  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":1498:1508  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":1490:1535  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"contracts/program/vault/vault02.sol\":1520:1526  assets */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":1528:1534  shares */\n      dup7\n        /* \"contracts/program/vault/vault02.sol\":1490:1535  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/program/vault/vault02.sol\":1057:1542  function mint(uint256 shares, address receiver)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_146\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_146\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":3897:4019  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"contracts/program/vault/vault02.sol\":3963:3970  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3989:4012  convertToAssets(shares) */\n      tag_210\n        /* \"contracts/program/vault/vault02.sol\":4005:4011  shares */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":3989:4004  convertToAssets */\n      tag_43\n        /* \"contracts/program/vault/vault02.sol\":3989:4012  convertToAssets(shares) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/program/vault/vault02.sol\":3982:4012  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3897:4019  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":1548:2192  function withdraw(... */\n    tag_107:\n        /* \"contracts/program/vault/vault02.sol\":1669:1683  uint256 shares */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":1770:1793  previewWithdraw(assets) */\n      tag_212\n        /* \"contracts/program/vault/vault02.sol\":1786:1792  assets */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":1770:1785  previewWithdraw */\n      tag_53\n        /* \"contracts/program/vault/vault02.sol\":1770:1793  previewWithdraw(assets) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/program/vault/vault02.sol\":1761:1793  shares = previewWithdraw(assets) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":1888:1893  owner */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":1874:1893  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":1874:1884  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":1874:1893  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/program/vault/vault02.sol\":1870:1962  if (msg.sender != owner) {... */\n      tag_213\n      jumpi\n        /* \"contracts/program/vault/vault02.sol\":1909:1951  _spendAllowance(owner, msg.sender, shares) */\n      tag_214\n        /* \"contracts/program/vault/vault02.sol\":1925:1930  owner */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":1932:1942  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":1944:1950  shares */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":1909:1924  _spendAllowance */\n      tag_171\n        /* \"contracts/program/vault/vault02.sol\":1909:1951  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/program/vault/vault02.sol\":1870:1962  if (msg.sender != owner) {... */\n    tag_213:\n        /* \"contracts/program/vault/vault02.sol\":2020:2040  _burn(owner, shares) */\n      tag_215\n        /* \"contracts/program/vault/vault02.sol\":2026:2031  owner */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":2033:2039  shares */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":2020:2025  _burn */\n      tag_216\n        /* \"contracts/program/vault/vault02.sol\":2020:2040  _burn(owner, shares) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/program/vault/vault02.sol\":2050:2056  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":2050:2065  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/program/vault/vault02.sol\":2066:2074  receiver */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":2076:2082  assets */\n      dup7\n        /* \"contracts/program/vault/vault02.sol\":2050:2083  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_221:\n      pop\n        /* \"contracts/program/vault/vault02.sol\":2163:2168  owner */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":2132:2185  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":2153:2161  receiver */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":2132:2185  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":2141:2151  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":2132:2185  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"contracts/program/vault/vault02.sol\":2170:2176  assets */\n      dup8\n        /* \"contracts/program/vault/vault02.sol\":2178:2184  shares */\n      dup6\n        /* \"contracts/program/vault/vault02.sol\":2132:2185  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/program/vault/vault02.sol\":1548:2192  function withdraw(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":2198:2843  function redeem(... */\n    tag_111:\n        /* \"contracts/program/vault/vault02.sol\":2317:2331  uint256 assets */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":2422:2443  previewRedeem(shares) */\n      tag_224\n        /* \"contracts/program/vault/vault02.sol\":2436:2442  shares */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":2422:2435  previewRedeem */\n      tag_78\n        /* \"contracts/program/vault/vault02.sol\":2422:2443  previewRedeem(shares) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/program/vault/vault02.sol\":2413:2443  assets = previewRedeem(shares) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":2538:2543  owner */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":2524:2543  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":2524:2534  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":2524:2543  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/program/vault/vault02.sol\":2520:2612  if (msg.sender != owner) {... */\n      tag_225\n      jumpi\n        /* \"contracts/program/vault/vault02.sol\":2559:2601  _spendAllowance(owner, msg.sender, shares) */\n      tag_226\n        /* \"contracts/program/vault/vault02.sol\":2575:2580  owner */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":2582:2592  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":2594:2600  shares */\n      dup7\n        /* \"contracts/program/vault/vault02.sol\":2559:2574  _spendAllowance */\n      tag_171\n        /* \"contracts/program/vault/vault02.sol\":2559:2601  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/program/vault/vault02.sol\":2520:2612  if (msg.sender != owner) {... */\n    tag_225:\n        /* \"contracts/program/vault/vault02.sol\":2670:2690  _burn(owner, shares) */\n      tag_227\n        /* \"contracts/program/vault/vault02.sol\":2676:2681  owner */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":2683:2689  shares */\n      dup6\n        /* \"contracts/program/vault/vault02.sol\":2670:2675  _burn */\n      tag_216\n        /* \"contracts/program/vault/vault02.sol\":2670:2690  _burn(owner, shares) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/program/vault/vault02.sol\":2700:2706  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/program/vault/vault02.sol\":2700:2715  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/program/vault/vault02.sol\":2716:2724  receiver */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":2726:2732  assets */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":2700:2733  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/program/vault/vault02.sol\":2814:2819  owner */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":2783:2836  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":2804:2812  receiver */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":2783:2836  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/program/vault/vault02.sol\":2792:2802  msg.sender */\n      caller\n        /* \"contracts/program/vault/vault02.sol\":2783:2836  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"contracts/program/vault/vault02.sol\":2821:2827  assets */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":2829:2835  shares */\n      dup9\n        /* \"contracts/program/vault/vault02.sol\":2783:2836  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/program/vault/vault02.sol\":2198:2843  function redeem(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4473:4578  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"contracts/program/vault/vault02.sol\":4528:4535  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4554:4571  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/program/vault/vault02.sol\":4547:4571  return type(uint256).max */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4473:4578  function maxMint(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":3016:3370  function convertToShares(uint256 assets)... */\n    tag_119:\n        /* \"contracts/program/vault/vault02.sol\":3118:3125  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3141:3155  uint256 supply */\n      dup1\n        /* \"contracts/program/vault/vault02.sol\":3158:3171  totalSupply() */\n      tag_235\n        /* \"contracts/program/vault/vault02.sol\":3158:3169  totalSupply */\n      tag_56\n        /* \"contracts/program/vault/vault02.sol\":3158:3171  totalSupply() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/program/vault/vault02.sol\":3141:3171  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3317:3318  0 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3307:3313  supply */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":3307:3318  supply == 0 */\n      eq\n        /* \"contracts/program/vault/vault02.sol\":3307:3363  supply == 0 ? assets : (assets * supply) / totalAssets() */\n      tag_236\n      jumpi\n        /* \"contracts/program/vault/vault02.sol\":3350:3363  totalAssets() */\n      tag_237\n        /* \"contracts/program/vault/vault02.sol\":3350:3361  totalAssets */\n      tag_33\n        /* \"contracts/program/vault/vault02.sol\":3350:3363  totalAssets() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/program/vault/vault02.sol\":3340:3346  supply */\n      dup2\n        /* \"contracts/program/vault/vault02.sol\":3331:3337  assets */\n      dup5\n        /* \"contracts/program/vault/vault02.sol\":3331:3346  assets * supply */\n      tag_238\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"contracts/program/vault/vault02.sol\":3330:3363  (assets * supply) / totalAssets() */\n      tag_239\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_239:\n        /* \"contracts/program/vault/vault02.sol\":3307:3363  supply == 0 ? assets : (assets * supply) / totalAssets() */\n      jump(tag_240)\n    tag_236:\n        /* \"contracts/program/vault/vault02.sol\":3321:3327  assets */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":3307:3363  supply == 0 ? assets : (assets * supply) / totalAssets() */\n    tag_240:\n        /* \"contracts/program/vault/vault02.sol\":3300:3363  return supply == 0 ? assets : (assets * supply) / totalAssets() */\n      swap2\n      pop\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3016:3370  function convertToShares(uint256 assets)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4584:4715  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"contracts/program/vault/vault02.sol\":4649:4656  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4675:4708  convertToAssets(balanceOf(owner)) */\n      tag_242\n        /* \"contracts/program/vault/vault02.sol\":4691:4707  balanceOf(owner) */\n      tag_243\n        /* \"contracts/program/vault/vault02.sol\":4701:4706  owner */\n      dup4\n        /* \"contracts/program/vault/vault02.sol\":4691:4700  balanceOf */\n      tag_87\n        /* \"contracts/program/vault/vault02.sol\":4691:4707  balanceOf(owner) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/program/vault/vault02.sol\":4675:4690  convertToAssets */\n      tag_43\n        /* \"contracts/program/vault/vault02.sol\":4675:4708  convertToAssets(balanceOf(owner)) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/program/vault/vault02.sol\":4668:4708  return convertToAssets(balanceOf(owner)) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4584:4715  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":4721:4833  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"contracts/program/vault/vault02.sol\":4784:4791  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":4810:4826  balanceOf(owner) */\n      tag_245\n        /* \"contracts/program/vault/vault02.sol\":4820:4825  owner */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":4810:4819  balanceOf */\n      tag_87\n        /* \"contracts/program/vault/vault02.sol\":4810:4826  balanceOf(owner) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/program/vault/vault02.sol\":4803:4826  return balanceOf(owner) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":4721:4833  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/program/vault/vault02.sol\":3730:3891  function previewDeposit(uint256 assets)... */\n    tag_136:\n        /* \"contracts/program/vault/vault02.sol\":3831:3838  uint256 */\n      0x00\n        /* \"contracts/program/vault/vault02.sol\":3861:3884  convertToShares(assets) */\n      tag_248\n        /* \"contracts/program/vault/vault02.sol\":3877:3883  assets */\n      dup3\n        /* \"contracts/program/vault/vault02.sol\":3861:3876  convertToShares */\n      tag_119\n        /* \"contracts/program/vault/vault02.sol\":3861:3884  convertToShares(assets) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/program/vault/vault02.sol\":3854:3884  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"contracts/program/vault/vault02.sol\":3730:3891  function previewDeposit(uint256 assets)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_286)\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_290)\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_292:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_293:\n        /* \"#utility.yul\":177:201   */\n      tag_322\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_292\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_324\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_293\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_294:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_295:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:968   */\n    tag_296:\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":813:926   */\n    tag_328:\n        /* \"#utility.yul\":827:833   */\n      dup4\n        /* \"#utility.yul\":824:825   */\n      dup2\n        /* \"#utility.yul\":821:834   */\n      lt\n        /* \"#utility.yul\":813:926   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":907:910   */\n      dup3\n        /* \"#utility.yul\":903:914   */\n      add\n        /* \"#utility.yul\":897:915   */\n      mload\n        /* \"#utility.yul\":893:894   */\n      dup2\n        /* \"#utility.yul\":888:891   */\n      dup5\n        /* \"#utility.yul\":884:895   */\n      add\n        /* \"#utility.yul\":877:916   */\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":846:847   */\n      dup2\n        /* \"#utility.yul\":842:852   */\n      add\n        /* \"#utility.yul\":837:852   */\n      swap1\n      pop\n        /* \"#utility.yul\":813:926   */\n      jump(tag_328)\n    tag_330:\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":951:957   */\n      dup5\n        /* \"#utility.yul\":946:949   */\n      dup5\n        /* \"#utility.yul\":942:958   */\n      add\n        /* \"#utility.yul\":935:962   */\n      mstore\n        /* \"#utility.yul\":784:968   */\n      pop\n        /* \"#utility.yul\":722:968   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1076   */\n    tag_297:\n        /* \"#utility.yul\":1015:1021   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1062:1069   */\n      not\n        /* \"#utility.yul\":1057:1059   */\n      0x1f\n        /* \"#utility.yul\":1050:1055   */\n      dup4\n        /* \"#utility.yul\":1046:1060   */\n      add\n        /* \"#utility.yul\":1042:1070   */\n      and\n        /* \"#utility.yul\":1032:1070   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:1076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1082:1459   */\n    tag_298:\n        /* \"#utility.yul\":1170:1173   */\n      0x00\n        /* \"#utility.yul\":1198:1237   */\n      tag_333\n        /* \"#utility.yul\":1231:1236   */\n      dup3\n        /* \"#utility.yul\":1198:1237   */\n      tag_294\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1253:1324   */\n      tag_334\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1312:1315   */\n      dup6\n        /* \"#utility.yul\":1253:1324   */\n      tag_295\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1246:1324   */\n      swap4\n      pop\n        /* \"#utility.yul\":1333:1398   */\n      tag_335\n        /* \"#utility.yul\":1391:1397   */\n      dup2\n        /* \"#utility.yul\":1386:1389   */\n      dup6\n        /* \"#utility.yul\":1379:1383   */\n      0x20\n        /* \"#utility.yul\":1372:1377   */\n      dup7\n        /* \"#utility.yul\":1368:1384   */\n      add\n        /* \"#utility.yul\":1333:1398   */\n      tag_296\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1423:1452   */\n      tag_336\n        /* \"#utility.yul\":1445:1451   */\n      dup2\n        /* \"#utility.yul\":1423:1452   */\n      tag_297\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1453   */\n      add\n        /* \"#utility.yul\":1407:1453   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1459   */\n      pop\n        /* \"#utility.yul\":1082:1459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1465:1778   */\n    tag_39:\n        /* \"#utility.yul\":1578:1582   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x20\n        /* \"#utility.yul\":1605:1614   */\n      dup3\n        /* \"#utility.yul\":1601:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap1\n      pop\n        /* \"#utility.yul\":1665:1674   */\n      dup2\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1655:1675   */\n      sub\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1629:1676   */\n      mstore\n        /* \"#utility.yul\":1693:1771   */\n      tag_338\n        /* \"#utility.yul\":1766:1770   */\n      dup2\n        /* \"#utility.yul\":1757:1763   */\n      dup5\n        /* \"#utility.yul\":1693:1771   */\n      tag_298\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1685:1771   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:1982   */\n    tag_300:\n        /* \"#utility.yul\":1974:1975   */\n      0x00\n        /* \"#utility.yul\":1971:1972   */\n      dup1\n        /* \"#utility.yul\":1964:1976   */\n      revert\n        /* \"#utility.yul\":2111:2233   */\n    tag_302:\n        /* \"#utility.yul\":2184:2208   */\n      tag_343\n        /* \"#utility.yul\":2202:2207   */\n      dup2\n        /* \"#utility.yul\":2184:2208   */\n      tag_292\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2177:2182   */\n      dup2\n        /* \"#utility.yul\":2174:2209   */\n      eq\n        /* \"#utility.yul\":2164:2227   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2223:2224   */\n      0x00\n        /* \"#utility.yul\":2220:2221   */\n      dup1\n        /* \"#utility.yul\":2213:2225   */\n      revert\n        /* \"#utility.yul\":2164:2227   */\n    tag_344:\n        /* \"#utility.yul\":2111:2233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2239:2378   */\n    tag_303:\n        /* \"#utility.yul\":2285:2290   */\n      0x00\n        /* \"#utility.yul\":2323:2329   */\n      dup2\n        /* \"#utility.yul\":2310:2330   */\n      calldataload\n        /* \"#utility.yul\":2301:2330   */\n      swap1\n      pop\n        /* \"#utility.yul\":2339:2372   */\n      tag_346\n        /* \"#utility.yul\":2366:2371   */\n      dup2\n        /* \"#utility.yul\":2339:2372   */\n      tag_302\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2239:2378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2384:2713   */\n    tag_42:\n        /* \"#utility.yul\":2443:2449   */\n      0x00\n        /* \"#utility.yul\":2492:2494   */\n      0x20\n        /* \"#utility.yul\":2480:2489   */\n      dup3\n        /* \"#utility.yul\":2471:2478   */\n      dup5\n        /* \"#utility.yul\":2467:2490   */\n      sub\n        /* \"#utility.yul\":2463:2495   */\n      slt\n        /* \"#utility.yul\":2460:2579   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2498:2577   */\n      tag_349\n      tag_300\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2460:2579   */\n    tag_348:\n        /* \"#utility.yul\":2618:2619   */\n      0x00\n        /* \"#utility.yul\":2643:2696   */\n      tag_350\n        /* \"#utility.yul\":2688:2695   */\n      dup5\n        /* \"#utility.yul\":2679:2685   */\n      dup3\n        /* \"#utility.yul\":2668:2677   */\n      dup6\n        /* \"#utility.yul\":2664:2686   */\n      add\n        /* \"#utility.yul\":2643:2696   */\n      tag_303\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2633:2696   */\n      swap2\n      pop\n        /* \"#utility.yul\":2589:2706   */\n      pop\n        /* \"#utility.yul\":2384:2713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2845   */\n    tag_304:\n        /* \"#utility.yul\":2756:2763   */\n      0x00\n        /* \"#utility.yul\":2796:2838   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2789:2794   */\n      dup3\n        /* \"#utility.yul\":2785:2839   */\n      and\n        /* \"#utility.yul\":2774:2839   */\n      swap1\n      pop\n        /* \"#utility.yul\":2719:2845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2851:2947   */\n    tag_305:\n        /* \"#utility.yul\":2888:2895   */\n      0x00\n        /* \"#utility.yul\":2917:2941   */\n      tag_353\n        /* \"#utility.yul\":2935:2940   */\n      dup3\n        /* \"#utility.yul\":2917:2941   */\n      tag_304\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2906:2941   */\n      swap1\n      pop\n        /* \"#utility.yul\":2851:2947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2953:3075   */\n    tag_306:\n        /* \"#utility.yul\":3026:3050   */\n      tag_355\n        /* \"#utility.yul\":3044:3049   */\n      dup2\n        /* \"#utility.yul\":3026:3050   */\n      tag_305\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3019:3024   */\n      dup2\n        /* \"#utility.yul\":3016:3051   */\n      eq\n        /* \"#utility.yul\":3006:3069   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      dup1\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3006:3069   */\n    tag_356:\n        /* \"#utility.yul\":2953:3075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3081:3220   */\n    tag_307:\n        /* \"#utility.yul\":3127:3132   */\n      0x00\n        /* \"#utility.yul\":3165:3171   */\n      dup2\n        /* \"#utility.yul\":3152:3172   */\n      calldataload\n        /* \"#utility.yul\":3143:3172   */\n      swap1\n      pop\n        /* \"#utility.yul\":3181:3214   */\n      tag_358\n        /* \"#utility.yul\":3208:3213   */\n      dup2\n        /* \"#utility.yul\":3181:3214   */\n      tag_306\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3081:3220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3700   */\n    tag_47:\n        /* \"#utility.yul\":3294:3300   */\n      0x00\n        /* \"#utility.yul\":3302:3308   */\n      dup1\n        /* \"#utility.yul\":3351:3353   */\n      0x40\n        /* \"#utility.yul\":3339:3348   */\n      dup4\n        /* \"#utility.yul\":3330:3337   */\n      dup6\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3438   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":3357:3436   */\n      tag_361\n      tag_300\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3319:3438   */\n    tag_360:\n        /* \"#utility.yul\":3477:3478   */\n      0x00\n        /* \"#utility.yul\":3502:3555   */\n      tag_362\n        /* \"#utility.yul\":3547:3554   */\n      dup6\n        /* \"#utility.yul\":3538:3544   */\n      dup3\n        /* \"#utility.yul\":3527:3536   */\n      dup7\n        /* \"#utility.yul\":3523:3545   */\n      add\n        /* \"#utility.yul\":3502:3555   */\n      tag_307\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3492:3555   */\n      swap3\n      pop\n        /* \"#utility.yul\":3448:3565   */\n      pop\n        /* \"#utility.yul\":3604:3606   */\n      0x20\n        /* \"#utility.yul\":3630:3683   */\n      tag_363\n        /* \"#utility.yul\":3675:3682   */\n      dup6\n        /* \"#utility.yul\":3666:3672   */\n      dup3\n        /* \"#utility.yul\":3655:3664   */\n      dup7\n        /* \"#utility.yul\":3651:3673   */\n      add\n        /* \"#utility.yul\":3630:3683   */\n      tag_303\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3620:3683   */\n      swap2\n      pop\n        /* \"#utility.yul\":3575:3693   */\n      pop\n        /* \"#utility.yul\":3226:3700   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:3796   */\n    tag_308:\n        /* \"#utility.yul\":3740:3747   */\n      0x00\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3776:3789   */\n      iszero\n        /* \"#utility.yul\":3769:3790   */\n      iszero\n        /* \"#utility.yul\":3758:3790   */\n      swap1\n      pop\n        /* \"#utility.yul\":3706:3796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:3911   */\n    tag_309:\n        /* \"#utility.yul\":3883:3904   */\n      tag_366\n        /* \"#utility.yul\":3898:3903   */\n      dup2\n        /* \"#utility.yul\":3883:3904   */\n      tag_308\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3878:3881   */\n      dup3\n        /* \"#utility.yul\":3871:3905   */\n      mstore\n        /* \"#utility.yul\":3802:3911   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3917:4127   */\n    tag_50:\n        /* \"#utility.yul\":4004:4008   */\n      0x00\n        /* \"#utility.yul\":4042:4044   */\n      0x20\n        /* \"#utility.yul\":4031:4040   */\n      dup3\n        /* \"#utility.yul\":4027:4045   */\n      add\n        /* \"#utility.yul\":4019:4045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4055:4120   */\n      tag_368\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4055:4120   */\n      tag_309\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3917:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4752   */\n    tag_60:\n        /* \"#utility.yul\":4210:4216   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup1\n        /* \"#utility.yul\":4226:4232   */\n      0x00\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4263:4272   */\n      dup5\n        /* \"#utility.yul\":4254:4261   */\n      dup7\n        /* \"#utility.yul\":4250:4273   */\n      sub\n        /* \"#utility.yul\":4246:4278   */\n      slt\n        /* \"#utility.yul\":4243:4362   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4281:4360   */\n      tag_371\n      tag_300\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4243:4362   */\n    tag_370:\n        /* \"#utility.yul\":4401:4402   */\n      0x00\n        /* \"#utility.yul\":4426:4479   */\n      tag_372\n        /* \"#utility.yul\":4471:4478   */\n      dup7\n        /* \"#utility.yul\":4462:4468   */\n      dup3\n        /* \"#utility.yul\":4451:4460   */\n      dup8\n        /* \"#utility.yul\":4447:4469   */\n      add\n        /* \"#utility.yul\":4426:4479   */\n      tag_307\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4416:4479   */\n      swap4\n      pop\n        /* \"#utility.yul\":4372:4489   */\n      pop\n        /* \"#utility.yul\":4528:4530   */\n      0x20\n        /* \"#utility.yul\":4554:4607   */\n      tag_373\n        /* \"#utility.yul\":4599:4606   */\n      dup7\n        /* \"#utility.yul\":4590:4596   */\n      dup3\n        /* \"#utility.yul\":4579:4588   */\n      dup8\n        /* \"#utility.yul\":4575:4597   */\n      add\n        /* \"#utility.yul\":4554:4607   */\n      tag_307\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4544:4607   */\n      swap3\n      pop\n        /* \"#utility.yul\":4499:4617   */\n      pop\n        /* \"#utility.yul\":4656:4658   */\n      0x40\n        /* \"#utility.yul\":4682:4735   */\n      tag_374\n        /* \"#utility.yul\":4727:4734   */\n      dup7\n        /* \"#utility.yul\":4718:4724   */\n      dup3\n        /* \"#utility.yul\":4707:4716   */\n      dup8\n        /* \"#utility.yul\":4703:4725   */\n      add\n        /* \"#utility.yul\":4682:4735   */\n      tag_303\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4672:4735   */\n      swap2\n      pop\n        /* \"#utility.yul\":4627:4745   */\n      pop\n        /* \"#utility.yul\":4133:4752   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4758:4844   */\n    tag_310:\n        /* \"#utility.yul\":4793:4800   */\n      0x00\n        /* \"#utility.yul\":4833:4837   */\n      0xff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4838   */\n      and\n        /* \"#utility.yul\":4811:4838   */\n      swap1\n      pop\n        /* \"#utility.yul\":4758:4844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4962   */\n    tag_311:\n        /* \"#utility.yul\":4933:4955   */\n      tag_377\n        /* \"#utility.yul\":4949:4954   */\n      dup2\n        /* \"#utility.yul\":4933:4955   */\n      tag_310\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4928:4931   */\n      dup3\n        /* \"#utility.yul\":4921:4956   */\n      mstore\n        /* \"#utility.yul\":4850:4962   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5182   */\n    tag_66:\n        /* \"#utility.yul\":5057:5061   */\n      0x00\n        /* \"#utility.yul\":5095:5097   */\n      0x20\n        /* \"#utility.yul\":5084:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5098   */\n      add\n        /* \"#utility.yul\":5072:5098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5108:5175   */\n      tag_379\n        /* \"#utility.yul\":5172:5173   */\n      0x00\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5157:5174   */\n      add\n        /* \"#utility.yul\":5148:5154   */\n      dup5\n        /* \"#utility.yul\":5108:5175   */\n      tag_311\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4968:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_312:\n        /* \"#utility.yul\":5275:5299   */\n      tag_381\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_305\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_70:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_383\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_312\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5869   */\n    tag_73:\n        /* \"#utility.yul\":5599:5605   */\n      0x00\n        /* \"#utility.yul\":5648:5650   */\n      0x20\n        /* \"#utility.yul\":5636:5645   */\n      dup3\n        /* \"#utility.yul\":5627:5634   */\n      dup5\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_386\n      tag_300\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5616:5735   */\n    tag_385:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_387\n        /* \"#utility.yul\":5844:5851   */\n      dup5\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup6\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_307\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5789:5852   */\n      swap2\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5540:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_82:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_390\n      tag_300\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5968:6087   */\n    tag_389:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_391\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_303\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_392\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_307\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6974   */\n    tag_106:\n        /* \"#utility.yul\":6432:6438   */\n      0x00\n        /* \"#utility.yul\":6440:6446   */\n      dup1\n        /* \"#utility.yul\":6448:6454   */\n      0x00\n        /* \"#utility.yul\":6497:6499   */\n      0x60\n        /* \"#utility.yul\":6485:6494   */\n      dup5\n        /* \"#utility.yul\":6476:6483   */\n      dup7\n        /* \"#utility.yul\":6472:6495   */\n      sub\n        /* \"#utility.yul\":6468:6500   */\n      slt\n        /* \"#utility.yul\":6465:6584   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6503:6582   */\n      tag_395\n      tag_300\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6465:6584   */\n    tag_394:\n        /* \"#utility.yul\":6623:6624   */\n      0x00\n        /* \"#utility.yul\":6648:6701   */\n      tag_396\n        /* \"#utility.yul\":6693:6700   */\n      dup7\n        /* \"#utility.yul\":6684:6690   */\n      dup3\n        /* \"#utility.yul\":6673:6682   */\n      dup8\n        /* \"#utility.yul\":6669:6691   */\n      add\n        /* \"#utility.yul\":6648:6701   */\n      tag_303\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6638:6701   */\n      swap4\n      pop\n        /* \"#utility.yul\":6594:6711   */\n      pop\n        /* \"#utility.yul\":6750:6752   */\n      0x20\n        /* \"#utility.yul\":6776:6829   */\n      tag_397\n        /* \"#utility.yul\":6821:6828   */\n      dup7\n        /* \"#utility.yul\":6812:6818   */\n      dup3\n        /* \"#utility.yul\":6801:6810   */\n      dup8\n        /* \"#utility.yul\":6797:6819   */\n      add\n        /* \"#utility.yul\":6776:6829   */\n      tag_307\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6766:6829   */\n      swap3\n      pop\n        /* \"#utility.yul\":6721:6839   */\n      pop\n        /* \"#utility.yul\":6878:6880   */\n      0x40\n        /* \"#utility.yul\":6904:6957   */\n      tag_398\n        /* \"#utility.yul\":6949:6956   */\n      dup7\n        /* \"#utility.yul\":6940:6946   */\n      dup3\n        /* \"#utility.yul\":6929:6938   */\n      dup8\n        /* \"#utility.yul\":6925:6947   */\n      add\n        /* \"#utility.yul\":6904:6957   */\n      tag_307\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6894:6957   */\n      swap2\n      pop\n        /* \"#utility.yul\":6849:6967   */\n      pop\n        /* \"#utility.yul\":6355:6974   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6980:7454   */\n    tag_131:\n        /* \"#utility.yul\":7048:7054   */\n      0x00\n        /* \"#utility.yul\":7056:7062   */\n      dup1\n        /* \"#utility.yul\":7105:7107   */\n      0x40\n        /* \"#utility.yul\":7093:7102   */\n      dup4\n        /* \"#utility.yul\":7084:7091   */\n      dup6\n        /* \"#utility.yul\":7080:7103   */\n      sub\n        /* \"#utility.yul\":7076:7108   */\n      slt\n        /* \"#utility.yul\":7073:7192   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7111:7190   */\n      tag_401\n      tag_300\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7073:7192   */\n    tag_400:\n        /* \"#utility.yul\":7231:7232   */\n      0x00\n        /* \"#utility.yul\":7256:7309   */\n      tag_402\n        /* \"#utility.yul\":7301:7308   */\n      dup6\n        /* \"#utility.yul\":7292:7298   */\n      dup3\n        /* \"#utility.yul\":7281:7290   */\n      dup7\n        /* \"#utility.yul\":7277:7299   */\n      add\n        /* \"#utility.yul\":7256:7309   */\n      tag_307\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7246:7309   */\n      swap3\n      pop\n        /* \"#utility.yul\":7202:7319   */\n      pop\n        /* \"#utility.yul\":7358:7360   */\n      0x20\n        /* \"#utility.yul\":7384:7437   */\n      tag_403\n        /* \"#utility.yul\":7429:7436   */\n      dup6\n        /* \"#utility.yul\":7420:7426   */\n      dup3\n        /* \"#utility.yul\":7409:7418   */\n      dup7\n        /* \"#utility.yul\":7405:7427   */\n      add\n        /* \"#utility.yul\":7384:7437   */\n      tag_307\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7374:7437   */\n      swap2\n      pop\n        /* \"#utility.yul\":7329:7447   */\n      pop\n        /* \"#utility.yul\":6980:7454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7460:7603   */\n    tag_313:\n        /* \"#utility.yul\":7517:7522   */\n      0x00\n        /* \"#utility.yul\":7548:7554   */\n      dup2\n        /* \"#utility.yul\":7542:7555   */\n      mload\n        /* \"#utility.yul\":7533:7555   */\n      swap1\n      pop\n        /* \"#utility.yul\":7564:7597   */\n      tag_405\n        /* \"#utility.yul\":7591:7596   */\n      dup2\n        /* \"#utility.yul\":7564:7597   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7460:7603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7609:7960   */\n    tag_143:\n        /* \"#utility.yul\":7679:7685   */\n      0x00\n        /* \"#utility.yul\":7728:7730   */\n      0x20\n        /* \"#utility.yul\":7716:7725   */\n      dup3\n        /* \"#utility.yul\":7707:7714   */\n      dup5\n        /* \"#utility.yul\":7703:7726   */\n      sub\n        /* \"#utility.yul\":7699:7731   */\n      slt\n        /* \"#utility.yul\":7696:7815   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7734:7813   */\n      tag_408\n      tag_300\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7696:7815   */\n    tag_407:\n        /* \"#utility.yul\":7854:7855   */\n      0x00\n        /* \"#utility.yul\":7879:7943   */\n      tag_409\n        /* \"#utility.yul\":7935:7942   */\n      dup5\n        /* \"#utility.yul\":7926:7932   */\n      dup3\n        /* \"#utility.yul\":7915:7924   */\n      dup6\n        /* \"#utility.yul\":7911:7933   */\n      add\n        /* \"#utility.yul\":7879:7943   */\n      tag_313\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7869:7943   */\n      swap2\n      pop\n        /* \"#utility.yul\":7825:7953   */\n      pop\n        /* \"#utility.yul\":7609:7960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7966:8146   */\n    tag_314:\n        /* \"#utility.yul\":8014:8091   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8011:8012   */\n      0x00\n        /* \"#utility.yul\":8004:8092   */\n      mstore\n        /* \"#utility.yul\":8111:8115   */\n      0x22\n        /* \"#utility.yul\":8108:8109   */\n      0x04\n        /* \"#utility.yul\":8101:8116   */\n      mstore\n        /* \"#utility.yul\":8135:8139   */\n      0x24\n        /* \"#utility.yul\":8132:8133   */\n      0x00\n        /* \"#utility.yul\":8125:8140   */\n      revert\n        /* \"#utility.yul\":8152:8472   */\n    tag_146:\n        /* \"#utility.yul\":8196:8202   */\n      0x00\n        /* \"#utility.yul\":8233:8234   */\n      0x02\n        /* \"#utility.yul\":8227:8231   */\n      dup3\n        /* \"#utility.yul\":8223:8235   */\n      div\n        /* \"#utility.yul\":8213:8235   */\n      swap1\n      pop\n        /* \"#utility.yul\":8280:8281   */\n      0x01\n        /* \"#utility.yul\":8274:8278   */\n      dup3\n        /* \"#utility.yul\":8270:8282   */\n      and\n        /* \"#utility.yul\":8301:8319   */\n      dup1\n        /* \"#utility.yul\":8291:8372   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8357:8361   */\n      0x7f\n        /* \"#utility.yul\":8349:8355   */\n      dup3\n        /* \"#utility.yul\":8345:8362   */\n      and\n        /* \"#utility.yul\":8335:8362   */\n      swap2\n      pop\n        /* \"#utility.yul\":8291:8372   */\n    tag_412:\n        /* \"#utility.yul\":8419:8421   */\n      0x20\n        /* \"#utility.yul\":8411:8417   */\n      dup3\n        /* \"#utility.yul\":8408:8422   */\n      lt\n        /* \"#utility.yul\":8388:8406   */\n      dup2\n        /* \"#utility.yul\":8385:8423   */\n      sub\n        /* \"#utility.yul\":8382:8466   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":8438:8456   */\n      tag_414\n      tag_314\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8382:8466   */\n    tag_413:\n        /* \"#utility.yul\":8203:8472   */\n      pop\n        /* \"#utility.yul\":8152:8472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8478:8658   */\n    tag_315:\n        /* \"#utility.yul\":8526:8603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8523:8524   */\n      0x00\n        /* \"#utility.yul\":8516:8604   */\n      mstore\n        /* \"#utility.yul\":8623:8627   */\n      0x11\n        /* \"#utility.yul\":8620:8621   */\n      0x04\n        /* \"#utility.yul\":8613:8628   */\n      mstore\n        /* \"#utility.yul\":8647:8651   */\n      0x24\n        /* \"#utility.yul\":8644:8645   */\n      0x00\n        /* \"#utility.yul\":8637:8652   */\n      revert\n        /* \"#utility.yul\":8664:9074   */\n    tag_156:\n        /* \"#utility.yul\":8704:8711   */\n      0x00\n        /* \"#utility.yul\":8727:8747   */\n      tag_417\n        /* \"#utility.yul\":8745:8746   */\n      dup3\n        /* \"#utility.yul\":8727:8747   */\n      tag_292\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8722:8747   */\n      swap2\n      pop\n        /* \"#utility.yul\":8761:8781   */\n      tag_418\n        /* \"#utility.yul\":8779:8780   */\n      dup4\n        /* \"#utility.yul\":8761:8781   */\n      tag_292\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8756:8781   */\n      swap3\n      pop\n        /* \"#utility.yul\":8816:8817   */\n      dup3\n        /* \"#utility.yul\":8813:8814   */\n      dup3\n        /* \"#utility.yul\":8809:8818   */\n      mul\n        /* \"#utility.yul\":8838:8868   */\n      tag_419\n        /* \"#utility.yul\":8856:8867   */\n      dup2\n        /* \"#utility.yul\":8838:8868   */\n      tag_292\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8827:8868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9017:9018   */\n      dup3\n        /* \"#utility.yul\":9008:9015   */\n      dup3\n        /* \"#utility.yul\":9004:9019   */\n      div\n        /* \"#utility.yul\":9001:9002   */\n      dup5\n        /* \"#utility.yul\":8998:9020   */\n      eq\n        /* \"#utility.yul\":8978:8979   */\n      dup4\n        /* \"#utility.yul\":8971:8980   */\n      iszero\n        /* \"#utility.yul\":8951:9034   */\n      or\n        /* \"#utility.yul\":8928:9067   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":9047:9065   */\n      tag_421\n      tag_315\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8928:9067   */\n    tag_420:\n        /* \"#utility.yul\":8712:9074   */\n      pop\n        /* \"#utility.yul\":8664:9074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9260   */\n    tag_316:\n        /* \"#utility.yul\":9128:9205   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9125:9126   */\n      0x00\n        /* \"#utility.yul\":9118:9206   */\n      mstore\n        /* \"#utility.yul\":9225:9229   */\n      0x12\n        /* \"#utility.yul\":9222:9223   */\n      0x04\n        /* \"#utility.yul\":9215:9230   */\n      mstore\n        /* \"#utility.yul\":9249:9253   */\n      0x24\n        /* \"#utility.yul\":9246:9247   */\n      0x00\n        /* \"#utility.yul\":9239:9254   */\n      revert\n        /* \"#utility.yul\":9266:9451   */\n    tag_158:\n        /* \"#utility.yul\":9306:9307   */\n      0x00\n        /* \"#utility.yul\":9323:9343   */\n      tag_424\n        /* \"#utility.yul\":9341:9342   */\n      dup3\n        /* \"#utility.yul\":9323:9343   */\n      tag_292\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9318:9343   */\n      swap2\n      pop\n        /* \"#utility.yul\":9357:9377   */\n      tag_425\n        /* \"#utility.yul\":9375:9376   */\n      dup4\n        /* \"#utility.yul\":9357:9377   */\n      tag_292\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9352:9377   */\n      swap3\n      pop\n        /* \"#utility.yul\":9396:9397   */\n      dup3\n        /* \"#utility.yul\":9386:9421   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9401:9419   */\n      tag_427\n      tag_316\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9386:9421   */\n    tag_426:\n        /* \"#utility.yul\":9443:9444   */\n      dup3\n        /* \"#utility.yul\":9440:9441   */\n      dup3\n        /* \"#utility.yul\":9436:9445   */\n      div\n        /* \"#utility.yul\":9431:9445   */\n      swap1\n      pop\n        /* \"#utility.yul\":9266:9451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9457:9899   */\n    tag_182:\n        /* \"#utility.yul\":9606:9610   */\n      0x00\n        /* \"#utility.yul\":9644:9646   */\n      0x60\n        /* \"#utility.yul\":9633:9642   */\n      dup3\n        /* \"#utility.yul\":9629:9647   */\n      add\n        /* \"#utility.yul\":9621:9647   */\n      swap1\n      pop\n        /* \"#utility.yul\":9657:9728   */\n      tag_429\n        /* \"#utility.yul\":9725:9726   */\n      0x00\n        /* \"#utility.yul\":9714:9723   */\n      dup4\n        /* \"#utility.yul\":9710:9727   */\n      add\n        /* \"#utility.yul\":9701:9707   */\n      dup7\n        /* \"#utility.yul\":9657:9728   */\n      tag_312\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9738:9810   */\n      tag_430\n        /* \"#utility.yul\":9806:9808   */\n      0x20\n        /* \"#utility.yul\":9795:9804   */\n      dup4\n        /* \"#utility.yul\":9791:9809   */\n      add\n        /* \"#utility.yul\":9782:9788   */\n      dup6\n        /* \"#utility.yul\":9738:9810   */\n      tag_312\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9820:9892   */\n      tag_431\n        /* \"#utility.yul\":9888:9890   */\n      0x40\n        /* \"#utility.yul\":9877:9886   */\n      dup4\n        /* \"#utility.yul\":9873:9891   */\n      add\n        /* \"#utility.yul\":9864:9870   */\n      dup5\n        /* \"#utility.yul\":9820:9892   */\n      tag_293\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9457:9899   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9905:10021   */\n    tag_317:\n        /* \"#utility.yul\":9975:9996   */\n      tag_433\n        /* \"#utility.yul\":9990:9995   */\n      dup2\n        /* \"#utility.yul\":9975:9996   */\n      tag_308\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9968:9973   */\n      dup2\n        /* \"#utility.yul\":9965:9997   */\n      eq\n        /* \"#utility.yul\":9955:10015   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":10011:10012   */\n      0x00\n        /* \"#utility.yul\":10008:10009   */\n      dup1\n        /* \"#utility.yul\":10001:10013   */\n      revert\n        /* \"#utility.yul\":9955:10015   */\n    tag_434:\n        /* \"#utility.yul\":9905:10021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10164   */\n    tag_318:\n        /* \"#utility.yul\":10081:10086   */\n      0x00\n        /* \"#utility.yul\":10112:10118   */\n      dup2\n        /* \"#utility.yul\":10106:10119   */\n      mload\n        /* \"#utility.yul\":10097:10119   */\n      swap1\n      pop\n        /* \"#utility.yul\":10128:10158   */\n      tag_436\n        /* \"#utility.yul\":10152:10157   */\n      dup2\n        /* \"#utility.yul\":10128:10158   */\n      tag_317\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10027:10164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10170:10515   */\n    tag_186:\n        /* \"#utility.yul\":10237:10243   */\n      0x00\n        /* \"#utility.yul\":10286:10288   */\n      0x20\n        /* \"#utility.yul\":10274:10283   */\n      dup3\n        /* \"#utility.yul\":10265:10272   */\n      dup5\n        /* \"#utility.yul\":10261:10284   */\n      sub\n        /* \"#utility.yul\":10257:10289   */\n      slt\n        /* \"#utility.yul\":10254:10373   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10292:10371   */\n      tag_439\n      tag_300\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10254:10373   */\n    tag_438:\n        /* \"#utility.yul\":10412:10413   */\n      0x00\n        /* \"#utility.yul\":10437:10498   */\n      tag_440\n        /* \"#utility.yul\":10490:10497   */\n      dup5\n        /* \"#utility.yul\":10481:10487   */\n      dup3\n        /* \"#utility.yul\":10470:10479   */\n      dup6\n        /* \"#utility.yul\":10466:10488   */\n      add\n        /* \"#utility.yul\":10437:10498   */\n      tag_318\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10427:10498   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10508   */\n      pop\n        /* \"#utility.yul\":10170:10515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10521:10853   */\n    tag_190:\n        /* \"#utility.yul\":10642:10646   */\n      0x00\n        /* \"#utility.yul\":10680:10682   */\n      0x40\n        /* \"#utility.yul\":10669:10678   */\n      dup3\n        /* \"#utility.yul\":10665:10683   */\n      add\n        /* \"#utility.yul\":10657:10683   */\n      swap1\n      pop\n        /* \"#utility.yul\":10693:10764   */\n      tag_442\n        /* \"#utility.yul\":10761:10762   */\n      0x00\n        /* \"#utility.yul\":10750:10759   */\n      dup4\n        /* \"#utility.yul\":10746:10763   */\n      add\n        /* \"#utility.yul\":10737:10743   */\n      dup6\n        /* \"#utility.yul\":10693:10764   */\n      tag_293\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10774:10846   */\n      tag_443\n        /* \"#utility.yul\":10842:10844   */\n      0x20\n        /* \"#utility.yul\":10831:10840   */\n      dup4\n        /* \"#utility.yul\":10827:10845   */\n      add\n        /* \"#utility.yul\":10818:10824   */\n      dup5\n        /* \"#utility.yul\":10774:10846   */\n      tag_293\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10521:10853   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10859:11191   */\n    tag_218:\n        /* \"#utility.yul\":10980:10984   */\n      0x00\n        /* \"#utility.yul\":11018:11020   */\n      0x40\n        /* \"#utility.yul\":11007:11016   */\n      dup3\n        /* \"#utility.yul\":11003:11021   */\n      add\n        /* \"#utility.yul\":10995:11021   */\n      swap1\n      pop\n        /* \"#utility.yul\":11031:11102   */\n      tag_445\n        /* \"#utility.yul\":11099:11100   */\n      0x00\n        /* \"#utility.yul\":11088:11097   */\n      dup4\n        /* \"#utility.yul\":11084:11101   */\n      add\n        /* \"#utility.yul\":11075:11081   */\n      dup6\n        /* \"#utility.yul\":11031:11102   */\n      tag_312\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11112:11184   */\n      tag_446\n        /* \"#utility.yul\":11180:11182   */\n      0x20\n        /* \"#utility.yul\":11169:11178   */\n      dup4\n        /* \"#utility.yul\":11165:11183   */\n      add\n        /* \"#utility.yul\":11156:11162   */\n      dup5\n        /* \"#utility.yul\":11112:11184   */\n      tag_293\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10859:11191   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11197:11639   */\n    tag_258:\n        /* \"#utility.yul\":11346:11350   */\n      0x00\n        /* \"#utility.yul\":11384:11386   */\n      0x60\n        /* \"#utility.yul\":11373:11382   */\n      dup3\n        /* \"#utility.yul\":11369:11387   */\n      add\n        /* \"#utility.yul\":11361:11387   */\n      swap1\n      pop\n        /* \"#utility.yul\":11397:11468   */\n      tag_448\n        /* \"#utility.yul\":11465:11466   */\n      0x00\n        /* \"#utility.yul\":11454:11463   */\n      dup4\n        /* \"#utility.yul\":11450:11467   */\n      add\n        /* \"#utility.yul\":11441:11447   */\n      dup7\n        /* \"#utility.yul\":11397:11468   */\n      tag_312\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11478:11550   */\n      tag_449\n        /* \"#utility.yul\":11546:11548   */\n      0x20\n        /* \"#utility.yul\":11535:11544   */\n      dup4\n        /* \"#utility.yul\":11531:11549   */\n      add\n        /* \"#utility.yul\":11522:11528   */\n      dup6\n        /* \"#utility.yul\":11478:11550   */\n      tag_293\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11560:11632   */\n      tag_450\n        /* \"#utility.yul\":11628:11630   */\n      0x40\n        /* \"#utility.yul\":11617:11626   */\n      dup4\n        /* \"#utility.yul\":11613:11631   */\n      add\n        /* \"#utility.yul\":11604:11610   */\n      dup5\n        /* \"#utility.yul\":11560:11632   */\n      tag_293\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11197:11639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11645:11836   */\n    tag_285:\n        /* \"#utility.yul\":11685:11688   */\n      0x00\n        /* \"#utility.yul\":11704:11724   */\n      tag_452\n        /* \"#utility.yul\":11722:11723   */\n      dup3\n        /* \"#utility.yul\":11704:11724   */\n      tag_292\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11699:11724   */\n      swap2\n      pop\n        /* \"#utility.yul\":11738:11758   */\n      tag_453\n        /* \"#utility.yul\":11756:11757   */\n      dup4\n        /* \"#utility.yul\":11738:11758   */\n      tag_292\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11733:11758   */\n      swap3\n      pop\n        /* \"#utility.yul\":11781:11782   */\n      dup3\n        /* \"#utility.yul\":11778:11779   */\n      dup3\n        /* \"#utility.yul\":11774:11783   */\n      add\n        /* \"#utility.yul\":11767:11783   */\n      swap1\n      pop\n        /* \"#utility.yul\":11802:11805   */\n      dup1\n        /* \"#utility.yul\":11799:11800   */\n      dup3\n        /* \"#utility.yul\":11796:11806   */\n      gt\n        /* \"#utility.yul\":11793:11829   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":11809:11827   */\n      tag_455\n      tag_315\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11793:11829   */\n    tag_454:\n        /* \"#utility.yul\":11645:11836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f372bcb9a5915b5b126e0de26a46c5c8cc18d8a7f701634d9975faa908eb93264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_358": {
									"entryPoint": null,
									"id": 358,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_988": {
									"entryPoint": null,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ERC20_$821_fromMemory": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$821": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$821": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9434:7",
										"nodeType": "YulBlock",
										"src": "0:9434:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "626:51:7",
													"nodeType": "YulBlock",
													"src": "626:51:7",
													"statements": [
														{
															"nativeSrc": "636:35:7",
															"nodeType": "YulAssignment",
															"src": "636:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:7"
																},
																"nativeSrc": "647:24:7",
																"nodeType": "YulFunctionCall",
																"src": "647:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$821",
												"nativeSrc": "568:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:7",
														"nodeType": "YulTypedName",
														"src": "608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:7",
														"nodeType": "YulTypedName",
														"src": "618:7:7",
														"type": ""
													}
												],
												"src": "568:109:7"
											},
											{
												"body": {
													"nativeSrc": "739:92:7",
													"nodeType": "YulBlock",
													"src": "739:92:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:7",
																"nodeType": "YulBlock",
																"src": "809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:7",
																					"nodeType": "YulLiteral",
																					"src": "818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:7"
																			},
																			"nativeSrc": "811:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:7"
																		},
																		"nativeSrc": "811:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$821",
																					"nativeSrc": "769:30:7",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:7"
																				},
																				"nativeSrc": "769:37:7",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:7"
																		},
																		"nativeSrc": "759:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																},
																"nativeSrc": "752:56:7",
																"nodeType": "YulFunctionCall",
																"src": "752:56:7"
															},
															"nativeSrc": "749:76:7",
															"nodeType": "YulIf",
															"src": "749:76:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$821",
												"nativeSrc": "683:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:7",
														"nodeType": "YulTypedName",
														"src": "732:5:7",
														"type": ""
													}
												],
												"src": "683:148:7"
											},
											{
												"body": {
													"nativeSrc": "913:93:7",
													"nodeType": "YulBlock",
													"src": "913:93:7",
													"statements": [
														{
															"nativeSrc": "923:22:7",
															"nodeType": "YulAssignment",
															"src": "923:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:7"
																},
																"nativeSrc": "932:13:7",
																"nodeType": "YulFunctionCall",
																"src": "932:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$821",
																	"nativeSrc": "954:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:7"
																},
																"nativeSrc": "954:46:7",
																"nodeType": "YulFunctionCall",
																"src": "954:46:7"
															},
															"nativeSrc": "954:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$821_fromMemory",
												"nativeSrc": "837:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:7",
														"nodeType": "YulTypedName",
														"src": "899:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:7",
														"nodeType": "YulTypedName",
														"src": "907:5:7",
														"type": ""
													}
												],
												"src": "837:169:7"
											},
											{
												"body": {
													"nativeSrc": "1101:28:7",
													"nodeType": "YulBlock",
													"src": "1101:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:7"
																},
																"nativeSrc": "1111:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1111:12:7"
															},
															"nativeSrc": "1111:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1111:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1012:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1012:117:7"
											},
											{
												"body": {
													"nativeSrc": "1224:28:7",
													"nodeType": "YulBlock",
													"src": "1224:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:7"
																},
																"nativeSrc": "1234:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1234:12:7"
															},
															"nativeSrc": "1234:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1234:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1135:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1135:117:7"
											},
											{
												"body": {
													"nativeSrc": "1306:54:7",
													"nodeType": "YulBlock",
													"src": "1306:54:7",
													"statements": [
														{
															"nativeSrc": "1316:38:7",
															"nodeType": "YulAssignment",
															"src": "1316:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1334:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:7"
																		},
																		"nativeSrc": "1330:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1330:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1350:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1346:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nativeSrc": "1346:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:7"
																},
																"nativeSrc": "1326:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1326:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1258:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:7",
														"nodeType": "YulTypedName",
														"src": "1289:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1299:6:7",
														"nodeType": "YulTypedName",
														"src": "1299:6:7",
														"type": ""
													}
												],
												"src": "1258:102:7"
											},
											{
												"body": {
													"nativeSrc": "1394:152:7",
													"nodeType": "YulBlock",
													"src": "1394:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1411:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1411:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1414:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1414:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:6:7"
																},
																"nativeSrc": "1404:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1404:88:7"
															},
															"nativeSrc": "1404:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1404:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1532:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:7"
																},
																"nativeSrc": "1525:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1525:15:7"
															},
															"nativeSrc": "1525:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1525:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1366:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1366:180:7"
											},
											{
												"body": {
													"nativeSrc": "1595:238:7",
													"nodeType": "YulBlock",
													"src": "1595:238:7",
													"statements": [
														{
															"nativeSrc": "1605:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1605:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1657:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1657:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1635:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1635:21:7"
																		},
																		"nativeSrc": "1635:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:7"
																},
																"nativeSrc": "1623:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1623:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1609:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1609:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1774:22:7",
																"nodeType": "YulBlock",
																"src": "1774:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1776:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1776:16:7"
																			},
																			"nativeSrc": "1776:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1776:18:7"
																		},
																		"nativeSrc": "1776:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1717:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1717:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1729:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1729:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1714:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1714:2:7"
																		},
																		"nativeSrc": "1714:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1714:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1753:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1753:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1765:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1750:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1750:2:7"
																		},
																		"nativeSrc": "1750:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1750:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1711:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1711:2:7"
																},
																"nativeSrc": "1711:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1711:62:7"
															},
															"nativeSrc": "1708:88:7",
															"nodeType": "YulIf",
															"src": "1708:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1812:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1816:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1816:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:7"
																},
																"nativeSrc": "1805:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1805:22:7"
															},
															"nativeSrc": "1805:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1805:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1552:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1581:6:7",
														"nodeType": "YulTypedName",
														"src": "1581:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1589:4:7",
														"nodeType": "YulTypedName",
														"src": "1589:4:7",
														"type": ""
													}
												],
												"src": "1552:281:7"
											},
											{
												"body": {
													"nativeSrc": "1880:88:7",
													"nodeType": "YulBlock",
													"src": "1880:88:7",
													"statements": [
														{
															"nativeSrc": "1890:30:7",
															"nodeType": "YulAssignment",
															"src": "1890:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1900:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1900:18:7"
																},
																"nativeSrc": "1900:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1900:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1890:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1929:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1929:19:7"
																},
																"nativeSrc": "1929:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1929:33:7"
															},
															"nativeSrc": "1929:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1929:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1839:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1864:4:7",
														"nodeType": "YulTypedName",
														"src": "1864:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1873:6:7",
														"nodeType": "YulTypedName",
														"src": "1873:6:7",
														"type": ""
													}
												],
												"src": "1839:129:7"
											},
											{
												"body": {
													"nativeSrc": "2041:241:7",
													"nodeType": "YulBlock",
													"src": "2041:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2146:22:7",
																"nodeType": "YulBlock",
																"src": "2146:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2148:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2148:16:7"
																			},
																			"nativeSrc": "2148:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:18:7"
																		},
																		"nativeSrc": "2148:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2118:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2126:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2126:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2115:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:7"
																},
																"nativeSrc": "2115:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2115:30:7"
															},
															"nativeSrc": "2112:56:7",
															"nodeType": "YulIf",
															"src": "2112:56:7"
														},
														{
															"nativeSrc": "2178:37:7",
															"nodeType": "YulAssignment",
															"src": "2178:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2208:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2186:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2186:21:7"
																},
																"nativeSrc": "2186:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2186:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2178:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2178:4:7"
																}
															]
														},
														{
															"nativeSrc": "2252:23:7",
															"nodeType": "YulAssignment",
															"src": "2252:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2264:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2264:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:3:7"
																},
																"nativeSrc": "2260:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2252:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1974:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2025:6:7",
														"nodeType": "YulTypedName",
														"src": "2025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2036:4:7",
														"nodeType": "YulTypedName",
														"src": "2036:4:7",
														"type": ""
													}
												],
												"src": "1974:308:7"
											},
											{
												"body": {
													"nativeSrc": "2350:184:7",
													"nodeType": "YulBlock",
													"src": "2350:184:7",
													"statements": [
														{
															"nativeSrc": "2360:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2360:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2369:1:7",
																"nodeType": "YulLiteral",
																"src": "2369:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2364:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2364:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2429:63:7",
																"nodeType": "YulBlock",
																"src": "2429:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2454:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2454:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2459:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2459:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2450:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2450:3:7"
																					},
																					"nativeSrc": "2450:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2450:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2473:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2473:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2478:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2478:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2469:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2469:3:7"
																							},
																							"nativeSrc": "2469:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2469:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2463:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2463:5:7"
																					},
																					"nativeSrc": "2463:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2463:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2443:6:7"
																			},
																			"nativeSrc": "2443:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2443:39:7"
																		},
																		"nativeSrc": "2443:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2390:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:2:7"
																},
																"nativeSrc": "2387:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:13:7"
															},
															"nativeSrc": "2379:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2401:19:7",
																"nodeType": "YulBlock",
																"src": "2401:19:7",
																"statements": [
																	{
																		"nativeSrc": "2403:15:7",
																		"nodeType": "YulAssignment",
																		"src": "2403:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2412:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2412:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2415:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2415:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2408:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2408:3:7"
																			},
																			"nativeSrc": "2408:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2408:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2403:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2403:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2383:3:7",
																"nodeType": "YulBlock",
																"src": "2383:3:7",
																"statements": []
															},
															"src": "2379:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2512:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2512:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2517:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:7"
																		},
																		"nativeSrc": "2508:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2508:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2526:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:7"
																},
																"nativeSrc": "2501:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2501:27:7"
															},
															"nativeSrc": "2501:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2501:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2288:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2332:3:7",
														"nodeType": "YulTypedName",
														"src": "2332:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2337:3:7",
														"nodeType": "YulTypedName",
														"src": "2337:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2342:6:7",
														"nodeType": "YulTypedName",
														"src": "2342:6:7",
														"type": ""
													}
												],
												"src": "2288:246:7"
											},
											{
												"body": {
													"nativeSrc": "2635:339:7",
													"nodeType": "YulBlock",
													"src": "2635:339:7",
													"statements": [
														{
															"nativeSrc": "2645:75:7",
															"nodeType": "YulAssignment",
															"src": "2645:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2712:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2712:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2670:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2670:41:7"
																		},
																		"nativeSrc": "2670:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2654:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2654:15:7"
																},
																"nativeSrc": "2654:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2654:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2645:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2645:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2736:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2736:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2743:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2743:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:7"
																},
																"nativeSrc": "2729:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2729:21:7"
															},
															"nativeSrc": "2729:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2729:21:7"
														},
														{
															"nativeSrc": "2759:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2759:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2774:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2774:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2781:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2781:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2770:3:7"
																},
																"nativeSrc": "2770:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2770:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2763:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2763:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2824:83:7",
																"nodeType": "YulBlock",
																"src": "2824:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2826:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2826:77:7"
																			},
																			"nativeSrc": "2826:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:79:7"
																		},
																		"nativeSrc": "2826:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2805:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2805:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2810:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2810:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2801:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2801:3:7"
																		},
																		"nativeSrc": "2801:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2819:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2819:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2798:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2798:2:7"
																},
																"nativeSrc": "2798:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2798:25:7"
															},
															"nativeSrc": "2795:112:7",
															"nodeType": "YulIf",
															"src": "2795:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2951:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2956:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2961:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2961:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2916:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2916:34:7"
																},
																"nativeSrc": "2916:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2916:52:7"
															},
															"nativeSrc": "2916:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2916:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2540:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2608:3:7",
														"nodeType": "YulTypedName",
														"src": "2608:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2613:6:7",
														"nodeType": "YulTypedName",
														"src": "2613:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2621:3:7",
														"nodeType": "YulTypedName",
														"src": "2621:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2629:5:7",
														"nodeType": "YulTypedName",
														"src": "2629:5:7",
														"type": ""
													}
												],
												"src": "2540:434:7"
											},
											{
												"body": {
													"nativeSrc": "3067:282:7",
													"nodeType": "YulBlock",
													"src": "3067:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3116:83:7",
																"nodeType": "YulBlock",
																"src": "3116:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3118:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3118:77:7"
																			},
																			"nativeSrc": "3118:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3118:79:7"
																		},
																		"nativeSrc": "3118:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3118:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3095:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3095:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3103:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3103:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3091:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:7"
																				},
																				"nativeSrc": "3091:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3110:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3110:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3087:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:7"
																		},
																		"nativeSrc": "3087:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3087:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:7"
																},
																"nativeSrc": "3080:35:7",
																"nodeType": "YulFunctionCall",
																"src": "3080:35:7"
															},
															"nativeSrc": "3077:122:7",
															"nodeType": "YulIf",
															"src": "3077:122:7"
														},
														{
															"nativeSrc": "3208:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3208:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3228:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3228:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3222:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3222:5:7"
																},
																"nativeSrc": "3222:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3222:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3212:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3212:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3244:99:7",
															"nodeType": "YulAssignment",
															"src": "3244:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3316:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3316:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3324:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:7"
																		},
																		"nativeSrc": "3312:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3331:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3331:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3339:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3339:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3253:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3253:58:7"
																},
																"nativeSrc": "3253:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3253:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3244:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3244:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2994:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3045:6:7",
														"nodeType": "YulTypedName",
														"src": "3045:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3053:3:7",
														"nodeType": "YulTypedName",
														"src": "3053:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3061:5:7",
														"nodeType": "YulTypedName",
														"src": "3061:5:7",
														"type": ""
													}
												],
												"src": "2994:355:7"
											},
											{
												"body": {
													"nativeSrc": "3499:891:7",
													"nodeType": "YulBlock",
													"src": "3499:891:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:83:7",
																"nodeType": "YulBlock",
																"src": "3545:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3547:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3547:77:7"
																			},
																			"nativeSrc": "3547:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:79:7"
																		},
																		"nativeSrc": "3547:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3516:3:7"
																		},
																		"nativeSrc": "3516:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3516:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3541:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3541:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3512:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:7"
																},
																"nativeSrc": "3512:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3512:32:7"
															},
															"nativeSrc": "3509:119:7",
															"nodeType": "YulIf",
															"src": "3509:119:7"
														},
														{
															"nativeSrc": "3638:141:7",
															"nodeType": "YulBlock",
															"src": "3638:141:7",
															"statements": [
																{
																	"nativeSrc": "3653:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3653:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3657:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3657:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3682:87:7",
																	"nodeType": "YulAssignment",
																	"src": "3682:87:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3741:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3741:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3752:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3752:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3737:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3737:3:7"
																				},
																				"nativeSrc": "3737:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3737:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3761:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$821_fromMemory",
																			"nativeSrc": "3692:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3692:44:7"
																		},
																		"nativeSrc": "3692:77:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:77:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3682:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3682:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3789:292:7",
															"nodeType": "YulBlock",
															"src": "3789:292:7",
															"statements": [
																{
																	"nativeSrc": "3804:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3804:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3828:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3828:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3839:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3824:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3824:3:7"
																				},
																				"nativeSrc": "3824:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3824:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3818:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3818:5:7"
																		},
																		"nativeSrc": "3818:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3818:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3808:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3808:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3890:83:7",
																		"nodeType": "YulBlock",
																		"src": "3890:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3892:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3892:77:7"
																					},
																					"nativeSrc": "3892:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3892:79:7"
																				},
																				"nativeSrc": "3892:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3892:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3862:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3870:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3870:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3859:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3859:2:7"
																		},
																		"nativeSrc": "3859:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:30:7"
																	},
																	"nativeSrc": "3856:117:7",
																	"nodeType": "YulIf",
																	"src": "3856:117:7"
																},
																{
																	"nativeSrc": "3987:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3987:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4043:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4043:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4054:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4054:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4039:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4039:3:7"
																				},
																				"nativeSrc": "4039:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4039:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4063:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4063:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3997:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3997:41:7"
																		},
																		"nativeSrc": "3997:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3997:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3987:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3987:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4091:292:7",
															"nodeType": "YulBlock",
															"src": "4091:292:7",
															"statements": [
																{
																	"nativeSrc": "4106:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4106:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4130:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4130:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4141:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4141:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4126:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4126:3:7"
																				},
																				"nativeSrc": "4126:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4126:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4120:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4120:5:7"
																		},
																		"nativeSrc": "4120:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4110:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4110:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4192:83:7",
																		"nodeType": "YulBlock",
																		"src": "4192:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4194:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4194:77:7"
																					},
																					"nativeSrc": "4194:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4194:79:7"
																				},
																				"nativeSrc": "4194:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4194:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4164:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4172:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4172:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4161:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4161:2:7"
																		},
																		"nativeSrc": "4161:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4161:30:7"
																	},
																	"nativeSrc": "4158:117:7",
																	"nodeType": "YulIf",
																	"src": "4158:117:7"
																},
																{
																	"nativeSrc": "4289:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4289:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4345:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4345:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4356:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4356:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4341:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:7"
																				},
																				"nativeSrc": "4341:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4365:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4365:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4299:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4299:41:7"
																		},
																		"nativeSrc": "4299:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4299:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4289:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4289:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3355:1035:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3453:9:7",
														"nodeType": "YulTypedName",
														"src": "3453:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3464:7:7",
														"nodeType": "YulTypedName",
														"src": "3464:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3476:6:7",
														"nodeType": "YulTypedName",
														"src": "3476:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3484:6:7",
														"nodeType": "YulTypedName",
														"src": "3484:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3492:6:7",
														"nodeType": "YulTypedName",
														"src": "3492:6:7",
														"type": ""
													}
												],
												"src": "3355:1035:7"
											},
											{
												"body": {
													"nativeSrc": "4455:40:7",
													"nodeType": "YulBlock",
													"src": "4455:40:7",
													"statements": [
														{
															"nativeSrc": "4466:22:7",
															"nodeType": "YulAssignment",
															"src": "4466:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4482:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4482:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4476:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:5:7"
																},
																"nativeSrc": "4476:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4476:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4396:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4438:5:7",
														"nodeType": "YulTypedName",
														"src": "4438:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4448:6:7",
														"nodeType": "YulTypedName",
														"src": "4448:6:7",
														"type": ""
													}
												],
												"src": "4396:99:7"
											},
											{
												"body": {
													"nativeSrc": "4529:152:7",
													"nodeType": "YulBlock",
													"src": "4529:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4546:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4549:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4539:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4539:6:7"
																},
																"nativeSrc": "4539:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4539:88:7"
															},
															"nativeSrc": "4539:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4539:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4643:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4643:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4646:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4646:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4636:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:7"
																},
																"nativeSrc": "4636:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4636:15:7"
															},
															"nativeSrc": "4636:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4636:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4670:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4670:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:7"
																},
																"nativeSrc": "4660:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4660:15:7"
															},
															"nativeSrc": "4660:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4660:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4501:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4501:180:7"
											},
											{
												"body": {
													"nativeSrc": "4738:269:7",
													"nodeType": "YulBlock",
													"src": "4738:269:7",
													"statements": [
														{
															"nativeSrc": "4748:22:7",
															"nodeType": "YulAssignment",
															"src": "4748:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4762:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4762:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4768:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4768:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4758:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:7"
																},
																"nativeSrc": "4758:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4758:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4748:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:7"
																}
															]
														},
														{
															"nativeSrc": "4779:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4779:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4809:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4809:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4815:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:7"
																},
																"nativeSrc": "4805:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4805:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4783:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4783:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4856:51:7",
																"nodeType": "YulBlock",
																"src": "4856:51:7",
																"statements": [
																	{
																		"nativeSrc": "4870:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4870:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4884:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4884:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4892:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4892:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4880:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4880:3:7"
																			},
																			"nativeSrc": "4880:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4880:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4870:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4870:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4836:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4836:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:7"
																},
																"nativeSrc": "4829:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4829:26:7"
															},
															"nativeSrc": "4826:81:7",
															"nodeType": "YulIf",
															"src": "4826:81:7"
														},
														{
															"body": {
																"nativeSrc": "4959:42:7",
																"nodeType": "YulBlock",
																"src": "4959:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4973:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4973:16:7"
																			},
																			"nativeSrc": "4973:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4973:18:7"
																		},
																		"nativeSrc": "4973:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4973:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4923:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4923:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4946:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4954:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4954:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4943:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4943:2:7"
																		},
																		"nativeSrc": "4943:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4943:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4920:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4920:2:7"
																},
																"nativeSrc": "4920:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4920:38:7"
															},
															"nativeSrc": "4917:84:7",
															"nodeType": "YulIf",
															"src": "4917:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4687:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4731:6:7",
														"nodeType": "YulTypedName",
														"src": "4731:6:7",
														"type": ""
													}
												],
												"src": "4687:320:7"
											},
											{
												"body": {
													"nativeSrc": "5067:87:7",
													"nodeType": "YulBlock",
													"src": "5067:87:7",
													"statements": [
														{
															"nativeSrc": "5077:11:7",
															"nodeType": "YulAssignment",
															"src": "5077:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5085:3:7",
																"nodeType": "YulIdentifier",
																"src": "5085:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5077:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5077:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5105:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5105:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5108:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5108:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5098:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5098:6:7"
																},
																"nativeSrc": "5098:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5098:14:7"
															},
															"nativeSrc": "5098:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5098:14:7"
														},
														{
															"nativeSrc": "5121:26:7",
															"nodeType": "YulAssignment",
															"src": "5121:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5139:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5142:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5142:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5129:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5129:9:7"
																},
																"nativeSrc": "5129:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5129:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5121:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5121:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5013:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5054:3:7",
														"nodeType": "YulTypedName",
														"src": "5054:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5062:4:7",
														"nodeType": "YulTypedName",
														"src": "5062:4:7",
														"type": ""
													}
												],
												"src": "5013:141:7"
											},
											{
												"body": {
													"nativeSrc": "5204:49:7",
													"nodeType": "YulBlock",
													"src": "5204:49:7",
													"statements": [
														{
															"nativeSrc": "5214:33:7",
															"nodeType": "YulAssignment",
															"src": "5214:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5232:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5232:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5239:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5239:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:7"
																		},
																		"nativeSrc": "5228:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5228:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5244:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5224:3:7"
																},
																"nativeSrc": "5224:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5224:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5214:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5160:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5187:5:7",
														"nodeType": "YulTypedName",
														"src": "5187:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5197:6:7",
														"nodeType": "YulTypedName",
														"src": "5197:6:7",
														"type": ""
													}
												],
												"src": "5160:93:7"
											},
											{
												"body": {
													"nativeSrc": "5312:54:7",
													"nodeType": "YulBlock",
													"src": "5312:54:7",
													"statements": [
														{
															"nativeSrc": "5322:37:7",
															"nodeType": "YulAssignment",
															"src": "5322:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5347:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5353:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5353:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5343:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5343:3:7"
																},
																"nativeSrc": "5343:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5343:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5322:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5322:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5259:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5287:4:7",
														"nodeType": "YulTypedName",
														"src": "5287:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5293:5:7",
														"nodeType": "YulTypedName",
														"src": "5293:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5303:8:7",
														"nodeType": "YulTypedName",
														"src": "5303:8:7",
														"type": ""
													}
												],
												"src": "5259:107:7"
											},
											{
												"body": {
													"nativeSrc": "5448:317:7",
													"nodeType": "YulBlock",
													"src": "5448:317:7",
													"statements": [
														{
															"nativeSrc": "5458:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5458:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5479:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5479:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5491:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5491:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5475:3:7"
																},
																"nativeSrc": "5475:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5475:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5462:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5462:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5502:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5502:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5533:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5533:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5544:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5544:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5514:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5514:18:7"
																},
																"nativeSrc": "5514:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5514:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5506:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5506:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5620:51:7",
															"nodeType": "YulAssignment",
															"src": "5620:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5651:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5651:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5662:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5662:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5632:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5632:18:7"
																},
																"nativeSrc": "5632:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5632:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5620:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5620:8:7"
																}
															]
														},
														{
															"nativeSrc": "5680:30:7",
															"nodeType": "YulAssignment",
															"src": "5680:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5693:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5693:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5704:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5704:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:7"
																		},
																		"nativeSrc": "5700:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:7"
																},
																"nativeSrc": "5689:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5689:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5680:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5680:5:7"
																}
															]
														},
														{
															"nativeSrc": "5719:40:7",
															"nodeType": "YulAssignment",
															"src": "5719:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5732:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5732:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5743:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5743:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5753:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5753:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5739:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:7"
																		},
																		"nativeSrc": "5739:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5729:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5729:2:7"
																},
																"nativeSrc": "5729:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5729:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5372:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5409:5:7",
														"nodeType": "YulTypedName",
														"src": "5409:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5416:10:7",
														"nodeType": "YulTypedName",
														"src": "5416:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5428:8:7",
														"nodeType": "YulTypedName",
														"src": "5428:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5441:6:7",
														"nodeType": "YulTypedName",
														"src": "5441:6:7",
														"type": ""
													}
												],
												"src": "5372:393:7"
											},
											{
												"body": {
													"nativeSrc": "5816:32:7",
													"nodeType": "YulBlock",
													"src": "5816:32:7",
													"statements": [
														{
															"nativeSrc": "5826:16:7",
															"nodeType": "YulAssignment",
															"src": "5826:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5837:5:7",
																"nodeType": "YulIdentifier",
																"src": "5837:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5826:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5826:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5771:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5798:5:7",
														"nodeType": "YulTypedName",
														"src": "5798:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5808:7:7",
														"nodeType": "YulTypedName",
														"src": "5808:7:7",
														"type": ""
													}
												],
												"src": "5771:77:7"
											},
											{
												"body": {
													"nativeSrc": "5886:28:7",
													"nodeType": "YulBlock",
													"src": "5886:28:7",
													"statements": [
														{
															"nativeSrc": "5896:12:7",
															"nodeType": "YulAssignment",
															"src": "5896:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5903:5:7",
																"nodeType": "YulIdentifier",
																"src": "5903:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5854:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5872:5:7",
														"nodeType": "YulTypedName",
														"src": "5872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5882:3:7",
														"nodeType": "YulTypedName",
														"src": "5882:3:7",
														"type": ""
													}
												],
												"src": "5854:60:7"
											},
											{
												"body": {
													"nativeSrc": "5980:82:7",
													"nodeType": "YulBlock",
													"src": "5980:82:7",
													"statements": [
														{
															"nativeSrc": "5990:66:7",
															"nodeType": "YulAssignment",
															"src": "5990:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6048:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6048:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6030:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6030:17:7"
																				},
																				"nativeSrc": "6030:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6030:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6021:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6021:8:7"
																		},
																		"nativeSrc": "6021:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6021:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6003:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6003:17:7"
																},
																"nativeSrc": "6003:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6003:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5990:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5990:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5920:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5960:5:7",
														"nodeType": "YulTypedName",
														"src": "5960:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5970:9:7",
														"nodeType": "YulTypedName",
														"src": "5970:9:7",
														"type": ""
													}
												],
												"src": "5920:142:7"
											},
											{
												"body": {
													"nativeSrc": "6115:28:7",
													"nodeType": "YulBlock",
													"src": "6115:28:7",
													"statements": [
														{
															"nativeSrc": "6125:12:7",
															"nodeType": "YulAssignment",
															"src": "6125:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6132:5:7",
																"nodeType": "YulIdentifier",
																"src": "6132:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6125:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6125:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6068:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6101:5:7",
														"nodeType": "YulTypedName",
														"src": "6101:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6111:3:7",
														"nodeType": "YulTypedName",
														"src": "6111:3:7",
														"type": ""
													}
												],
												"src": "6068:75:7"
											},
											{
												"body": {
													"nativeSrc": "6225:193:7",
													"nodeType": "YulBlock",
													"src": "6225:193:7",
													"statements": [
														{
															"nativeSrc": "6235:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6235:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6290:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6290:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6259:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6259:30:7"
																},
																"nativeSrc": "6259:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6259:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6239:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6239:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6314:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6314:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6354:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6354:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6348:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6348:5:7"
																				},
																				"nativeSrc": "6348:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6348:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6361:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6361:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6393:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6393:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6369:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6369:23:7"
																				},
																				"nativeSrc": "6369:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6369:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6320:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6320:27:7"
																		},
																		"nativeSrc": "6320:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6320:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:7"
																},
																"nativeSrc": "6307:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6307:105:7"
															},
															"nativeSrc": "6307:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6307:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6149:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6202:4:7",
														"nodeType": "YulTypedName",
														"src": "6202:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6208:6:7",
														"nodeType": "YulTypedName",
														"src": "6208:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6216:7:7",
														"nodeType": "YulTypedName",
														"src": "6216:7:7",
														"type": ""
													}
												],
												"src": "6149:269:7"
											},
											{
												"body": {
													"nativeSrc": "6473:24:7",
													"nodeType": "YulBlock",
													"src": "6473:24:7",
													"statements": [
														{
															"nativeSrc": "6483:8:7",
															"nodeType": "YulAssignment",
															"src": "6483:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6490:1:7",
																"nodeType": "YulLiteral",
																"src": "6490:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6424:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6469:3:7",
														"nodeType": "YulTypedName",
														"src": "6469:3:7",
														"type": ""
													}
												],
												"src": "6424:73:7"
											},
											{
												"body": {
													"nativeSrc": "6556:136:7",
													"nodeType": "YulBlock",
													"src": "6556:136:7",
													"statements": [
														{
															"nativeSrc": "6566:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6566:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6580:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6580:30:7"
																},
																"nativeSrc": "6580:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6580:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6570:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6570:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6665:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6665:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6671:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6671:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6679:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6679:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6621:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6621:43:7"
																},
																"nativeSrc": "6621:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6621:65:7"
															},
															"nativeSrc": "6621:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6621:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6503:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6542:4:7",
														"nodeType": "YulTypedName",
														"src": "6542:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6548:6:7",
														"nodeType": "YulTypedName",
														"src": "6548:6:7",
														"type": ""
													}
												],
												"src": "6503:189:7"
											},
											{
												"body": {
													"nativeSrc": "6748:136:7",
													"nodeType": "YulBlock",
													"src": "6748:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6815:63:7",
																"nodeType": "YulBlock",
																"src": "6815:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6859:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6859:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6866:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6866:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6829:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6829:29:7"
																			},
																			"nativeSrc": "6829:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6829:39:7"
																		},
																		"nativeSrc": "6829:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6829:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6768:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6768:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6775:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6775:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6765:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6765:2:7"
																},
																"nativeSrc": "6765:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6765:14:7"
															},
															"nativeSrc": "6758:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6780:26:7",
																"nodeType": "YulBlock",
																"src": "6780:26:7",
																"statements": [
																	{
																		"nativeSrc": "6782:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6782:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6795:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6795:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6802:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6802:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6791:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6791:3:7"
																			},
																			"nativeSrc": "6791:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6791:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6782:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6782:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6762:2:7",
																"nodeType": "YulBlock",
																"src": "6762:2:7",
																"statements": []
															},
															"src": "6758:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6698:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6736:5:7",
														"nodeType": "YulTypedName",
														"src": "6736:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6743:3:7",
														"nodeType": "YulTypedName",
														"src": "6743:3:7",
														"type": ""
													}
												],
												"src": "6698:186:7"
											},
											{
												"body": {
													"nativeSrc": "6969:464:7",
													"nodeType": "YulBlock",
													"src": "6969:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6995:431:7",
																"nodeType": "YulBlock",
																"src": "6995:431:7",
																"statements": [
																	{
																		"nativeSrc": "7009:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7009:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7057:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7057:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7025:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7025:31:7"
																			},
																			"nativeSrc": "7025:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7025:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7013:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7013:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7076:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7076:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7099:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7099:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7127:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7127:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7109:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7109:17:7"
																					},
																					"nativeSrc": "7109:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7109:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7095:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7095:3:7"
																			},
																			"nativeSrc": "7095:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7095:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7080:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7080:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7296:27:7",
																			"nodeType": "YulBlock",
																			"src": "7296:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7298:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7298:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7313:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7313:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7298:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7298:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7280:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7280:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7292:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7292:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7277:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7277:2:7"
																			},
																			"nativeSrc": "7277:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7277:18:7"
																		},
																		"nativeSrc": "7274:49:7",
																		"nodeType": "YulIf",
																		"src": "7274:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7365:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7365:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7382:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7382:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7410:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7410:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7392:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7392:17:7"
																							},
																							"nativeSrc": "7392:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7392:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7378:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7378:3:7"
																					},
																					"nativeSrc": "7378:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7378:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7336:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7336:28:7"
																			},
																			"nativeSrc": "7336:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7336:80:7"
																		},
																		"nativeSrc": "7336:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7336:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6986:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6986:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6991:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6991:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6983:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6983:2:7"
																},
																"nativeSrc": "6983:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6983:11:7"
															},
															"nativeSrc": "6980:446:7",
															"nodeType": "YulIf",
															"src": "6980:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6890:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6945:5:7",
														"nodeType": "YulTypedName",
														"src": "6945:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6952:3:7",
														"nodeType": "YulTypedName",
														"src": "6952:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6957:10:7",
														"nodeType": "YulTypedName",
														"src": "6957:10:7",
														"type": ""
													}
												],
												"src": "6890:543:7"
											},
											{
												"body": {
													"nativeSrc": "7502:54:7",
													"nodeType": "YulBlock",
													"src": "7502:54:7",
													"statements": [
														{
															"nativeSrc": "7512:37:7",
															"nodeType": "YulAssignment",
															"src": "7512:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7537:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7537:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7543:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7543:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7533:3:7"
																},
																"nativeSrc": "7533:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7533:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7512:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7512:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7439:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7477:4:7",
														"nodeType": "YulTypedName",
														"src": "7477:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7483:5:7",
														"nodeType": "YulTypedName",
														"src": "7483:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7493:8:7",
														"nodeType": "YulTypedName",
														"src": "7493:8:7",
														"type": ""
													}
												],
												"src": "7439:117:7"
											},
											{
												"body": {
													"nativeSrc": "7613:118:7",
													"nodeType": "YulBlock",
													"src": "7613:118:7",
													"statements": [
														{
															"nativeSrc": "7623:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7672:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7672:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7675:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7675:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7668:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7668:3:7"
																				},
																				"nativeSrc": "7668:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7668:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7687:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7687:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7683:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7683:3:7"
																				},
																				"nativeSrc": "7683:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7683:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7639:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7639:28:7"
																		},
																		"nativeSrc": "7639:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7639:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:7"
																},
																"nativeSrc": "7635:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7635:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7627:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7627:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7700:25:7",
															"nodeType": "YulAssignment",
															"src": "7700:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7714:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7714:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7720:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7720:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7710:3:7"
																},
																"nativeSrc": "7710:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7710:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7700:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7562:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7590:4:7",
														"nodeType": "YulTypedName",
														"src": "7590:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7596:5:7",
														"nodeType": "YulTypedName",
														"src": "7596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7606:6:7",
														"nodeType": "YulTypedName",
														"src": "7606:6:7",
														"type": ""
													}
												],
												"src": "7562:169:7"
											},
											{
												"body": {
													"nativeSrc": "7817:214:7",
													"nodeType": "YulBlock",
													"src": "7817:214:7",
													"statements": [
														{
															"nativeSrc": "7950:37:7",
															"nodeType": "YulAssignment",
															"src": "7950:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7977:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7977:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7983:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7958:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7958:18:7"
																},
																"nativeSrc": "7958:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7958:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7950:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:7"
																}
															]
														},
														{
															"nativeSrc": "7996:29:7",
															"nodeType": "YulAssignment",
															"src": "7996:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8007:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8007:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8017:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8017:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8020:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:7"
																		},
																		"nativeSrc": "8013:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8013:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8004:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8004:2:7"
																},
																"nativeSrc": "8004:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8004:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7996:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7736:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7798:4:7",
														"nodeType": "YulTypedName",
														"src": "7798:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7804:3:7",
														"nodeType": "YulTypedName",
														"src": "7804:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7812:4:7",
														"nodeType": "YulTypedName",
														"src": "7812:4:7",
														"type": ""
													}
												],
												"src": "7736:295:7"
											},
											{
												"body": {
													"nativeSrc": "8128:1303:7",
													"nodeType": "YulBlock",
													"src": "8128:1303:7",
													"statements": [
														{
															"nativeSrc": "8139:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8139:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8186:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8186:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8153:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8153:32:7"
																},
																"nativeSrc": "8153:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8153:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8143:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8143:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8275:22:7",
																"nodeType": "YulBlock",
																"src": "8275:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8277:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8277:16:7"
																			},
																			"nativeSrc": "8277:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8277:18:7"
																		},
																		"nativeSrc": "8277:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8277:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8247:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8247:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8255:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8255:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8244:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8244:2:7"
																},
																"nativeSrc": "8244:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8244:30:7"
															},
															"nativeSrc": "8241:56:7",
															"nodeType": "YulIf",
															"src": "8241:56:7"
														},
														{
															"nativeSrc": "8307:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8307:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8353:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8353:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8347:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8347:5:7"
																		},
																		"nativeSrc": "8347:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8347:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8321:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8321:25:7"
																},
																"nativeSrc": "8321:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8321:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8311:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8311:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8452:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8452:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8458:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8458:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8466:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8466:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8406:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8406:45:7"
																},
																"nativeSrc": "8406:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8406:67:7"
															},
															"nativeSrc": "8406:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8406:67:7"
														},
														{
															"nativeSrc": "8483:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8483:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8500:1:7",
																"nodeType": "YulLiteral",
																"src": "8500:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8487:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8487:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8511:17:7",
															"nodeType": "YulAssignment",
															"src": "8511:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8524:4:7",
																"nodeType": "YulLiteral",
																"src": "8524:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8511:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8511:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8575:611:7",
																		"nodeType": "YulBlock",
																		"src": "8575:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8589:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8589:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8608:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8608:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8620:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8620:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8616:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8616:3:7"
																							},
																							"nativeSrc": "8616:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8616:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8604:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8604:3:7"
																					},
																					"nativeSrc": "8604:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8604:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8593:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8593:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8640:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8640:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8686:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8686:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8654:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8654:31:7"
																					},
																					"nativeSrc": "8654:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8654:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8644:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8644:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8704:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8704:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8713:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8713:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8708:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8708:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8772:163:7",
																					"nodeType": "YulBlock",
																					"src": "8772:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8797:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8797:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8815:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8815:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8820:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8820:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8811:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8811:3:7"
																												},
																												"nativeSrc": "8811:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8811:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8805:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8805:5:7"
																										},
																										"nativeSrc": "8805:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8805:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8790:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8790:6:7"
																								},
																								"nativeSrc": "8790:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8790:42:7"
																							},
																							"nativeSrc": "8790:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8790:42:7"
																						},
																						{
																							"nativeSrc": "8849:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8849:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8863:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8863:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8871:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8871:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8859:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8859:3:7"
																								},
																								"nativeSrc": "8859:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8859:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8849:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8849:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8890:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8890:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8907:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8907:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8918:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8918:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8903:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8903:3:7"
																								},
																								"nativeSrc": "8903:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8903:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8890:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8890:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8738:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8738:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8741:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8741:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8735:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8735:2:7"
																					},
																					"nativeSrc": "8735:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8735:14:7"
																				},
																				"nativeSrc": "8727:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8750:21:7",
																					"nodeType": "YulBlock",
																					"src": "8750:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8752:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8752:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8761:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8761:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8764:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8764:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8757:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8757:3:7"
																								},
																								"nativeSrc": "8757:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8757:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8752:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8752:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8731:3:7",
																					"nodeType": "YulBlock",
																					"src": "8731:3:7",
																					"statements": []
																				},
																				"src": "8727:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8971:156:7",
																					"nodeType": "YulBlock",
																					"src": "8971:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8989:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8989:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9016:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9016:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9021:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9021:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9012:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9012:3:7"
																										},
																										"nativeSrc": "9012:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9012:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9006:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9006:5:7"
																								},
																								"nativeSrc": "9006:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9006:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8993:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8993:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9056:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9056:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9083:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9083:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9098:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9098:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9106:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9106:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9094:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9094:3:7"
																												},
																												"nativeSrc": "9094:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9094:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9064:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9064:18:7"
																										},
																										"nativeSrc": "9064:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9064:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9049:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9049:6:7"
																								},
																								"nativeSrc": "9049:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9049:64:7"
																							},
																							"nativeSrc": "9049:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9049:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8954:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8954:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8963:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8963:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8951:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8951:2:7"
																					},
																					"nativeSrc": "8951:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8951:19:7"
																				},
																				"nativeSrc": "8948:179:7",
																				"nodeType": "YulIf",
																				"src": "8948:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9147:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9147:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9161:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9161:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9169:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9169:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9157:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9157:3:7"
																									},
																									"nativeSrc": "9157:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9157:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9173:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9173:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9153:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9153:3:7"
																							},
																							"nativeSrc": "9153:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9153:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9140:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9140:6:7"
																					},
																					"nativeSrc": "9140:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9140:36:7"
																				},
																				"nativeSrc": "9140:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9140:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8568:618:7",
																	"nodeType": "YulCase",
																	"src": "8568:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8573:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8573:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9203:222:7",
																		"nodeType": "YulBlock",
																		"src": "9203:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9217:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9217:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9230:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9230:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9221:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9221:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9254:67:7",
																					"nodeType": "YulBlock",
																					"src": "9254:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9272:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9272:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9291:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9291:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9296:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9296:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9287:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9287:3:7"
																										},
																										"nativeSrc": "9287:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9287:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9281:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9281:5:7"
																								},
																								"nativeSrc": "9281:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9281:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9272:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9272:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9247:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9247:6:7"
																				},
																				"nativeSrc": "9244:77:7",
																				"nodeType": "YulIf",
																				"src": "9244:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9341:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9341:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9400:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9400:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9407:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9407:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9347:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9347:52:7"
																							},
																							"nativeSrc": "9347:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9347:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9334:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9334:6:7"
																					},
																					"nativeSrc": "9334:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9334:81:7"
																				},
																				"nativeSrc": "9334:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9334:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9195:230:7",
																	"nodeType": "YulCase",
																	"src": "9195:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8548:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8548:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8556:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8556:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8545:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8545:2:7"
																},
																"nativeSrc": "8545:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8545:14:7"
															},
															"nativeSrc": "8538:887:7",
															"nodeType": "YulSwitch",
															"src": "8538:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8036:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8117:4:7",
														"nodeType": "YulTypedName",
														"src": "8117:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8123:3:7",
														"nodeType": "YulTypedName",
														"src": "8123:3:7",
														"type": ""
													}
												],
												"src": "8036:1395:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$821(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$821(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$821(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$821_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$821(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$821_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b50604051620022d9380380620022d9833981810160405281019062000036919062000294565b8181816003908162000049919062000562565b5080600490816200005b919062000562565b5050508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050505062000646565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000d782620000ac565b9050919050565b5f620000ea82620000cb565b9050919050565b620000fc81620000de565b811462000107575f80fd5b50565b5f815190506200011a81620000f1565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620001708262000128565b810181811067ffffffffffffffff8211171562000192576200019162000138565b5b80604052505050565b5f620001a66200009b565b9050620001b4828262000165565b919050565b5f67ffffffffffffffff821115620001d657620001d562000138565b5b620001e18262000128565b9050602081019050919050565b5f5b838110156200020d578082015181840152602081019050620001f0565b5f8484015250505050565b5f6200022e6200022884620001b9565b6200019b565b9050828152602081018484840111156200024d576200024c62000124565b5b6200025a848285620001ee565b509392505050565b5f82601f83011262000279576200027862000120565b5b81516200028b84826020860162000218565b91505092915050565b5f805f60608486031215620002ae57620002ad620000a4565b5b5f620002bd868287016200010a565b935050602084015167ffffffffffffffff811115620002e157620002e0620000a8565b5b620002ef8682870162000262565b925050604084015167ffffffffffffffff811115620003135762000312620000a8565b5b620003218682870162000262565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200037a57607f821691505b60208210810362000390576200038f62000335565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003f47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b7565b620004008683620003b7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200044a620004446200043e8462000418565b62000421565b62000418565b9050919050565b5f819050919050565b62000465836200042a565b6200047d620004748262000451565b848454620003c3565b825550505050565b5f90565b6200049362000485565b620004a08184846200045a565b505050565b5b81811015620004c757620004bb5f8262000489565b600181019050620004a6565b5050565b601f8211156200051657620004e08162000396565b620004eb84620003a8565b81016020851015620004fb578190505b620005136200050a85620003a8565b830182620004a5565b50505b505050565b5f82821c905092915050565b5f620005385f19846008026200051b565b1980831691505092915050565b5f62000552838362000527565b9150826002028217905092915050565b6200056d826200032b565b67ffffffffffffffff81111562000589576200058862000138565b5b62000595825462000362565b620005a2828285620004cb565b5f60209050601f831160018114620005d8575f8415620005c3578287015190505b620005cf858262000545565b8655506200063e565b601f198416620005e88662000396565b5f5b828110156200061157848901518255600182019150602085019450602081019050620005ea565b868310156200063157848901516200062d601f89168262000527565b8355505b6001600288020188555050505b505050505050565b608051611c57620006825f395f81816105bc0152818161079c015281816108080152818161096e01528181610b9b0152610d110152611c575ff3fe608060405234801561000f575f80fd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f80fd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611693565b60405180910390f35b6101cb60048036038101906101c691906116e1565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f69190611766565b610727565b60405161020891906117be565b60405180910390f35b61022b600480360381019061022691906116e1565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117d7565b610763565b60405161028691906117be565b60405180910390f35b610297610791565b6040516102a49190611842565b60405180910390f35b6102b5610799565b6040516102c2919061186a565b60405180910390f35b6102e560048036038101906102e09190611883565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116e1565b6107e9565b60405161032291906115f0565b60405180910390f35b610345600480360381019061034091906118ae565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611883565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a091906118ae565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611693565b60405180910390f35b6103f360048036038101906103ee9190611766565b610b11565b60405161040091906117be565b60405180910390f35b610423600480360381019061041e91906116e1565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118ec565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118ec565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611883565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116e1565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611883565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611883565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e919061193c565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116e1565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610613919061186a565b602060405180830381865afa15801561062e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610652919061198e565b905090565b606060038054610666906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119e6565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f806106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a43565b6107189190611ab1565b61071f565b825b915050919050565b5f80610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f8061076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ae1565b6020604051808303815f875af115801561087f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b40565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b6b565b60405180910390a392915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ae1565b6020604051808303815f875af11580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b40565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b6b565b60405180910390a392915050565b606060048054610a90906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119e6565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f80610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b92565b6020604051808303815f875af1158015610c10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b40565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b6b565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b92565b6020604051808303815f875af1158015610d86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b40565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b6b565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f80610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a43565b610e8a9190611ab1565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611bb9565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611069919061186a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d9919061186a565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611159919061186a565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d8919061186a565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611257919061186a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c7919061186a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bee565b925050819055506114dd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611bb9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611640578082015181840152602081019050611625565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61166582611609565b61166f8185611613565b935061167f818560208601611623565b6116888161164b565b840191505092915050565b5f6020820190508181035f8301526116ab818461165b565b905092915050565b5f80fd5b6116c0816115d8565b81146116ca575f80fd5b50565b5f813590506116db816116b7565b92915050565b5f602082840312156116f6576116f56116b3565b5b5f611703848285016116cd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117358261170c565b9050919050565b6117458161172b565b811461174f575f80fd5b50565b5f813590506117608161173c565b92915050565b5f806040838503121561177c5761177b6116b3565b5b5f61178985828601611752565b925050602061179a858286016116cd565b9150509250929050565b5f8115159050919050565b6117b8816117a4565b82525050565b5f6020820190506117d15f8301846117af565b92915050565b5f805f606084860312156117ee576117ed6116b3565b5b5f6117fb86828701611752565b935050602061180c86828701611752565b925050604061181d868287016116cd565b9150509250925092565b5f60ff82169050919050565b61183c81611827565b82525050565b5f6020820190506118555f830184611833565b92915050565b6118648161172b565b82525050565b5f60208201905061187d5f83018461185b565b92915050565b5f60208284031215611898576118976116b3565b5b5f6118a584828501611752565b91505092915050565b5f80604083850312156118c4576118c36116b3565b5b5f6118d1858286016116cd565b92505060206118e285828601611752565b9150509250929050565b5f805f60608486031215611903576119026116b3565b5b5f611910868287016116cd565b935050602061192186828701611752565b925050604061193286828701611752565b9150509250925092565b5f8060408385031215611952576119516116b3565b5b5f61195f85828601611752565b925050602061197085828601611752565b9150509250929050565b5f81519050611988816116b7565b92915050565b5f602082840312156119a3576119a26116b3565b5b5f6119b08482850161197a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119fd57607f821691505b602082108103611a1057611a0f6119b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4d826115d8565b9150611a58836115d8565b9250828202611a66816115d8565b91508282048414831517611a7d57611a7c611a16565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611abb826115d8565b9150611ac6836115d8565b925082611ad657611ad5611a84565b5b828204905092915050565b5f606082019050611af45f83018661185b565b611b01602083018561185b565b611b0e60408301846115e1565b949350505050565b611b1f816117a4565b8114611b29575f80fd5b50565b5f81519050611b3a81611b16565b92915050565b5f60208284031215611b5557611b546116b3565b5b5f611b6284828501611b2c565b91505092915050565b5f604082019050611b7e5f8301856115e1565b611b8b60208301846115e1565b9392505050565b5f604082019050611ba55f83018561185b565b611bb260208301846115e1565b9392505050565b5f606082019050611bcc5f83018661185b565b611bd960208301856115e1565b611be660408301846115e1565b949350505050565b5f611bf8826115d8565b9150611c03836115d8565b9250828201905080821115611c1b57611c1a611a16565b5b9291505056fea26469706673582212202f372bcb9a5915b5b126e0de26a46c5c8cc18d8a7f701634d9975faa908eb93264736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22D9 CODESIZE SUB DUP1 PUSH3 0x22D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x294 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x562 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x562 JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x646 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD7 DUP3 PUSH3 0xAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xEA DUP3 PUSH3 0xCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xFC DUP2 PUSH3 0xDE JUMP JUMPDEST DUP2 EQ PUSH3 0x107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x11A DUP2 PUSH3 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x170 DUP3 PUSH3 0x128 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x192 JUMPI PUSH3 0x191 PUSH3 0x138 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1A6 PUSH3 0x9B JUMP JUMPDEST SWAP1 POP PUSH3 0x1B4 DUP3 DUP3 PUSH3 0x165 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1D6 JUMPI PUSH3 0x1D5 PUSH3 0x138 JUMP JUMPDEST JUMPDEST PUSH3 0x1E1 DUP3 PUSH3 0x128 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x20D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1F0 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x22E PUSH3 0x228 DUP5 PUSH3 0x1B9 JUMP JUMPDEST PUSH3 0x19B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x124 JUMP JUMPDEST JUMPDEST PUSH3 0x25A DUP5 DUP3 DUP6 PUSH3 0x1EE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x279 JUMPI PUSH3 0x278 PUSH3 0x120 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x28B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x218 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2AE JUMPI PUSH3 0x2AD PUSH3 0xA4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2BD DUP7 DUP3 DUP8 ADD PUSH3 0x10A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2E1 JUMPI PUSH3 0x2E0 PUSH3 0xA8 JUMP JUMPDEST JUMPDEST PUSH3 0x2EF DUP7 DUP3 DUP8 ADD PUSH3 0x262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x313 JUMPI PUSH3 0x312 PUSH3 0xA8 JUMP JUMPDEST JUMPDEST PUSH3 0x321 DUP7 DUP3 DUP8 ADD PUSH3 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x37A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x390 JUMPI PUSH3 0x38F PUSH3 0x335 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3F4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3B7 JUMP JUMPDEST PUSH3 0x400 DUP7 DUP4 PUSH3 0x3B7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x44A PUSH3 0x444 PUSH3 0x43E DUP5 PUSH3 0x418 JUMP JUMPDEST PUSH3 0x421 JUMP JUMPDEST PUSH3 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x465 DUP4 PUSH3 0x42A JUMP JUMPDEST PUSH3 0x47D PUSH3 0x474 DUP3 PUSH3 0x451 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3C3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x493 PUSH3 0x485 JUMP JUMPDEST PUSH3 0x4A0 DUP2 DUP5 DUP5 PUSH3 0x45A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C7 JUMPI PUSH3 0x4BB PUSH0 DUP3 PUSH3 0x489 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x516 JUMPI PUSH3 0x4E0 DUP2 PUSH3 0x396 JUMP JUMPDEST PUSH3 0x4EB DUP5 PUSH3 0x3A8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4FB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x513 PUSH3 0x50A DUP6 PUSH3 0x3A8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x538 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x51B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x552 DUP4 DUP4 PUSH3 0x527 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x56D DUP3 PUSH3 0x32B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x589 JUMPI PUSH3 0x588 PUSH3 0x138 JUMP JUMPDEST JUMPDEST PUSH3 0x595 DUP3 SLOAD PUSH3 0x362 JUMP JUMPDEST PUSH3 0x5A2 DUP3 DUP3 DUP6 PUSH3 0x4CB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5D8 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5C3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5CF DUP6 DUP3 PUSH3 0x545 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x63E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5E8 DUP7 PUSH3 0x396 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x611 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5EA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x631 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x62D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x527 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C57 PUSH3 0x682 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5BC ADD MSTORE DUP2 DUP2 PUSH2 0x79C ADD MSTORE DUP2 DUP2 PUSH2 0x808 ADD MSTORE DUP2 DUP2 PUSH2 0x96E ADD MSTORE DUP2 DUP2 PUSH2 0xB9B ADD MSTORE PUSH2 0xD11 ADD MSTORE PUSH2 0x1C57 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1640 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1625 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1665 DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x166F DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x167F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16AB DUP2 DUP5 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C0 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DB DUP2 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x16F5 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1703 DUP5 DUP3 DUP6 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1735 DUP3 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1745 DUP2 PUSH2 0x172B JUMP JUMPDEST DUP2 EQ PUSH2 0x174F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1760 DUP2 PUSH2 0x173C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1789 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x179A DUP6 DUP3 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FB DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x180C DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x181D DUP7 DUP3 DUP8 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1855 PUSH0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1864 DUP2 PUSH2 0x172B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187D PUSH0 DUP4 ADD DUP5 PUSH2 0x185B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1898 JUMPI PUSH2 0x1897 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C3 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1910 DUP7 DUP3 DUP8 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1921 DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1932 DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1970 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A2 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B0 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4D DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A58 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A66 DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x1A16 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1ABB DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x1A84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF4 PUSH0 DUP4 ADD DUP7 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1B01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1B0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x17A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B3A DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B55 JUMPI PUSH2 0x1B54 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B62 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7E PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH0 DUP4 ADD DUP6 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCC PUSH0 DUP4 ADD DUP7 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1BD9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF8 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C03 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1A16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F CALLDATACOPY 0x2B 0xCB SWAP11 MSIZE ISZERO 0xB5 0xB1 0x26 0xE0 0xDE 0x26 LOG4 PUSH13 0x5C8CC18D8A7F701634D9975FAA SWAP1 DUP15 0xB9 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:4619:6:-:0;;;295:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;401:5;408:7;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;436:6:6::1;427:15;;;;;;;;::::0;::::1;295:154:::0;;;216:4619;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:117::-;1121:1;1118;1111:12;1135:117;1244:1;1241;1234:12;1258:102;1299:6;1350:2;1346:7;1341:2;1334:5;1330:14;1326:28;1316:38;;1258:102;;;:::o;1366:180::-;1414:77;1411:1;1404:88;1511:4;1508:1;1501:15;1535:4;1532:1;1525:15;1552:281;1635:27;1657:4;1635:27;:::i;:::-;1627:6;1623:40;1765:6;1753:10;1750:22;1729:18;1717:10;1714:34;1711:62;1708:88;;;1776:18;;:::i;:::-;1708:88;1816:10;1812:2;1805:22;1595:238;1552:281;;:::o;1839:129::-;1873:6;1900:20;;:::i;:::-;1890:30;;1929:33;1957:4;1949:6;1929:33;:::i;:::-;1839:129;;;:::o;1974:308::-;2036:4;2126:18;2118:6;2115:30;2112:56;;;2148:18;;:::i;:::-;2112:56;2186:29;2208:6;2186:29;:::i;:::-;2178:37;;2270:4;2264;2260:15;2252:23;;1974:308;;;:::o;2288:246::-;2369:1;2379:113;2393:6;2390:1;2387:13;2379:113;;;2478:1;2473:3;2469:11;2463:18;2459:1;2454:3;2450:11;2443:39;2415:2;2412:1;2408:10;2403:15;;2379:113;;;2526:1;2517:6;2512:3;2508:16;2501:27;2350:184;2288:246;;;:::o;2540:434::-;2629:5;2654:66;2670:49;2712:6;2670:49;:::i;:::-;2654:66;:::i;:::-;2645:75;;2743:6;2736:5;2729:21;2781:4;2774:5;2770:16;2819:3;2810:6;2805:3;2801:16;2798:25;2795:112;;;2826:79;;:::i;:::-;2795:112;2916:52;2961:6;2956:3;2951;2916:52;:::i;:::-;2635:339;2540:434;;;;;:::o;2994:355::-;3061:5;3110:3;3103:4;3095:6;3091:17;3087:27;3077:122;;3118:79;;:::i;:::-;3077:122;3228:6;3222:13;3253:90;3339:3;3331:6;3324:4;3316:6;3312:17;3253:90;:::i;:::-;3244:99;;3067:282;2994:355;;;;:::o;3355:1035::-;3476:6;3484;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:77;3761:7;3752:6;3741:9;3737:22;3692:77;:::i;:::-;3682:87;;3638:141;3839:2;3828:9;3824:18;3818:25;3870:18;3862:6;3859:30;3856:117;;;3892:79;;:::i;:::-;3856:117;3997:74;4063:7;4054:6;4043:9;4039:22;3997:74;:::i;:::-;3987:84;;3789:292;4141:2;4130:9;4126:18;4120:25;4172:18;4164:6;4161:30;4158:117;;;4194:79;;:::i;:::-;4158:117;4299:74;4365:7;4356:6;4345:9;4341:22;4299:74;:::i;:::-;4289:84;;4091:292;3355:1035;;;;;:::o;4396:99::-;4448:6;4482:5;4476:12;4466:22;;4396:99;;;:::o;4501:180::-;4549:77;4546:1;4539:88;4646:4;4643:1;4636:15;4670:4;4667:1;4660:15;4687:320;4731:6;4768:1;4762:4;4758:12;4748:22;;4815:1;4809:4;4805:12;4836:18;4826:81;;4892:4;4884:6;4880:17;4870:27;;4826:81;4954:2;4946:6;4943:14;4923:18;4920:38;4917:84;;4973:18;;:::i;:::-;4917:84;4738:269;4687:320;;;:::o;5013:141::-;5062:4;5085:3;5077:11;;5108:3;5105:1;5098:14;5142:4;5139:1;5129:18;5121:26;;5013:141;;;:::o;5160:93::-;5197:6;5244:2;5239;5232:5;5228:14;5224:23;5214:33;;5160:93;;;:::o;5259:107::-;5303:8;5353:5;5347:4;5343:16;5322:37;;5259:107;;;;:::o;5372:393::-;5441:6;5491:1;5479:10;5475:18;5514:97;5544:66;5533:9;5514:97;:::i;:::-;5632:39;5662:8;5651:9;5632:39;:::i;:::-;5620:51;;5704:4;5700:9;5693:5;5689:21;5680:30;;5753:4;5743:8;5739:19;5732:5;5729:30;5719:40;;5448:317;;5372:393;;;;;:::o;5771:77::-;5808:7;5837:5;5826:16;;5771:77;;;:::o;5854:60::-;5882:3;5903:5;5896:12;;5854:60;;;:::o;5920:142::-;5970:9;6003:53;6021:34;6030:24;6048:5;6030:24;:::i;:::-;6021:34;:::i;:::-;6003:53;:::i;:::-;5990:66;;5920:142;;;:::o;6068:75::-;6111:3;6132:5;6125:12;;6068:75;;;:::o;6149:269::-;6259:39;6290:7;6259:39;:::i;:::-;6320:91;6369:41;6393:16;6369:41;:::i;:::-;6361:6;6354:4;6348:11;6320:91;:::i;:::-;6314:4;6307:105;6225:193;6149:269;;;:::o;6424:73::-;6469:3;6424:73;:::o;6503:189::-;6580:32;;:::i;:::-;6621:65;6679:6;6671;6665:4;6621:65;:::i;:::-;6556:136;6503:189;;:::o;6698:186::-;6758:120;6775:3;6768:5;6765:14;6758:120;;;6829:39;6866:1;6859:5;6829:39;:::i;:::-;6802:1;6795:5;6791:13;6782:22;;6758:120;;;6698:186;;:::o;6890:543::-;6991:2;6986:3;6983:11;6980:446;;;7025:38;7057:5;7025:38;:::i;:::-;7109:29;7127:10;7109:29;:::i;:::-;7099:8;7095:44;7292:2;7280:10;7277:18;7274:49;;;7313:8;7298:23;;7274:49;7336:80;7392:22;7410:3;7392:22;:::i;:::-;7382:8;7378:37;7365:11;7336:80;:::i;:::-;6995:431;;6980:446;6890:543;;;:::o;7439:117::-;7493:8;7543:5;7537:4;7533:16;7512:37;;7439:117;;;;:::o;7562:169::-;7606:6;7639:51;7687:1;7683:6;7675:5;7672:1;7668:13;7639:51;:::i;:::-;7635:56;7720:4;7714;7710:15;7700:25;;7613:118;7562:169;;;;:::o;7736:295::-;7812:4;7958:29;7983:3;7977:4;7958:29;:::i;:::-;7950:37;;8020:3;8017:1;8013:11;8007:4;8004:21;7996:29;;7736:295;;;;:::o;8036:1395::-;8153:37;8186:3;8153:37;:::i;:::-;8255:18;8247:6;8244:30;8241:56;;;8277:18;;:::i;:::-;8241:56;8321:38;8353:4;8347:11;8321:38;:::i;:::-;8406:67;8466:6;8458;8452:4;8406:67;:::i;:::-;8500:1;8524:4;8511:17;;8556:2;8548:6;8545:14;8573:1;8568:618;;;;9230:1;9247:6;9244:77;;;9296:9;9291:3;9287:19;9281:26;9272:35;;9244:77;9347:67;9407:6;9400:5;9347:67;:::i;:::-;9341:4;9334:81;9203:222;8538:887;;8568:618;8620:4;8616:9;8608:6;8604:22;8654:37;8686:4;8654:37;:::i;:::-;8713:1;8727:208;8741:7;8738:1;8735:14;8727:208;;;8820:9;8815:3;8811:19;8805:26;8797:6;8790:42;8871:1;8863:6;8859:14;8849:24;;8918:2;8907:9;8903:18;8890:31;;8764:4;8761:1;8757:12;8752:17;;8727:208;;;8963:6;8954:7;8951:19;8948:179;;;9021:9;9016:3;9012:19;9006:26;9064:48;9106:4;9098:6;9094:17;9083:9;9064:48;:::i;:::-;9056:6;9049:64;8971:156;8948:179;9173:1;9169;9161:6;9157:14;9153:22;9147:4;9140:36;8575:611;;;8538:887;;8128:1303;;;8036:1395;;:::o;216:4619:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_712": {
									"entryPoint": 3933,
									"id": 712,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_772": {
									"entryPoint": 4592,
									"id": 772,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_694": {
									"entryPoint": 4465,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_661": {
									"entryPoint": 4338,
									"id": 661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_937": {
									"entryPoint": 3926,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_820": {
									"entryPoint": 3951,
									"id": 820,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_551": {
									"entryPoint": 4098,
									"id": 551,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_628": {
									"entryPoint": 5055,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_448": {
									"entryPoint": 3779,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_472": {
									"entryPoint": 1831,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asset_1000": {
									"entryPoint": 1945,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOf_407": {
									"entryPoint": 2331,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToAssets_1254": {
									"entryPoint": 1767,
									"id": 1254,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToShares_1228": {
									"entryPoint": 3673,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_385": {
									"entryPoint": 1937,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_1042": {
									"entryPoint": 2042,
									"id": 1042,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxDeposit_1316": {
									"entryPoint": 1984,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxMint_1330": {
									"entryPoint": 3632,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxRedeem_1356": {
									"entryPoint": 3762,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxWithdraw_1344": {
									"entryPoint": 3737,
									"id": 1344,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1084": {
									"entryPoint": 2400,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_367": {
									"entryPoint": 1623,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@previewDeposit_1266": {
									"entryPoint": 3909,
									"id": 1266,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewMint_1278": {
									"entryPoint": 2867,
									"id": 1278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewRedeem_1302": {
									"entryPoint": 2025,
									"id": 1302,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewWithdraw_1290": {
									"entryPoint": 1865,
									"id": 1290,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@redeem_1188": {
									"entryPoint": 3258,
									"id": 1188,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_376": {
									"entryPoint": 2689,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalAssets_1202": {
									"entryPoint": 1465,
									"id": 1202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_394": {
									"entryPoint": 1882,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_504": {
									"entryPoint": 1891,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_431": {
									"entryPoint": 2833,
									"id": 431,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1136": {
									"entryPoint": 2884,
									"id": 1136,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11839:7",
										"nodeType": "YulBlock",
										"src": "0:11839:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:184:7",
													"nodeType": "YulBlock",
													"src": "784:184:7",
													"statements": [
														{
															"nativeSrc": "794:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "794:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "803:1:7",
																"nodeType": "YulLiteral",
																"src": "803:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "798:1:7",
																	"nodeType": "YulTypedName",
																	"src": "798:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "863:63:7",
																"nodeType": "YulBlock",
																"src": "863:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "888:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "888:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "893:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "893:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "884:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "884:3:7"
																					},
																					"nativeSrc": "884:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "884:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "907:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "912:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "912:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "903:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "903:3:7"
																							},
																							"nativeSrc": "903:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "903:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "897:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "897:5:7"
																					},
																					"nativeSrc": "897:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "897:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "877:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "877:6:7"
																			},
																			"nativeSrc": "877:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "877:39:7"
																		},
																		"nativeSrc": "877:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "877:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "824:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "821:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "821:2:7"
																},
																"nativeSrc": "821:13:7",
																"nodeType": "YulFunctionCall",
																"src": "821:13:7"
															},
															"nativeSrc": "813:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "835:19:7",
																"nodeType": "YulBlock",
																"src": "835:19:7",
																"statements": [
																	{
																		"nativeSrc": "837:15:7",
																		"nodeType": "YulAssignment",
																		"src": "837:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "846:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "846:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:2:7",
																					"nodeType": "YulLiteral",
																					"src": "849:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "842:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "842:3:7"
																			},
																			"nativeSrc": "842:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "842:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "837:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "837:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "817:3:7",
																"nodeType": "YulBlock",
																"src": "817:3:7",
																"statements": []
															},
															"src": "813:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "946:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "946:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "951:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "942:3:7"
																		},
																		"nativeSrc": "942:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "942:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "960:1:7",
																		"nodeType": "YulLiteral",
																		"src": "960:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "935:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:7"
																},
																"nativeSrc": "935:27:7",
																"nodeType": "YulFunctionCall",
																"src": "935:27:7"
															},
															"nativeSrc": "935:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "935:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:246:7"
											},
											{
												"body": {
													"nativeSrc": "1022:54:7",
													"nodeType": "YulBlock",
													"src": "1022:54:7",
													"statements": [
														{
															"nativeSrc": "1032:38:7",
															"nodeType": "YulAssignment",
															"src": "1032:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1050:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1050:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1057:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:7"
																		},
																		"nativeSrc": "1046:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1066:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1066:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:7"
																		},
																		"nativeSrc": "1062:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1062:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1042:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1042:3:7"
																},
																"nativeSrc": "1042:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1042:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "974:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:7",
														"nodeType": "YulTypedName",
														"src": "1005:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1015:6:7",
														"nodeType": "YulTypedName",
														"src": "1015:6:7",
														"type": ""
													}
												],
												"src": "974:102:7"
											},
											{
												"body": {
													"nativeSrc": "1174:285:7",
													"nodeType": "YulBlock",
													"src": "1174:285:7",
													"statements": [
														{
															"nativeSrc": "1184:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1231:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1231:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1198:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1198:32:7"
																},
																"nativeSrc": "1198:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1198:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1246:78:7",
															"nodeType": "YulAssignment",
															"src": "1246:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1312:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1317:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1253:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1253:58:7"
																},
																"nativeSrc": "1253:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1253:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1372:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1372:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1379:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1379:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:7"
																		},
																		"nativeSrc": "1368:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1386:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1386:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1391:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1391:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1333:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1333:34:7"
																},
																"nativeSrc": "1333:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1333:65:7"
															},
															"nativeSrc": "1333:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1333:65:7"
														},
														{
															"nativeSrc": "1407:46:7",
															"nodeType": "YulAssignment",
															"src": "1407:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1445:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1423:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1423:21:7"
																		},
																		"nativeSrc": "1423:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1414:3:7"
																},
																"nativeSrc": "1414:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1414:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1407:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1082:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1155:5:7",
														"nodeType": "YulTypedName",
														"src": "1155:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1162:3:7",
														"nodeType": "YulTypedName",
														"src": "1162:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1170:3:7",
														"nodeType": "YulTypedName",
														"src": "1170:3:7",
														"type": ""
													}
												],
												"src": "1082:377:7"
											},
											{
												"body": {
													"nativeSrc": "1583:195:7",
													"nodeType": "YulBlock",
													"src": "1583:195:7",
													"statements": [
														{
															"nativeSrc": "1593:26:7",
															"nodeType": "YulAssignment",
															"src": "1593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:7"
																},
																"nativeSrc": "1601:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1593:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1593:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:7"
																		},
																		"nativeSrc": "1636:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1659:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1659:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:7"
																		},
																		"nativeSrc": "1655:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:7"
																},
																"nativeSrc": "1629:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1629:47:7"
															},
															"nativeSrc": "1629:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1629:47:7"
														},
														{
															"nativeSrc": "1685:86:7",
															"nodeType": "YulAssignment",
															"src": "1685:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1757:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1766:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1693:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:63:7"
																},
																"nativeSrc": "1693:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1693:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1685:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1685:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1465:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1555:9:7",
														"nodeType": "YulTypedName",
														"src": "1555:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1567:6:7",
														"nodeType": "YulTypedName",
														"src": "1567:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1578:4:7",
														"nodeType": "YulTypedName",
														"src": "1578:4:7",
														"type": ""
													}
												],
												"src": "1465:313:7"
											},
											{
												"body": {
													"nativeSrc": "1824:35:7",
													"nodeType": "YulBlock",
													"src": "1824:35:7",
													"statements": [
														{
															"nativeSrc": "1834:19:7",
															"nodeType": "YulAssignment",
															"src": "1834:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1850:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1850:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1844:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:5:7"
																},
																"nativeSrc": "1844:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1844:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1784:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1817:6:7",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"src": "1784:75:7"
											},
											{
												"body": {
													"nativeSrc": "1954:28:7",
													"nodeType": "YulBlock",
													"src": "1954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:7"
																},
																"nativeSrc": "1964:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1964:12:7"
															},
															"nativeSrc": "1964:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1964:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1865:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1865:117:7"
											},
											{
												"body": {
													"nativeSrc": "2077:28:7",
													"nodeType": "YulBlock",
													"src": "2077:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:7"
																},
																"nativeSrc": "2087:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2087:12:7"
															},
															"nativeSrc": "2087:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2087:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1988:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1988:117:7"
											},
											{
												"body": {
													"nativeSrc": "2154:79:7",
													"nodeType": "YulBlock",
													"src": "2154:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2211:16:7",
																"nodeType": "YulBlock",
																"src": "2211:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2223:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2223:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2213:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2213:6:7"
																			},
																			"nativeSrc": "2213:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2213:12:7"
																		},
																		"nativeSrc": "2213:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2213:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2177:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2177:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2202:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2202:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2184:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2184:17:7"
																				},
																				"nativeSrc": "2184:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2184:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2174:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2174:2:7"
																		},
																		"nativeSrc": "2174:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2174:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:7"
																},
																"nativeSrc": "2167:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2167:43:7"
															},
															"nativeSrc": "2164:63:7",
															"nodeType": "YulIf",
															"src": "2164:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2111:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2147:5:7",
														"nodeType": "YulTypedName",
														"src": "2147:5:7",
														"type": ""
													}
												],
												"src": "2111:122:7"
											},
											{
												"body": {
													"nativeSrc": "2291:87:7",
													"nodeType": "YulBlock",
													"src": "2291:87:7",
													"statements": [
														{
															"nativeSrc": "2301:29:7",
															"nodeType": "YulAssignment",
															"src": "2301:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2323:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2323:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2310:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2310:12:7"
																},
																"nativeSrc": "2310:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2310:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2301:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2301:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2366:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2366:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2339:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2339:26:7"
																},
																"nativeSrc": "2339:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2339:33:7"
															},
															"nativeSrc": "2339:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2339:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2239:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2269:6:7",
														"nodeType": "YulTypedName",
														"src": "2269:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2277:3:7",
														"nodeType": "YulTypedName",
														"src": "2277:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2285:5:7",
														"nodeType": "YulTypedName",
														"src": "2285:5:7",
														"type": ""
													}
												],
												"src": "2239:139:7"
											},
											{
												"body": {
													"nativeSrc": "2450:263:7",
													"nodeType": "YulBlock",
													"src": "2450:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2496:83:7",
																"nodeType": "YulBlock",
																"src": "2496:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2498:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2498:77:7"
																			},
																			"nativeSrc": "2498:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2498:79:7"
																		},
																		"nativeSrc": "2498:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2498:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2480:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2467:3:7"
																		},
																		"nativeSrc": "2467:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2467:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2492:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2492:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2463:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:7"
																},
																"nativeSrc": "2463:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2463:32:7"
															},
															"nativeSrc": "2460:119:7",
															"nodeType": "YulIf",
															"src": "2460:119:7"
														},
														{
															"nativeSrc": "2589:117:7",
															"nodeType": "YulBlock",
															"src": "2589:117:7",
															"statements": [
																{
																	"nativeSrc": "2604:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2604:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2618:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2618:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2608:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2608:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2633:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2633:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2668:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2668:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2679:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2679:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2664:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2664:3:7"
																				},
																				"nativeSrc": "2664:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2664:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2688:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2688:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2643:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2643:20:7"
																		},
																		"nativeSrc": "2643:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2643:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2633:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2633:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2384:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2420:9:7",
														"nodeType": "YulTypedName",
														"src": "2420:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2431:7:7",
														"nodeType": "YulTypedName",
														"src": "2431:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2443:6:7",
														"nodeType": "YulTypedName",
														"src": "2443:6:7",
														"type": ""
													}
												],
												"src": "2384:329:7"
											},
											{
												"body": {
													"nativeSrc": "2764:81:7",
													"nodeType": "YulBlock",
													"src": "2764:81:7",
													"statements": [
														{
															"nativeSrc": "2774:65:7",
															"nodeType": "YulAssignment",
															"src": "2774:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2789:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2789:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2796:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2796:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:7"
																},
																"nativeSrc": "2785:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2785:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2774:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2774:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2719:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2746:5:7",
														"nodeType": "YulTypedName",
														"src": "2746:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2756:7:7",
														"nodeType": "YulTypedName",
														"src": "2756:7:7",
														"type": ""
													}
												],
												"src": "2719:126:7"
											},
											{
												"body": {
													"nativeSrc": "2896:51:7",
													"nodeType": "YulBlock",
													"src": "2896:51:7",
													"statements": [
														{
															"nativeSrc": "2906:35:7",
															"nodeType": "YulAssignment",
															"src": "2906:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2935:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2935:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2917:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2917:17:7"
																},
																"nativeSrc": "2917:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2917:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2906:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2906:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2851:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2878:5:7",
														"nodeType": "YulTypedName",
														"src": "2878:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2888:7:7",
														"nodeType": "YulTypedName",
														"src": "2888:7:7",
														"type": ""
													}
												],
												"src": "2851:96:7"
											},
											{
												"body": {
													"nativeSrc": "2996:79:7",
													"nodeType": "YulBlock",
													"src": "2996:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:7",
																"nodeType": "YulBlock",
																"src": "3053:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:7"
																			},
																			"nativeSrc": "3055:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:7"
																		},
																		"nativeSrc": "3055:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3019:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3019:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3044:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3044:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3026:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3026:17:7"
																				},
																				"nativeSrc": "3026:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3016:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3016:2:7"
																		},
																		"nativeSrc": "3016:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3016:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3009:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:7"
																},
																"nativeSrc": "3009:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3009:43:7"
															},
															"nativeSrc": "3006:63:7",
															"nodeType": "YulIf",
															"src": "3006:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2953:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2989:5:7",
														"nodeType": "YulTypedName",
														"src": "2989:5:7",
														"type": ""
													}
												],
												"src": "2953:122:7"
											},
											{
												"body": {
													"nativeSrc": "3133:87:7",
													"nodeType": "YulBlock",
													"src": "3133:87:7",
													"statements": [
														{
															"nativeSrc": "3143:29:7",
															"nodeType": "YulAssignment",
															"src": "3143:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3165:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3152:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3152:12:7"
																},
																"nativeSrc": "3152:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3152:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3143:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3143:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3208:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3208:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3181:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3181:26:7"
																},
																"nativeSrc": "3181:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3181:33:7"
															},
															"nativeSrc": "3181:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3181:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3081:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3111:6:7",
														"nodeType": "YulTypedName",
														"src": "3111:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3119:3:7",
														"nodeType": "YulTypedName",
														"src": "3119:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3127:5:7",
														"nodeType": "YulTypedName",
														"src": "3127:5:7",
														"type": ""
													}
												],
												"src": "3081:139:7"
											},
											{
												"body": {
													"nativeSrc": "3309:391:7",
													"nodeType": "YulBlock",
													"src": "3309:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3355:83:7",
																"nodeType": "YulBlock",
																"src": "3355:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3357:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3357:77:7"
																			},
																			"nativeSrc": "3357:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3357:79:7"
																		},
																		"nativeSrc": "3357:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3330:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3339:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:7"
																		},
																		"nativeSrc": "3326:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3351:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:7"
																},
																"nativeSrc": "3322:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3322:32:7"
															},
															"nativeSrc": "3319:119:7",
															"nodeType": "YulIf",
															"src": "3319:119:7"
														},
														{
															"nativeSrc": "3448:117:7",
															"nodeType": "YulBlock",
															"src": "3448:117:7",
															"statements": [
																{
																	"nativeSrc": "3463:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3463:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3477:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3467:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3467:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3492:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3492:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3527:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3527:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3538:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3538:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3523:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3523:3:7"
																				},
																				"nativeSrc": "3523:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3547:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3547:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3502:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3502:20:7"
																		},
																		"nativeSrc": "3502:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3492:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3492:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3575:118:7",
															"nodeType": "YulBlock",
															"src": "3575:118:7",
															"statements": [
																{
																	"nativeSrc": "3590:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3590:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3604:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3604:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3594:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3594:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3620:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3620:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3655:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3655:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3666:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3666:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3651:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:7"
																				},
																				"nativeSrc": "3651:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3651:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3675:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3675:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3630:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3630:20:7"
																		},
																		"nativeSrc": "3630:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3630:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3620:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3620:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3226:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3271:9:7",
														"nodeType": "YulTypedName",
														"src": "3271:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3282:7:7",
														"nodeType": "YulTypedName",
														"src": "3282:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3294:6:7",
														"nodeType": "YulTypedName",
														"src": "3294:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3302:6:7",
														"nodeType": "YulTypedName",
														"src": "3302:6:7",
														"type": ""
													}
												],
												"src": "3226:474:7"
											},
											{
												"body": {
													"nativeSrc": "3748:48:7",
													"nodeType": "YulBlock",
													"src": "3748:48:7",
													"statements": [
														{
															"nativeSrc": "3758:32:7",
															"nodeType": "YulAssignment",
															"src": "3758:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3776:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:6:7"
																		},
																		"nativeSrc": "3776:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:7"
																},
																"nativeSrc": "3769:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3758:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3758:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3706:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3730:5:7",
														"nodeType": "YulTypedName",
														"src": "3730:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3740:7:7",
														"nodeType": "YulTypedName",
														"src": "3740:7:7",
														"type": ""
													}
												],
												"src": "3706:90:7"
											},
											{
												"body": {
													"nativeSrc": "3861:50:7",
													"nodeType": "YulBlock",
													"src": "3861:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3878:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3878:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3898:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3898:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3883:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3883:14:7"
																		},
																		"nativeSrc": "3883:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3871:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:7"
																},
																"nativeSrc": "3871:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3871:34:7"
															},
															"nativeSrc": "3871:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3871:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3802:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3849:5:7",
														"nodeType": "YulTypedName",
														"src": "3849:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3856:3:7",
														"nodeType": "YulTypedName",
														"src": "3856:3:7",
														"type": ""
													}
												],
												"src": "3802:109:7"
											},
											{
												"body": {
													"nativeSrc": "4009:118:7",
													"nodeType": "YulBlock",
													"src": "4009:118:7",
													"statements": [
														{
															"nativeSrc": "4019:26:7",
															"nodeType": "YulAssignment",
															"src": "4019:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4031:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4027:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:7"
																},
																"nativeSrc": "4027:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4027:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4019:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4019:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4093:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4106:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4117:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:7"
																		},
																		"nativeSrc": "4102:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4055:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "4055:37:7"
																},
																"nativeSrc": "4055:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4055:65:7"
															},
															"nativeSrc": "4055:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4055:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3917:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3981:9:7",
														"nodeType": "YulTypedName",
														"src": "3981:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3993:6:7",
														"nodeType": "YulTypedName",
														"src": "3993:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:7",
														"nodeType": "YulTypedName",
														"src": "4004:4:7",
														"type": ""
													}
												],
												"src": "3917:210:7"
											},
											{
												"body": {
													"nativeSrc": "4233:519:7",
													"nodeType": "YulBlock",
													"src": "4233:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4279:83:7",
																"nodeType": "YulBlock",
																"src": "4279:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4281:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4281:77:7"
																			},
																			"nativeSrc": "4281:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4281:79:7"
																		},
																		"nativeSrc": "4281:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4281:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4254:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4254:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4263:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4250:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:7"
																		},
																		"nativeSrc": "4250:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4250:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4275:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4275:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4246:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nativeSrc": "4246:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4246:32:7"
															},
															"nativeSrc": "4243:119:7",
															"nodeType": "YulIf",
															"src": "4243:119:7"
														},
														{
															"nativeSrc": "4372:117:7",
															"nodeType": "YulBlock",
															"src": "4372:117:7",
															"statements": [
																{
																	"nativeSrc": "4387:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4387:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4401:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4391:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4416:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4416:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4451:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4462:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4462:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4447:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:7"
																				},
																				"nativeSrc": "4447:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4447:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4471:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4471:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4426:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4426:20:7"
																		},
																		"nativeSrc": "4426:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4426:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4416:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4416:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4499:118:7",
															"nodeType": "YulBlock",
															"src": "4499:118:7",
															"statements": [
																{
																	"nativeSrc": "4514:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4514:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4528:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4528:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4518:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4518:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4544:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4544:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4579:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4579:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4590:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4575:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4575:3:7"
																				},
																				"nativeSrc": "4575:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4575:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4599:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4599:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4554:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4554:20:7"
																		},
																		"nativeSrc": "4554:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4544:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4544:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4627:118:7",
															"nodeType": "YulBlock",
															"src": "4627:118:7",
															"statements": [
																{
																	"nativeSrc": "4642:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4642:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4656:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4656:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4646:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4646:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4672:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4672:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4707:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4707:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4718:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4718:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4703:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:7"
																				},
																				"nativeSrc": "4703:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4703:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4727:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4727:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4682:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4682:20:7"
																		},
																		"nativeSrc": "4682:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4672:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4672:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4133:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4187:9:7",
														"nodeType": "YulTypedName",
														"src": "4187:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4198:7:7",
														"nodeType": "YulTypedName",
														"src": "4198:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4210:6:7",
														"nodeType": "YulTypedName",
														"src": "4210:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4218:6:7",
														"nodeType": "YulTypedName",
														"src": "4218:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4226:6:7",
														"nodeType": "YulTypedName",
														"src": "4226:6:7",
														"type": ""
													}
												],
												"src": "4133:619:7"
											},
											{
												"body": {
													"nativeSrc": "4801:43:7",
													"nodeType": "YulBlock",
													"src": "4801:43:7",
													"statements": [
														{
															"nativeSrc": "4811:27:7",
															"nodeType": "YulAssignment",
															"src": "4811:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4826:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4822:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:7"
																},
																"nativeSrc": "4822:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4822:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4811:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4758:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4783:5:7",
														"nodeType": "YulTypedName",
														"src": "4783:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"src": "4758:86:7"
											},
											{
												"body": {
													"nativeSrc": "4911:51:7",
													"nodeType": "YulBlock",
													"src": "4911:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4928:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4928:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4949:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4933:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4933:15:7"
																		},
																		"nativeSrc": "4933:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4933:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:7"
																},
																"nativeSrc": "4921:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4921:35:7"
															},
															"nativeSrc": "4921:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4921:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4850:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4899:5:7",
														"nodeType": "YulTypedName",
														"src": "4899:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4906:3:7",
														"nodeType": "YulTypedName",
														"src": "4906:3:7",
														"type": ""
													}
												],
												"src": "4850:112:7"
											},
											{
												"body": {
													"nativeSrc": "5062:120:7",
													"nodeType": "YulBlock",
													"src": "5062:120:7",
													"statements": [
														{
															"nativeSrc": "5072:26:7",
															"nodeType": "YulAssignment",
															"src": "5072:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5084:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5084:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5095:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5095:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:7"
																},
																"nativeSrc": "5080:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5080:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5072:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5072:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5148:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5148:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5172:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5172:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:7"
																		},
																		"nativeSrc": "5157:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5157:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5108:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5108:39:7"
																},
																"nativeSrc": "5108:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5108:67:7"
															},
															"nativeSrc": "5108:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5108:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4968:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5034:9:7",
														"nodeType": "YulTypedName",
														"src": "5034:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5046:6:7",
														"nodeType": "YulTypedName",
														"src": "5046:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5057:4:7",
														"nodeType": "YulTypedName",
														"src": "5057:4:7",
														"type": ""
													}
												],
												"src": "4968:214:7"
											},
											{
												"body": {
													"nativeSrc": "5253:53:7",
													"nodeType": "YulBlock",
													"src": "5253:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:7"
																		},
																		"nativeSrc": "5275:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nativeSrc": "5263:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:7"
															},
															"nativeSrc": "5263:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:7",
														"nodeType": "YulTypedName",
														"src": "5241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:7",
														"nodeType": "YulTypedName",
														"src": "5248:3:7",
														"type": ""
													}
												],
												"src": "5188:118:7"
											},
											{
												"body": {
													"nativeSrc": "5410:124:7",
													"nodeType": "YulBlock",
													"src": "5410:124:7",
													"statements": [
														{
															"nativeSrc": "5420:26:7",
															"nodeType": "YulAssignment",
															"src": "5420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nativeSrc": "5428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nativeSrc": "5509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:7"
																},
																"nativeSrc": "5456:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:7"
															},
															"nativeSrc": "5456:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:7",
														"nodeType": "YulTypedName",
														"src": "5382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:7",
														"nodeType": "YulTypedName",
														"src": "5394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:7",
														"nodeType": "YulTypedName",
														"src": "5405:4:7",
														"type": ""
													}
												],
												"src": "5312:222:7"
											},
											{
												"body": {
													"nativeSrc": "5606:263:7",
													"nodeType": "YulBlock",
													"src": "5606:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5652:83:7",
																"nodeType": "YulBlock",
																"src": "5652:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5654:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:7"
																			},
																			"nativeSrc": "5654:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:7"
																		},
																		"nativeSrc": "5654:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5636:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5623:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nativeSrc": "5623:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5648:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:7"
																},
																"nativeSrc": "5619:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5619:32:7"
															},
															"nativeSrc": "5616:119:7",
															"nodeType": "YulIf",
															"src": "5616:119:7"
														},
														{
															"nativeSrc": "5745:117:7",
															"nodeType": "YulBlock",
															"src": "5745:117:7",
															"statements": [
																{
																	"nativeSrc": "5760:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5774:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5764:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5789:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5789:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5824:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5835:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5820:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:7"
																				},
																				"nativeSrc": "5820:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5799:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:7"
																		},
																		"nativeSrc": "5799:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5789:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5540:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5576:9:7",
														"nodeType": "YulTypedName",
														"src": "5576:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5587:7:7",
														"nodeType": "YulTypedName",
														"src": "5587:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5599:6:7",
														"nodeType": "YulTypedName",
														"src": "5599:6:7",
														"type": ""
													}
												],
												"src": "5540:329:7"
											},
											{
												"body": {
													"nativeSrc": "5958:391:7",
													"nodeType": "YulBlock",
													"src": "5958:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6004:83:7",
																"nodeType": "YulBlock",
																"src": "6004:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6006:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:7"
																			},
																			"nativeSrc": "6006:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:7"
																		},
																		"nativeSrc": "6006:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5979:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:7"
																		},
																		"nativeSrc": "5975:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:7"
																},
																"nativeSrc": "5971:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5971:32:7"
															},
															"nativeSrc": "5968:119:7",
															"nodeType": "YulIf",
															"src": "5968:119:7"
														},
														{
															"nativeSrc": "6097:117:7",
															"nodeType": "YulBlock",
															"src": "6097:117:7",
															"statements": [
																{
																	"nativeSrc": "6112:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6126:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6116:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6141:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6141:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6176:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6187:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6172:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:7"
																				},
																				"nativeSrc": "6172:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6196:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6151:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:7"
																		},
																		"nativeSrc": "6151:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6141:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6224:118:7",
															"nodeType": "YulBlock",
															"src": "6224:118:7",
															"statements": [
																{
																	"nativeSrc": "6239:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6253:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6243:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6269:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6269:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6304:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6315:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6300:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:7"
																				},
																				"nativeSrc": "6300:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6324:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6279:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:7"
																		},
																		"nativeSrc": "6279:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6269:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5875:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5920:9:7",
														"nodeType": "YulTypedName",
														"src": "5920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5931:7:7",
														"nodeType": "YulTypedName",
														"src": "5931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5943:6:7",
														"nodeType": "YulTypedName",
														"src": "5943:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5951:6:7",
														"nodeType": "YulTypedName",
														"src": "5951:6:7",
														"type": ""
													}
												],
												"src": "5875:474:7"
											},
											{
												"body": {
													"nativeSrc": "6455:519:7",
													"nodeType": "YulBlock",
													"src": "6455:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6501:83:7",
																"nodeType": "YulBlock",
																"src": "6501:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6503:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6503:77:7"
																			},
																			"nativeSrc": "6503:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6503:79:7"
																		},
																		"nativeSrc": "6503:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6503:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6476:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6476:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6485:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6472:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:7"
																		},
																		"nativeSrc": "6472:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6472:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6497:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6468:3:7"
																},
																"nativeSrc": "6468:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6468:32:7"
															},
															"nativeSrc": "6465:119:7",
															"nodeType": "YulIf",
															"src": "6465:119:7"
														},
														{
															"nativeSrc": "6594:117:7",
															"nodeType": "YulBlock",
															"src": "6594:117:7",
															"statements": [
																{
																	"nativeSrc": "6609:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6609:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6623:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6623:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6613:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6613:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6638:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6638:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6673:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6673:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6684:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6684:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6669:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6669:3:7"
																				},
																				"nativeSrc": "6669:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6669:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6693:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6693:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6648:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6648:20:7"
																		},
																		"nativeSrc": "6648:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6638:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6638:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6721:118:7",
															"nodeType": "YulBlock",
															"src": "6721:118:7",
															"statements": [
																{
																	"nativeSrc": "6736:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6736:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6750:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6750:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6740:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6740:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6766:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6766:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6801:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6801:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6812:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6812:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6797:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6797:3:7"
																				},
																				"nativeSrc": "6797:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6797:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6821:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6821:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6776:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6776:20:7"
																		},
																		"nativeSrc": "6776:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6766:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6766:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6849:118:7",
															"nodeType": "YulBlock",
															"src": "6849:118:7",
															"statements": [
																{
																	"nativeSrc": "6864:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6864:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6878:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6868:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6868:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6894:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6894:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6929:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6929:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6940:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6940:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6925:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6925:3:7"
																				},
																				"nativeSrc": "6925:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6925:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6949:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6949:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6904:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6904:20:7"
																		},
																		"nativeSrc": "6904:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6904:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6894:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6894:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "6355:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6409:9:7",
														"nodeType": "YulTypedName",
														"src": "6409:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6420:7:7",
														"nodeType": "YulTypedName",
														"src": "6420:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6432:6:7",
														"nodeType": "YulTypedName",
														"src": "6432:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6440:6:7",
														"nodeType": "YulTypedName",
														"src": "6440:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6448:6:7",
														"nodeType": "YulTypedName",
														"src": "6448:6:7",
														"type": ""
													}
												],
												"src": "6355:619:7"
											},
											{
												"body": {
													"nativeSrc": "7063:391:7",
													"nodeType": "YulBlock",
													"src": "7063:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7109:83:7",
																"nodeType": "YulBlock",
																"src": "7109:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7111:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7111:77:7"
																			},
																			"nativeSrc": "7111:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7111:79:7"
																		},
																		"nativeSrc": "7111:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7084:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7084:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7093:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7093:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:7"
																		},
																		"nativeSrc": "7080:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7105:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7105:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7076:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:7"
																},
																"nativeSrc": "7076:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7076:32:7"
															},
															"nativeSrc": "7073:119:7",
															"nodeType": "YulIf",
															"src": "7073:119:7"
														},
														{
															"nativeSrc": "7202:117:7",
															"nodeType": "YulBlock",
															"src": "7202:117:7",
															"statements": [
																{
																	"nativeSrc": "7217:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7217:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7231:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7231:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7246:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7246:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7281:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7281:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7292:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7292:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7277:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7277:3:7"
																				},
																				"nativeSrc": "7277:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7277:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7301:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7301:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7256:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7256:20:7"
																		},
																		"nativeSrc": "7256:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7256:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7246:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7246:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7329:118:7",
															"nodeType": "YulBlock",
															"src": "7329:118:7",
															"statements": [
																{
																	"nativeSrc": "7344:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7344:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7348:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7348:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7374:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7374:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7409:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7409:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7420:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7420:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7405:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7405:3:7"
																				},
																				"nativeSrc": "7405:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7405:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7429:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7429:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7384:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7384:20:7"
																		},
																		"nativeSrc": "7384:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7384:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7374:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7374:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6980:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7025:9:7",
														"nodeType": "YulTypedName",
														"src": "7025:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7036:7:7",
														"nodeType": "YulTypedName",
														"src": "7036:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7048:6:7",
														"nodeType": "YulTypedName",
														"src": "7048:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7056:6:7",
														"nodeType": "YulTypedName",
														"src": "7056:6:7",
														"type": ""
													}
												],
												"src": "6980:474:7"
											},
											{
												"body": {
													"nativeSrc": "7523:80:7",
													"nodeType": "YulBlock",
													"src": "7523:80:7",
													"statements": [
														{
															"nativeSrc": "7533:22:7",
															"nodeType": "YulAssignment",
															"src": "7533:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7548:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7548:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7542:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7542:5:7"
																},
																"nativeSrc": "7542:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7542:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7533:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7533:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7591:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7591:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7564:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7564:26:7"
																},
																"nativeSrc": "7564:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7564:33:7"
															},
															"nativeSrc": "7564:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7564:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7460:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7501:6:7",
														"nodeType": "YulTypedName",
														"src": "7501:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7509:3:7",
														"nodeType": "YulTypedName",
														"src": "7509:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7517:5:7",
														"nodeType": "YulTypedName",
														"src": "7517:5:7",
														"type": ""
													}
												],
												"src": "7460:143:7"
											},
											{
												"body": {
													"nativeSrc": "7686:274:7",
													"nodeType": "YulBlock",
													"src": "7686:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7732:83:7",
																"nodeType": "YulBlock",
																"src": "7732:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7734:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7734:77:7"
																			},
																			"nativeSrc": "7734:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7734:79:7"
																		},
																		"nativeSrc": "7734:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7734:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7707:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7707:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7716:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7716:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:7"
																		},
																		"nativeSrc": "7703:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7703:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7728:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7728:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7699:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7699:3:7"
																},
																"nativeSrc": "7699:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7699:32:7"
															},
															"nativeSrc": "7696:119:7",
															"nodeType": "YulIf",
															"src": "7696:119:7"
														},
														{
															"nativeSrc": "7825:128:7",
															"nodeType": "YulBlock",
															"src": "7825:128:7",
															"statements": [
																{
																	"nativeSrc": "7840:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7840:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7844:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7844:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7869:74:7",
																	"nodeType": "YulAssignment",
																	"src": "7869:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7915:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7915:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7926:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7926:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7911:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7911:3:7"
																				},
																				"nativeSrc": "7911:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7911:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7935:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7935:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7879:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7879:31:7"
																		},
																		"nativeSrc": "7879:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7879:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7869:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7869:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7609:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7656:9:7",
														"nodeType": "YulTypedName",
														"src": "7656:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7667:7:7",
														"nodeType": "YulTypedName",
														"src": "7667:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7679:6:7",
														"nodeType": "YulTypedName",
														"src": "7679:6:7",
														"type": ""
													}
												],
												"src": "7609:351:7"
											},
											{
												"body": {
													"nativeSrc": "7994:152:7",
													"nodeType": "YulBlock",
													"src": "7994:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8011:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8014:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8014:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:7"
																},
																"nativeSrc": "8004:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8004:88:7"
															},
															"nativeSrc": "8004:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8004:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8111:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8111:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8101:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8101:6:7"
																},
																"nativeSrc": "8101:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8101:15:7"
															},
															"nativeSrc": "8101:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8101:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8132:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8132:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8135:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8135:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:7"
																},
																"nativeSrc": "8125:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8125:15:7"
															},
															"nativeSrc": "8125:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8125:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7966:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7966:180:7"
											},
											{
												"body": {
													"nativeSrc": "8203:269:7",
													"nodeType": "YulBlock",
													"src": "8203:269:7",
													"statements": [
														{
															"nativeSrc": "8213:22:7",
															"nodeType": "YulAssignment",
															"src": "8213:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8227:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8227:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8233:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8223:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8223:3:7"
																},
																"nativeSrc": "8223:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8223:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8213:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8213:6:7"
																}
															]
														},
														{
															"nativeSrc": "8244:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8244:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8274:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8274:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8280:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8270:3:7"
																},
																"nativeSrc": "8270:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8270:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8248:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8248:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8321:51:7",
																"nodeType": "YulBlock",
																"src": "8321:51:7",
																"statements": [
																	{
																		"nativeSrc": "8335:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8335:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8349:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8349:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8357:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8357:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8345:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8345:3:7"
																			},
																			"nativeSrc": "8345:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8345:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8335:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8335:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8301:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8301:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8294:6:7"
																},
																"nativeSrc": "8294:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8294:26:7"
															},
															"nativeSrc": "8291:81:7",
															"nodeType": "YulIf",
															"src": "8291:81:7"
														},
														{
															"body": {
																"nativeSrc": "8424:42:7",
																"nodeType": "YulBlock",
																"src": "8424:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8438:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8438:16:7"
																			},
																			"nativeSrc": "8438:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8438:18:7"
																		},
																		"nativeSrc": "8438:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8438:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8388:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8388:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8411:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8411:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8419:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8419:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8408:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8408:2:7"
																		},
																		"nativeSrc": "8408:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8385:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8385:2:7"
																},
																"nativeSrc": "8385:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8385:38:7"
															},
															"nativeSrc": "8382:84:7",
															"nodeType": "YulIf",
															"src": "8382:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8152:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8187:4:7",
														"nodeType": "YulTypedName",
														"src": "8187:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8196:6:7",
														"nodeType": "YulTypedName",
														"src": "8196:6:7",
														"type": ""
													}
												],
												"src": "8152:320:7"
											},
											{
												"body": {
													"nativeSrc": "8506:152:7",
													"nodeType": "YulBlock",
													"src": "8506:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8523:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8523:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8526:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8526:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:7"
																},
																"nativeSrc": "8516:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8516:88:7"
															},
															"nativeSrc": "8516:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8516:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8620:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8620:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8623:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8623:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8613:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:7"
																},
																"nativeSrc": "8613:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8613:15:7"
															},
															"nativeSrc": "8613:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8613:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8644:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8644:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8647:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8647:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8637:6:7"
																},
																"nativeSrc": "8637:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8637:15:7"
															},
															"nativeSrc": "8637:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8637:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8478:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8478:180:7"
											},
											{
												"body": {
													"nativeSrc": "8712:362:7",
													"nodeType": "YulBlock",
													"src": "8712:362:7",
													"statements": [
														{
															"nativeSrc": "8722:25:7",
															"nodeType": "YulAssignment",
															"src": "8722:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8745:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8745:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8727:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8727:17:7"
																},
																"nativeSrc": "8727:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8727:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8722:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8722:1:7"
																}
															]
														},
														{
															"nativeSrc": "8756:25:7",
															"nodeType": "YulAssignment",
															"src": "8756:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8779:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8779:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8761:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8761:17:7"
																},
																"nativeSrc": "8761:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8761:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8756:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8756:1:7"
																}
															]
														},
														{
															"nativeSrc": "8790:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8790:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8813:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8813:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8816:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8816:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8809:3:7"
																},
																"nativeSrc": "8809:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8809:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8794:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8794:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8827:41:7",
															"nodeType": "YulAssignment",
															"src": "8827:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8856:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8856:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8838:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8838:17:7"
																},
																"nativeSrc": "8838:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8838:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8827:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8827:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9045:22:7",
																"nodeType": "YulBlock",
																"src": "9045:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9047:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9047:16:7"
																			},
																			"nativeSrc": "9047:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9047:18:7"
																		},
																		"nativeSrc": "9047:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9047:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8978:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8978:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8971:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8971:6:7"
																				},
																				"nativeSrc": "8971:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8971:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9001:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9001:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9008:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9008:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9017:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9017:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9004:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9004:3:7"
																						},
																						"nativeSrc": "9004:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9004:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8998:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8998:2:7"
																				},
																				"nativeSrc": "8998:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8998:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8951:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8951:2:7"
																		},
																		"nativeSrc": "8951:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8951:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8931:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8931:6:7"
																},
																"nativeSrc": "8931:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8931:113:7"
															},
															"nativeSrc": "8928:139:7",
															"nodeType": "YulIf",
															"src": "8928:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8664:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8695:1:7",
														"nodeType": "YulTypedName",
														"src": "8695:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8698:1:7",
														"nodeType": "YulTypedName",
														"src": "8698:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8704:7:7",
														"nodeType": "YulTypedName",
														"src": "8704:7:7",
														"type": ""
													}
												],
												"src": "8664:410:7"
											},
											{
												"body": {
													"nativeSrc": "9108:152:7",
													"nodeType": "YulBlock",
													"src": "9108:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9125:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9125:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9128:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9128:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9118:6:7"
																},
																"nativeSrc": "9118:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9118:88:7"
															},
															"nativeSrc": "9118:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9118:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9222:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9222:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9225:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9225:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9215:6:7"
																},
																"nativeSrc": "9215:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9215:15:7"
															},
															"nativeSrc": "9215:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9215:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9246:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9246:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9249:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9249:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:7"
																},
																"nativeSrc": "9239:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9239:15:7"
															},
															"nativeSrc": "9239:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9239:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9080:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9080:180:7"
											},
											{
												"body": {
													"nativeSrc": "9308:143:7",
													"nodeType": "YulBlock",
													"src": "9308:143:7",
													"statements": [
														{
															"nativeSrc": "9318:25:7",
															"nodeType": "YulAssignment",
															"src": "9318:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9341:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9341:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9323:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9323:17:7"
																},
																"nativeSrc": "9323:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9323:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9318:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9318:1:7"
																}
															]
														},
														{
															"nativeSrc": "9352:25:7",
															"nodeType": "YulAssignment",
															"src": "9352:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9375:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9375:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9357:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9357:17:7"
																},
																"nativeSrc": "9357:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9357:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9352:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9352:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9399:22:7",
																"nodeType": "YulBlock",
																"src": "9399:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9401:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9401:16:7"
																			},
																			"nativeSrc": "9401:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9401:18:7"
																		},
																		"nativeSrc": "9401:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9401:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9396:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9396:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9389:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9389:6:7"
																},
																"nativeSrc": "9389:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9389:9:7"
															},
															"nativeSrc": "9386:35:7",
															"nodeType": "YulIf",
															"src": "9386:35:7"
														},
														{
															"nativeSrc": "9431:14:7",
															"nodeType": "YulAssignment",
															"src": "9431:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9440:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9440:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9443:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9443:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9436:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9436:3:7"
																},
																"nativeSrc": "9436:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9436:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9431:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9431:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9266:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9297:1:7",
														"nodeType": "YulTypedName",
														"src": "9297:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9300:1:7",
														"nodeType": "YulTypedName",
														"src": "9300:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9306:1:7",
														"nodeType": "YulTypedName",
														"src": "9306:1:7",
														"type": ""
													}
												],
												"src": "9266:185:7"
											},
											{
												"body": {
													"nativeSrc": "9611:288:7",
													"nodeType": "YulBlock",
													"src": "9611:288:7",
													"statements": [
														{
															"nativeSrc": "9621:26:7",
															"nodeType": "YulAssignment",
															"src": "9621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9633:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9633:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9644:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9644:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9629:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9629:3:7"
																},
																"nativeSrc": "9629:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9621:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9701:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9714:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9714:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9725:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9725:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9710:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9710:3:7"
																		},
																		"nativeSrc": "9710:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9710:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9657:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9657:43:7"
																},
																"nativeSrc": "9657:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9657:71:7"
															},
															"nativeSrc": "9657:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9657:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9782:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9795:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9795:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9806:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9806:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9791:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9791:3:7"
																		},
																		"nativeSrc": "9791:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9791:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9738:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9738:43:7"
																},
																"nativeSrc": "9738:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9738:72:7"
															},
															"nativeSrc": "9738:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9738:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9864:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9864:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9877:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9877:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9888:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9888:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9873:3:7"
																		},
																		"nativeSrc": "9873:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9873:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9820:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:43:7"
																},
																"nativeSrc": "9820:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:72:7"
															},
															"nativeSrc": "9820:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9820:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9457:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9567:9:7",
														"nodeType": "YulTypedName",
														"src": "9567:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9579:6:7",
														"nodeType": "YulTypedName",
														"src": "9579:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9587:6:7",
														"nodeType": "YulTypedName",
														"src": "9587:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9595:6:7",
														"nodeType": "YulTypedName",
														"src": "9595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9606:4:7",
														"nodeType": "YulTypedName",
														"src": "9606:4:7",
														"type": ""
													}
												],
												"src": "9457:442:7"
											},
											{
												"body": {
													"nativeSrc": "9945:76:7",
													"nodeType": "YulBlock",
													"src": "9945:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9999:16:7",
																"nodeType": "YulBlock",
																"src": "9999:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10008:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10008:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10011:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10011:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10001:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10001:6:7"
																			},
																			"nativeSrc": "10001:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10001:12:7"
																		},
																		"nativeSrc": "10001:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10001:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9968:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9968:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9990:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9990:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9975:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "9975:14:7"
																				},
																				"nativeSrc": "9975:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9975:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9965:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9965:2:7"
																		},
																		"nativeSrc": "9965:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9965:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9958:6:7"
																},
																"nativeSrc": "9958:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9958:40:7"
															},
															"nativeSrc": "9955:60:7",
															"nodeType": "YulIf",
															"src": "9955:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9905:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9938:5:7",
														"nodeType": "YulTypedName",
														"src": "9938:5:7",
														"type": ""
													}
												],
												"src": "9905:116:7"
											},
											{
												"body": {
													"nativeSrc": "10087:77:7",
													"nodeType": "YulBlock",
													"src": "10087:77:7",
													"statements": [
														{
															"nativeSrc": "10097:22:7",
															"nodeType": "YulAssignment",
															"src": "10097:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10112:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10112:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10106:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10106:5:7"
																},
																"nativeSrc": "10106:13:7",
																"nodeType": "YulFunctionCall",
																"src": "10106:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10097:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10097:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10152:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10152:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10128:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10128:23:7"
																},
																"nativeSrc": "10128:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10128:30:7"
															},
															"nativeSrc": "10128:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10128:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10027:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10065:6:7",
														"nodeType": "YulTypedName",
														"src": "10065:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10073:3:7",
														"nodeType": "YulTypedName",
														"src": "10073:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10081:5:7",
														"nodeType": "YulTypedName",
														"src": "10081:5:7",
														"type": ""
													}
												],
												"src": "10027:137:7"
											},
											{
												"body": {
													"nativeSrc": "10244:271:7",
													"nodeType": "YulBlock",
													"src": "10244:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10290:83:7",
																"nodeType": "YulBlock",
																"src": "10290:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10292:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10292:77:7"
																			},
																			"nativeSrc": "10292:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10292:79:7"
																		},
																		"nativeSrc": "10292:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10292:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10265:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10265:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10274:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:7"
																		},
																		"nativeSrc": "10261:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10261:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10286:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10257:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10257:3:7"
																},
																"nativeSrc": "10257:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10257:32:7"
															},
															"nativeSrc": "10254:119:7",
															"nodeType": "YulIf",
															"src": "10254:119:7"
														},
														{
															"nativeSrc": "10383:125:7",
															"nodeType": "YulBlock",
															"src": "10383:125:7",
															"statements": [
																{
																	"nativeSrc": "10398:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10412:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10412:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10402:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10427:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10427:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10470:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10470:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10481:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10481:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10466:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10466:3:7"
																				},
																				"nativeSrc": "10466:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10466:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10490:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10490:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10437:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10437:28:7"
																		},
																		"nativeSrc": "10437:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10437:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10427:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10427:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10170:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10214:9:7",
														"nodeType": "YulTypedName",
														"src": "10214:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10225:7:7",
														"nodeType": "YulTypedName",
														"src": "10225:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10237:6:7",
														"nodeType": "YulTypedName",
														"src": "10237:6:7",
														"type": ""
													}
												],
												"src": "10170:345:7"
											},
											{
												"body": {
													"nativeSrc": "10647:206:7",
													"nodeType": "YulBlock",
													"src": "10647:206:7",
													"statements": [
														{
															"nativeSrc": "10657:26:7",
															"nodeType": "YulAssignment",
															"src": "10657:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10669:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10669:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10680:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10665:3:7"
																},
																"nativeSrc": "10665:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10665:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10657:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10657:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10737:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10737:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10750:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10750:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10761:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10761:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10746:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:7"
																		},
																		"nativeSrc": "10746:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10746:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10693:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10693:43:7"
																},
																"nativeSrc": "10693:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10693:71:7"
															},
															"nativeSrc": "10693:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10693:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10818:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10818:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10842:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:7"
																		},
																		"nativeSrc": "10827:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10774:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10774:43:7"
																},
																"nativeSrc": "10774:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10774:72:7"
															},
															"nativeSrc": "10774:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10774:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10521:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10611:9:7",
														"nodeType": "YulTypedName",
														"src": "10611:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10623:6:7",
														"nodeType": "YulTypedName",
														"src": "10623:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10631:6:7",
														"nodeType": "YulTypedName",
														"src": "10631:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10642:4:7",
														"nodeType": "YulTypedName",
														"src": "10642:4:7",
														"type": ""
													}
												],
												"src": "10521:332:7"
											},
											{
												"body": {
													"nativeSrc": "10985:206:7",
													"nodeType": "YulBlock",
													"src": "10985:206:7",
													"statements": [
														{
															"nativeSrc": "10995:26:7",
															"nodeType": "YulAssignment",
															"src": "10995:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11007:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11007:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11018:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11018:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11003:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:7"
																},
																"nativeSrc": "11003:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11003:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10995:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10995:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11075:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11075:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11088:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11088:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11099:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11099:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11084:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11084:3:7"
																		},
																		"nativeSrc": "11084:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11084:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11031:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11031:43:7"
																},
																"nativeSrc": "11031:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11031:71:7"
															},
															"nativeSrc": "11031:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11031:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11156:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11156:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11169:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11180:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11165:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:7"
																		},
																		"nativeSrc": "11165:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11112:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11112:43:7"
																},
																"nativeSrc": "11112:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11112:72:7"
															},
															"nativeSrc": "11112:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11112:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10859:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10949:9:7",
														"nodeType": "YulTypedName",
														"src": "10949:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10961:6:7",
														"nodeType": "YulTypedName",
														"src": "10961:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10969:6:7",
														"nodeType": "YulTypedName",
														"src": "10969:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10980:4:7",
														"nodeType": "YulTypedName",
														"src": "10980:4:7",
														"type": ""
													}
												],
												"src": "10859:332:7"
											},
											{
												"body": {
													"nativeSrc": "11351:288:7",
													"nodeType": "YulBlock",
													"src": "11351:288:7",
													"statements": [
														{
															"nativeSrc": "11361:26:7",
															"nodeType": "YulAssignment",
															"src": "11361:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11373:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11373:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11384:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11384:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11369:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11369:3:7"
																},
																"nativeSrc": "11369:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11369:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11361:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11361:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11441:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11454:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11454:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11465:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11465:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11450:3:7"
																		},
																		"nativeSrc": "11450:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11450:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11397:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11397:43:7"
																},
																"nativeSrc": "11397:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11397:71:7"
															},
															"nativeSrc": "11397:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11397:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11522:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11522:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11535:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11535:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11546:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11546:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11531:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11531:3:7"
																		},
																		"nativeSrc": "11531:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11531:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11478:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11478:43:7"
																},
																"nativeSrc": "11478:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11478:72:7"
															},
															"nativeSrc": "11478:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11478:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11604:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11604:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11617:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11617:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11628:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11628:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11613:3:7"
																		},
																		"nativeSrc": "11613:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11613:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11560:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11560:43:7"
																},
																"nativeSrc": "11560:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11560:72:7"
															},
															"nativeSrc": "11560:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11560:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11197:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11307:9:7",
														"nodeType": "YulTypedName",
														"src": "11307:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11319:6:7",
														"nodeType": "YulTypedName",
														"src": "11319:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11327:6:7",
														"nodeType": "YulTypedName",
														"src": "11327:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11335:6:7",
														"nodeType": "YulTypedName",
														"src": "11335:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11346:4:7",
														"nodeType": "YulTypedName",
														"src": "11346:4:7",
														"type": ""
													}
												],
												"src": "11197:442:7"
											},
											{
												"body": {
													"nativeSrc": "11689:147:7",
													"nodeType": "YulBlock",
													"src": "11689:147:7",
													"statements": [
														{
															"nativeSrc": "11699:25:7",
															"nodeType": "YulAssignment",
															"src": "11699:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11722:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11722:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11704:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11704:17:7"
																},
																"nativeSrc": "11704:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11704:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11699:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11699:1:7"
																}
															]
														},
														{
															"nativeSrc": "11733:25:7",
															"nodeType": "YulAssignment",
															"src": "11733:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11756:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11756:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11738:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11738:17:7"
																},
																"nativeSrc": "11738:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11738:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11733:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11733:1:7"
																}
															]
														},
														{
															"nativeSrc": "11767:16:7",
															"nodeType": "YulAssignment",
															"src": "11767:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11778:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11778:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11781:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11781:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11774:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11774:3:7"
																},
																"nativeSrc": "11774:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11774:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11767:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11807:22:7",
																"nodeType": "YulBlock",
																"src": "11807:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11809:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11809:16:7"
																			},
																			"nativeSrc": "11809:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11809:18:7"
																		},
																		"nativeSrc": "11809:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11809:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11799:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11799:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11802:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11802:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11796:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11796:2:7"
																},
																"nativeSrc": "11796:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11796:10:7"
															},
															"nativeSrc": "11793:36:7",
															"nodeType": "YulIf",
															"src": "11793:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11645:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11676:1:7",
														"nodeType": "YulTypedName",
														"src": "11676:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11679:1:7",
														"nodeType": "YulTypedName",
														"src": "11679:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11685:3:7",
														"nodeType": "YulTypedName",
														"src": "11685:3:7",
														"type": ""
													}
												],
												"src": "11645:191:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"969": [
									{
										"length": 32,
										"start": 1468
									},
									{
										"length": 32,
										"start": 1948
									},
									{
										"length": 32,
										"start": 2056
									},
									{
										"length": 32,
										"start": 2414
									},
									{
										"length": 32,
										"start": 2971
									},
									{
										"length": 32,
										"start": 3345
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f80fd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611693565b60405180910390f35b6101cb60048036038101906101c691906116e1565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f69190611766565b610727565b60405161020891906117be565b60405180910390f35b61022b600480360381019061022691906116e1565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117d7565b610763565b60405161028691906117be565b60405180910390f35b610297610791565b6040516102a49190611842565b60405180910390f35b6102b5610799565b6040516102c2919061186a565b60405180910390f35b6102e560048036038101906102e09190611883565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116e1565b6107e9565b60405161032291906115f0565b60405180910390f35b610345600480360381019061034091906118ae565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611883565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a091906118ae565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611693565b60405180910390f35b6103f360048036038101906103ee9190611766565b610b11565b60405161040091906117be565b60405180910390f35b610423600480360381019061041e91906116e1565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118ec565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118ec565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611883565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116e1565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611883565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611883565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e919061193c565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116e1565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610613919061186a565b602060405180830381865afa15801561062e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610652919061198e565b905090565b606060038054610666906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119e6565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f806106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a43565b6107189190611ab1565b61071f565b825b915050919050565b5f80610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f8061076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ae1565b6020604051808303815f875af115801561087f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b40565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b6b565b60405180910390a392915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ae1565b6020604051808303815f875af11580156109e5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b40565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b6b565b60405180910390a392915050565b606060048054610a90906119e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119e6565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f80610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b92565b6020604051808303815f875af1158015610c10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b40565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b6b565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b92565b6020604051808303815f875af1158015610d86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b40565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b6b565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f80610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a43565b610e8a9190611ab1565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611bb9565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611069919061186a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d9919061186a565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611159919061186a565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d8919061186a565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611257919061186a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c7919061186a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bee565b925050819055506114dd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611bb9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611640578082015181840152602081019050611625565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61166582611609565b61166f8185611613565b935061167f818560208601611623565b6116888161164b565b840191505092915050565b5f6020820190508181035f8301526116ab818461165b565b905092915050565b5f80fd5b6116c0816115d8565b81146116ca575f80fd5b50565b5f813590506116db816116b7565b92915050565b5f602082840312156116f6576116f56116b3565b5b5f611703848285016116cd565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117358261170c565b9050919050565b6117458161172b565b811461174f575f80fd5b50565b5f813590506117608161173c565b92915050565b5f806040838503121561177c5761177b6116b3565b5b5f61178985828601611752565b925050602061179a858286016116cd565b9150509250929050565b5f8115159050919050565b6117b8816117a4565b82525050565b5f6020820190506117d15f8301846117af565b92915050565b5f805f606084860312156117ee576117ed6116b3565b5b5f6117fb86828701611752565b935050602061180c86828701611752565b925050604061181d868287016116cd565b9150509250925092565b5f60ff82169050919050565b61183c81611827565b82525050565b5f6020820190506118555f830184611833565b92915050565b6118648161172b565b82525050565b5f60208201905061187d5f83018461185b565b92915050565b5f60208284031215611898576118976116b3565b5b5f6118a584828501611752565b91505092915050565b5f80604083850312156118c4576118c36116b3565b5b5f6118d1858286016116cd565b92505060206118e285828601611752565b9150509250929050565b5f805f60608486031215611903576119026116b3565b5b5f611910868287016116cd565b935050602061192186828701611752565b925050604061193286828701611752565b9150509250925092565b5f8060408385031215611952576119516116b3565b5b5f61195f85828601611752565b925050602061197085828601611752565b9150509250929050565b5f81519050611988816116b7565b92915050565b5f602082840312156119a3576119a26116b3565b5b5f6119b08482850161197a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119fd57607f821691505b602082108103611a1057611a0f6119b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4d826115d8565b9150611a58836115d8565b9250828202611a66816115d8565b91508282048414831517611a7d57611a7c611a16565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611abb826115d8565b9150611ac6836115d8565b925082611ad657611ad5611a84565b5b828204905092915050565b5f606082019050611af45f83018661185b565b611b01602083018561185b565b611b0e60408301846115e1565b949350505050565b611b1f816117a4565b8114611b29575f80fd5b50565b5f81519050611b3a81611b16565b92915050565b5f60208284031215611b5557611b546116b3565b5b5f611b6284828501611b2c565b91505092915050565b5f604082019050611b7e5f8301856115e1565b611b8b60208301846115e1565b9392505050565b5f604082019050611ba55f83018561185b565b611bb260208301846115e1565b9392505050565b5f606082019050611bcc5f83018661185b565b611bd960208301856115e1565b611be660408301846115e1565b949350505050565b5f611bf8826115d8565b9150611c03836115d8565b9250828201905080821115611c1b57611c1a611a16565b5b9291505056fea26469706673582212202f372bcb9a5915b5b126e0de26a46c5c8cc18d8a7f701634d9975faa908eb93264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1640 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1625 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1665 DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x166F DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x167F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x1688 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16AB DUP2 DUP5 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C0 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16DB DUP2 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x16F5 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1703 DUP5 DUP3 DUP6 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1735 DUP3 PUSH2 0x170C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1745 DUP2 PUSH2 0x172B JUMP JUMPDEST DUP2 EQ PUSH2 0x174F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1760 DUP2 PUSH2 0x173C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1789 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x179A DUP6 DUP3 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17FB DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x180C DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x181D DUP7 DUP3 DUP8 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1827 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1855 PUSH0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1864 DUP2 PUSH2 0x172B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187D PUSH0 DUP4 ADD DUP5 PUSH2 0x185B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1898 JUMPI PUSH2 0x1897 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C3 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI PUSH2 0x1902 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1910 DUP7 DUP3 DUP8 ADD PUSH2 0x16CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1921 DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1932 DUP7 DUP3 DUP8 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1952 JUMPI PUSH2 0x1951 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195F DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1970 DUP6 DUP3 DUP7 ADD PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH2 0x19A2 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19B0 DUP5 DUP3 DUP6 ADD PUSH2 0x197A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x19B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4D DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A58 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A66 DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x1A16 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1ABB DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC6 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x1A84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF4 PUSH0 DUP4 ADD DUP7 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1B01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1B0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x17A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B3A DUP2 PUSH2 0x1B16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B55 JUMPI PUSH2 0x1B54 PUSH2 0x16B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B62 DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7E PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH0 DUP4 ADD DUP6 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCC PUSH0 DUP4 ADD DUP7 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x1BD9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF8 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C03 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1A16 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F CALLDATACOPY 0x2B 0xCB SWAP11 MSIZE ISZERO 0xB5 0xB1 0x26 0xE0 0xDE 0x26 LOG4 PUSH13 0x5C8CC18D8A7F701634D9975FAA SWAP1 DUP15 0xB9 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:4619:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:161;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3376:348:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4025:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:103:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4359:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4193:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:487;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:485:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3897:122:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1548:644;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2198:645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4473:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3016:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4584:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4721:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3730:161:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849;2901:7;2972:6;:16;;;2997:4;2972:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2965:38;;2849:161;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3376:348:6:-;3478:7;3501:14;3518:13;:11;:13::i;:::-;3501:30;;3671:1;3661:6;:11;:56;;3711:6;3694:13;:11;:13::i;:::-;3685:6;:22;;;;:::i;:::-;3684:33;;;;:::i;:::-;3661:56;;;3675:6;3661:56;3654:63;;;3376:348;;;:::o;3998:186:2:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;4025:162:6:-;4127:7;4157:23;4173:6;4157:15;:23::i;:::-;4150:30;;4025:162;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;455:103:6:-;510:7;544:6;529:22;;455:103;:::o;4359:108::-;4417:7;4443:17;4436:24;;4359:108;;;:::o;4193:160::-;4293:7;4323:23;4339:6;4323:15;:23::i;:::-;4316:30;;4193:160;;;:::o;564:487::-;680:14;784:22;799:6;784:14;:22::i;:::-;775:31;;864:6;:19;;;884:10;904:4;911:6;864:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;928:23;934:8;944:6;928:5;:23::i;:::-;1019:8;999:45;;1007:10;999:45;;;1029:6;1037;999:45;;;;;;;:::i;:::-;;;;;;;;564:487;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1057:485:6:-;1170:14;1279:19;1291:6;1279:11;:19::i;:::-;1270:28;;1355:6;:19;;;1375:10;1395:4;1402:6;1355:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1419:23;1425:8;1435:6;1419:5;:23::i;:::-;1510:8;1490:45;;1498:10;1490:45;;;1520:6;1528;1490:45;;;;;;;:::i;:::-;;;;;;;;1057:485;;;;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3897:122:6:-;3963:7;3989:23;4005:6;3989:15;:23::i;:::-;3982:30;;3897:122;;;:::o;1548:644::-;1669:14;1770:23;1786:6;1770:15;:23::i;:::-;1761:32;;1888:5;1874:19;;:10;:19;;;1870:92;;1909:42;1925:5;1932:10;1944:6;1909:15;:42::i;:::-;1870:92;2020:20;2026:5;2033:6;2020:5;:20::i;:::-;2050:6;:15;;;2066:8;2076:6;2050:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2163:5;2132:53;;2153:8;2132:53;;2141:10;2132:53;;;2170:6;2178;2132:53;;;;;;;:::i;:::-;;;;;;;;1548:644;;;;;:::o;2198:645::-;2317:14;2422:21;2436:6;2422:13;:21::i;:::-;2413:30;;2538:5;2524:19;;:10;:19;;;2520:92;;2559:42;2575:5;2582:10;2594:6;2559:15;:42::i;:::-;2520:92;2670:20;2676:5;2683:6;2670:5;:20::i;:::-;2700:6;:15;;;2716:8;2726:6;2700:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2814:5;2783:53;;2804:8;2783:53;;2792:10;2783:53;;;2821:6;2829;2783:53;;;;;;;:::i;:::-;;;;;;;;2198:645;;;;;:::o;4473:105::-;4528:7;4554:17;4547:24;;4473:105;;;:::o;3016:354::-;3118:7;3141:14;3158:13;:11;:13::i;:::-;3141:30;;3317:1;3307:6;:11;:56;;3350:13;:11;:13::i;:::-;3340:6;3331;:15;;;;:::i;:::-;3330:33;;;;:::i;:::-;3307:56;;;3321:6;3307:56;3300:63;;;3016:354;;;:::o;4584:131::-;4649:7;4675:33;4691:16;4701:5;4691:9;:16::i;:::-;4675:15;:33::i;:::-;4668:40;;4584:131;;;:::o;4721:112::-;4784:7;4810:16;4820:5;4810:9;:16::i;:::-;4803:23;;4721:112;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3730:161:6:-;3831:7;3861:23;3877:6;3861:15;:23::i;:::-;3854:30;;3730:161;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:122;2184:24;2202:5;2184:24;:::i;:::-;2177:5;2174:35;2164:63;;2223:1;2220;2213:12;2164:63;2111:122;:::o;2239:139::-;2285:5;2323:6;2310:20;2301:29;;2339:33;2366:5;2339:33;:::i;:::-;2239:139;;;;:::o;2384:329::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:53;2688:7;2679:6;2668:9;2664:22;2643:53;:::i;:::-;2633:63;;2589:117;2384:329;;;;:::o;2719:126::-;2756:7;2796:42;2789:5;2785:54;2774:65;;2719:126;;;:::o;2851:96::-;2888:7;2917:24;2935:5;2917:24;:::i;:::-;2906:35;;2851:96;;;:::o;2953:122::-;3026:24;3044:5;3026:24;:::i;:::-;3019:5;3016:35;3006:63;;3065:1;3062;3055:12;3006:63;2953:122;:::o;3081:139::-;3127:5;3165:6;3152:20;3143:29;;3181:33;3208:5;3181:33;:::i;:::-;3081:139;;;;:::o;3226:474::-;3294:6;3302;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3448:117;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3226:474;;;;;:::o;3706:90::-;3740:7;3783:5;3776:13;3769:21;3758:32;;3706:90;;;:::o;3802:109::-;3883:21;3898:5;3883:21;:::i;:::-;3878:3;3871:34;3802:109;;:::o;3917:210::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:65;4117:1;4106:9;4102:17;4093:6;4055:65;:::i;:::-;3917:210;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:329::-;5599:6;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5540:329;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:619::-;6432:6;6440;6448;6497:2;6485:9;6476:7;6472:23;6468:32;6465:119;;;6503:79;;:::i;:::-;6465:119;6623:1;6648:53;6693:7;6684:6;6673:9;6669:22;6648:53;:::i;:::-;6638:63;;6594:117;6750:2;6776:53;6821:7;6812:6;6801:9;6797:22;6776:53;:::i;:::-;6766:63;;6721:118;6878:2;6904:53;6949:7;6940:6;6929:9;6925:22;6904:53;:::i;:::-;6894:63;;6849:118;6355:619;;;;;:::o;6980:474::-;7048:6;7056;7105:2;7093:9;7084:7;7080:23;7076:32;7073:119;;;7111:79;;:::i;:::-;7073:119;7231:1;7256:53;7301:7;7292:6;7281:9;7277:22;7256:53;:::i;:::-;7246:63;;7202:117;7358:2;7384:53;7429:7;7420:6;7409:9;7405:22;7384:53;:::i;:::-;7374:63;;7329:118;6980:474;;;;;:::o;7460:143::-;7517:5;7548:6;7542:13;7533:22;;7564:33;7591:5;7564:33;:::i;:::-;7460:143;;;;:::o;7609:351::-;7679:6;7728:2;7716:9;7707:7;7703:23;7699:32;7696:119;;;7734:79;;:::i;:::-;7696:119;7854:1;7879:64;7935:7;7926:6;7915:9;7911:22;7879:64;:::i;:::-;7869:74;;7825:128;7609:351;;;;:::o;7966:180::-;8014:77;8011:1;8004:88;8111:4;8108:1;8101:15;8135:4;8132:1;8125:15;8152:320;8196:6;8233:1;8227:4;8223:12;8213:22;;8280:1;8274:4;8270:12;8301:18;8291:81;;8357:4;8349:6;8345:17;8335:27;;8291:81;8419:2;8411:6;8408:14;8388:18;8385:38;8382:84;;8438:18;;:::i;:::-;8382:84;8203:269;8152:320;;;:::o;8478:180::-;8526:77;8523:1;8516:88;8623:4;8620:1;8613:15;8647:4;8644:1;8637:15;8664:410;8704:7;8727:20;8745:1;8727:20;:::i;:::-;8722:25;;8761:20;8779:1;8761:20;:::i;:::-;8756:25;;8816:1;8813;8809:9;8838:30;8856:11;8838:30;:::i;:::-;8827:41;;9017:1;9008:7;9004:15;9001:1;8998:22;8978:1;8971:9;8951:83;8928:139;;9047:18;;:::i;:::-;8928:139;8712:362;8664:410;;;;:::o;9080:180::-;9128:77;9125:1;9118:88;9225:4;9222:1;9215:15;9249:4;9246:1;9239:15;9266:185;9306:1;9323:20;9341:1;9323:20;:::i;:::-;9318:25;;9357:20;9375:1;9357:20;:::i;:::-;9352:25;;9396:1;9386:35;;9401:18;;:::i;:::-;9386:35;9443:1;9440;9436:9;9431:14;;9266:185;;;;:::o;9457:442::-;9606:4;9644:2;9633:9;9629:18;9621:26;;9657:71;9725:1;9714:9;9710:17;9701:6;9657:71;:::i;:::-;9738:72;9806:2;9795:9;9791:18;9782:6;9738:72;:::i;:::-;9820;9888:2;9877:9;9873:18;9864:6;9820:72;:::i;:::-;9457:442;;;;;;:::o;9905:116::-;9975:21;9990:5;9975:21;:::i;:::-;9968:5;9965:32;9955:60;;10011:1;10008;10001:12;9955:60;9905:116;:::o;10027:137::-;10081:5;10112:6;10106:13;10097:22;;10128:30;10152:5;10128:30;:::i;:::-;10027:137;;;;:::o;10170:345::-;10237:6;10286:2;10274:9;10265:7;10261:23;10257:32;10254:119;;;10292:79;;:::i;:::-;10254:119;10412:1;10437:61;10490:7;10481:6;10470:9;10466:22;10437:61;:::i;:::-;10427:71;;10383:125;10170:345;;;;:::o;10521:332::-;10642:4;10680:2;10669:9;10665:18;10657:26;;10693:71;10761:1;10750:9;10746:17;10737:6;10693:71;:::i;:::-;10774:72;10842:2;10831:9;10827:18;10818:6;10774:72;:::i;:::-;10521:332;;;;;:::o;10859:::-;10980:4;11018:2;11007:9;11003:18;10995:26;;11031:71;11099:1;11088:9;11084:17;11075:6;11031:71;:::i;:::-;11112:72;11180:2;11169:9;11165:18;11156:6;11112:72;:::i;:::-;10859:332;;;;;:::o;11197:442::-;11346:4;11384:2;11373:9;11369:18;11361:26;;11397:71;11465:1;11454:9;11450:17;11441:6;11397:71;:::i;:::-;11478:72;11546:2;11535:9;11531:18;11522:6;11478:72;:::i;:::-;11560;11628:2;11617:9;11613:18;11604:6;11560:72;:::i;:::-;11197:442;;;;;;:::o;11645:191::-;11685:3;11704:20;11722:1;11704:20;:::i;:::-;11699:25;;11738:20;11756:1;11738:20;:::i;:::-;11733:25;;11781:1;11778;11774:9;11767:16;;11802:3;11799:1;11796:10;11793:36;;;11809:18;;:::i;:::-;11793:36;11645:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1451000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"asset()": "infinite",
								"balanceOf(address)": "2852",
								"convertToAssets(uint256)": "infinite",
								"convertToShares(uint256)": "infinite",
								"decimals()": "383",
								"deposit(uint256,address)": "infinite",
								"maxDeposit(address)": "730",
								"maxMint(address)": "708",
								"maxRedeem(address)": "2937",
								"maxWithdraw(address)": "infinite",
								"mint(uint256,address)": "infinite",
								"name()": "infinite",
								"previewDeposit(uint256)": "infinite",
								"previewMint(uint256)": "infinite",
								"previewRedeem(uint256)": "infinite",
								"previewWithdraw(uint256)": "infinite",
								"redeem(uint256,address,address)": "infinite",
								"symbol()": "infinite",
								"totalAssets()": "infinite",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw(uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 295,
									"end": 449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 295,
									"end": 449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 401,
									"end": 406,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 408,
									"end": 415,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 436,
									"end": 442,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 427,
									"end": 442,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 295,
									"end": 449,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1111,
									"end": 1123,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1346,
									"end": 1353,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1334,
									"end": 1339,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1532,
									"end": 1533,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1663,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1763,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1772,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 1748,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1773,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1776,
									"end": 1794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1826,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1827,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1873,
									"end": 1879,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1900,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1955,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1929,
									"end": 1962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2208,
									"end": 2214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2186,
									"end": 2215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2275,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2534,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2288,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2370,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2399,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2390,
									"end": 2391,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2387,
									"end": 2400,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2479,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2480,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2463,
									"end": 2481,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2460,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2454,
									"end": 2457,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2450,
									"end": 2461,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2417,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2408,
									"end": 2418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2403,
									"end": 2418,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2403,
									"end": 2418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2379,
									"end": 2492,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2526,
									"end": 2527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 2523,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2508,
									"end": 2524,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2501,
									"end": 2528,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2350,
									"end": 2534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2634,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2670,
									"end": 2719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2670,
									"end": 2719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2670,
									"end": 2719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2670,
									"end": 2719,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2670,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2654,
									"end": 2720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2720,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2654,
									"end": 2720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2720,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2720,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2741,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2729,
									"end": 2750,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2774,
									"end": 2779,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2770,
									"end": 2786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2819,
									"end": 2822,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2810,
									"end": 2816,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2805,
									"end": 2808,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2801,
									"end": 2817,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2798,
									"end": 2823,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2795,
									"end": 2907,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2795,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2795,
									"end": 2907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2905,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2826,
									"end": 2905,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2826,
									"end": 2905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2905,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2826,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2795,
									"end": 2907,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2795,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2916,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 2961,
									"end": 2967,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2959,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2954,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2916,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2916,
									"end": 2968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2916,
									"end": 2968,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 2916,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2635,
									"end": 2974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2540,
									"end": 2974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3061,
									"end": 3066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3110,
									"end": 3113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3103,
									"end": 3107,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3095,
									"end": 3101,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3114,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3118,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3118,
									"end": 3197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3197,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3118,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3077,
									"end": 3199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3228,
									"end": 3234,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3235,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3253,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3339,
									"end": 3342,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3331,
									"end": 3337,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3328,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3316,
									"end": 3322,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3312,
									"end": 3329,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3253,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3253,
									"end": 3343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3253,
									"end": 3343,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3253,
									"end": 3343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3244,
									"end": 3343,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3244,
									"end": 3343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3349,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3476,
									"end": 3482,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3484,
									"end": 3490,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3492,
									"end": 3498,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3541,
									"end": 3543,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3529,
									"end": 3538,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3527,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3516,
									"end": 3539,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3512,
									"end": 3544,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3628,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3628,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3509,
									"end": 3628,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3547,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3547,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3626,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3547,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3628,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3509,
									"end": 3628,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3668,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3692,
									"end": 3769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3761,
									"end": 3768,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3752,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3741,
									"end": 3750,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3737,
									"end": 3759,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 3692,
									"end": 3769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3692,
									"end": 3769,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3692,
									"end": 3769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3769,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3638,
									"end": 3779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3828,
									"end": 3837,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3824,
									"end": 3842,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3843,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3870,
									"end": 3888,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3862,
									"end": 3868,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3859,
									"end": 3889,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3973,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3856,
									"end": 3973,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3971,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 3892,
									"end": 3971,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3892,
									"end": 3971,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3971,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 3892,
									"end": 3971,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3973,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3856,
									"end": 3973,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3997,
									"end": 4071,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4063,
									"end": 4070,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4060,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4052,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4039,
									"end": 4061,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3997,
									"end": 4071,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3997,
									"end": 4071,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3997,
									"end": 4071,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 3997,
									"end": 4071,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4071,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3987,
									"end": 4071,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3789,
									"end": 4081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4141,
									"end": 4143,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4130,
									"end": 4139,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4126,
									"end": 4144,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4145,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4172,
									"end": 4190,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4164,
									"end": 4170,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4191,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4158,
									"end": 4275,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4158,
									"end": 4275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4158,
									"end": 4275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4194,
									"end": 4273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4194,
									"end": 4273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4194,
									"end": 4273,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4194,
									"end": 4273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4158,
									"end": 4275,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4158,
									"end": 4275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4365,
									"end": 4372,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4356,
									"end": 4362,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4354,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4341,
									"end": 4363,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4299,
									"end": 4373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4299,
									"end": 4373,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4299,
									"end": 4373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4373,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3355,
									"end": 4390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4495,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4396,
									"end": 4495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4448,
									"end": 4454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4488,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4488,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4466,
									"end": 4488,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4495,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4495,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4495,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4681,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4501,
									"end": 4681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4626,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4546,
									"end": 4547,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4539,
									"end": 4627,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4650,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4643,
									"end": 4644,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4636,
									"end": 4651,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4670,
									"end": 4674,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4667,
									"end": 4668,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4660,
									"end": 4675,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 5007,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4687,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4731,
									"end": 4737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4768,
									"end": 4769,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4758,
									"end": 4770,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4770,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4815,
									"end": 4816,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4809,
									"end": 4813,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4805,
									"end": 4817,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4836,
									"end": 4854,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4826,
									"end": 4907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4826,
									"end": 4907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4892,
									"end": 4896,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4884,
									"end": 4890,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4897,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4870,
									"end": 4897,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4870,
									"end": 4897,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4826,
									"end": 4907,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4826,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4956,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 4952,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4943,
									"end": 4957,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4923,
									"end": 4941,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4917,
									"end": 5001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4917,
									"end": 5001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4973,
									"end": 4991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4973,
									"end": 4991,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4917,
									"end": 5001,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4917,
									"end": 5001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4738,
									"end": 5007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 5007,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 5007,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 5007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 5007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5154,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 5013,
									"end": 5154,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5062,
									"end": 5066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5085,
									"end": 5088,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5088,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5088,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5108,
									"end": 5111,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5106,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5098,
									"end": 5112,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5142,
									"end": 5146,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5139,
									"end": 5140,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5129,
									"end": 5147,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5147,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5147,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5154,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5154,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5154,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5253,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5160,
									"end": 5253,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5203,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5244,
									"end": 5246,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5239,
									"end": 5241,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5232,
									"end": 5237,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5228,
									"end": 5242,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5224,
									"end": 5247,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5247,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5247,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5253,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5253,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5253,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5160,
									"end": 5253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5303,
									"end": 5311,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 5358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5343,
									"end": 5359,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5322,
									"end": 5359,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5322,
									"end": 5359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5441,
									"end": 5447,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5491,
									"end": 5492,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5479,
									"end": 5489,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5475,
									"end": 5493,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5514,
									"end": 5611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5544,
									"end": 5610,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5533,
									"end": 5542,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5514,
									"end": 5611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5514,
									"end": 5611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5514,
									"end": 5611,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 5514,
									"end": 5611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5662,
									"end": 5670,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5651,
									"end": 5660,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5632,
									"end": 5671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5671,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5632,
									"end": 5671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5671,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5708,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5709,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5698,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5689,
									"end": 5710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5680,
									"end": 5710,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5680,
									"end": 5710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5753,
									"end": 5757,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5743,
									"end": 5751,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5739,
									"end": 5758,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5732,
									"end": 5737,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5729,
									"end": 5759,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5759,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5759,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5448,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5448,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5765,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5848,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5771,
									"end": 5848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5808,
									"end": 5815,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5837,
									"end": 5842,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5826,
									"end": 5842,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5826,
									"end": 5842,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5848,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5854,
									"end": 5914,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5854,
									"end": 5914,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5882,
									"end": 5885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5903,
									"end": 5908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5908,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5908,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5854,
									"end": 5914,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5854,
									"end": 5914,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5854,
									"end": 5914,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5854,
									"end": 5914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 6062,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5920,
									"end": 6062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5979,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6003,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6021,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6030,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6048,
									"end": 6053,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6054,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 6030,
									"end": 6054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6054,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6030,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 6021,
									"end": 6055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6021,
									"end": 6055,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 6021,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6003,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 6003,
									"end": 6056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6003,
									"end": 6056,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 6003,
									"end": 6056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 6062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 6062,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 6062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 6062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6143,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6068,
									"end": 6143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6111,
									"end": 6114,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6132,
									"end": 6137,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6143,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6143,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6143,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6068,
									"end": 6143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6418,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6149,
									"end": 6418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6259,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 6290,
									"end": 6297,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6259,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 6259,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6259,
									"end": 6298,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 6259,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6369,
									"end": 6410,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6393,
									"end": 6409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6410,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6369,
									"end": 6410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6410,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6369,
									"end": 6410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6361,
									"end": 6367,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6354,
									"end": 6358,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6348,
									"end": 6359,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6320,
									"end": 6411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6411,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 6320,
									"end": 6411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6314,
									"end": 6318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6307,
									"end": 6412,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6225,
									"end": 6418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6149,
									"end": 6418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6424,
									"end": 6497,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6424,
									"end": 6497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6469,
									"end": 6472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6424,
									"end": 6497,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6424,
									"end": 6497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6503,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6580,
									"end": 6612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6580,
									"end": 6612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6580,
									"end": 6612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6580,
									"end": 6612,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6580,
									"end": 6612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6621,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6679,
									"end": 6685,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6671,
									"end": 6677,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6665,
									"end": 6669,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6621,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6621,
									"end": 6686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6621,
									"end": 6686,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 6621,
									"end": 6686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6556,
									"end": 6692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6503,
									"end": 6692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6698,
									"end": 6884,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6698,
									"end": 6884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6775,
									"end": 6778,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6768,
									"end": 6773,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6765,
									"end": 6779,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6866,
									"end": 6867,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6859,
									"end": 6864,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6829,
									"end": 6868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6829,
									"end": 6868,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6829,
									"end": 6868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6803,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6795,
									"end": 6800,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6804,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6782,
									"end": 6804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6782,
									"end": 6804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6758,
									"end": 6878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6698,
									"end": 6884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6698,
									"end": 6884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6698,
									"end": 6884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7433,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6890,
									"end": 7433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6991,
									"end": 6993,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6986,
									"end": 6989,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6983,
									"end": 6994,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6980,
									"end": 7426,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6980,
									"end": 7426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6980,
									"end": 7426,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7057,
									"end": 7062,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 7025,
									"end": 7063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7025,
									"end": 7063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7127,
									"end": 7137,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7109,
									"end": 7138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7138,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7109,
									"end": 7138,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7099,
									"end": 7107,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7095,
									"end": 7139,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7292,
									"end": 7294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7280,
									"end": 7290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7277,
									"end": 7295,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7274,
									"end": 7323,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7274,
									"end": 7323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7274,
									"end": 7323,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7313,
									"end": 7321,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7298,
									"end": 7321,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7298,
									"end": 7321,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7274,
									"end": 7323,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 7274,
									"end": 7323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7392,
									"end": 7414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7410,
									"end": 7413,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7392,
									"end": 7414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7392,
									"end": 7414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7392,
									"end": 7414,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7392,
									"end": 7414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7382,
									"end": 7390,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7378,
									"end": 7415,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7365,
									"end": 7376,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7336,
									"end": 7416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7416,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 7336,
									"end": 7416,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6995,
									"end": 7426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6995,
									"end": 7426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6980,
									"end": 7426,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6980,
									"end": 7426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7433,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6890,
									"end": 7433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7493,
									"end": 7501,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7543,
									"end": 7548,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7537,
									"end": 7541,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7533,
									"end": 7549,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7639,
									"end": 7690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 7687,
									"end": 7688,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7683,
									"end": 7689,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7675,
									"end": 7680,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7672,
									"end": 7673,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7668,
									"end": 7681,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7639,
									"end": 7690,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7639,
									"end": 7690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7639,
									"end": 7690,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 7639,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7691,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7720,
									"end": 7724,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7714,
									"end": 7718,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7710,
									"end": 7725,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7700,
									"end": 7725,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7700,
									"end": 7725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7812,
									"end": 7816,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7958,
									"end": 7987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 7983,
									"end": 7986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7977,
									"end": 7981,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7958,
									"end": 7987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7958,
									"end": 7987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7958,
									"end": 7987,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 7958,
									"end": 7987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 7987,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 7987,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8020,
									"end": 8023,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8017,
									"end": 8018,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8013,
									"end": 8024,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8007,
									"end": 8011,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8004,
									"end": 8025,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7996,
									"end": 8025,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7996,
									"end": 8025,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 8031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8036,
									"end": 9431,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 8036,
									"end": 9431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8153,
									"end": 8190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8186,
									"end": 8189,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8153,
									"end": 8190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 8153,
									"end": 8190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8153,
									"end": 8190,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8153,
									"end": 8190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8255,
									"end": 8273,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8247,
									"end": 8253,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8244,
									"end": 8274,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 8297,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8241,
									"end": 8297,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8277,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8277,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 8277,
									"end": 8295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8277,
									"end": 8295,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8277,
									"end": 8295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8241,
									"end": 8297,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8241,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8321,
									"end": 8359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8353,
									"end": 8357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8347,
									"end": 8358,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8321,
									"end": 8359,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 8321,
									"end": 8359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8321,
									"end": 8359,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8321,
									"end": 8359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8406,
									"end": 8473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 8466,
									"end": 8472,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8464,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8452,
									"end": 8456,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8406,
									"end": 8473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8406,
									"end": 8473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8406,
									"end": 8473,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 8406,
									"end": 8473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8500,
									"end": 8501,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8524,
									"end": 8528,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8511,
									"end": 8528,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8511,
									"end": 8528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8556,
									"end": 8558,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8548,
									"end": 8554,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8545,
									"end": 8559,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8574,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9230,
									"end": 9231,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9247,
									"end": 9253,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9244,
									"end": 9321,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9244,
									"end": 9321,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 9244,
									"end": 9321,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9296,
									"end": 9305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9291,
									"end": 9294,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9287,
									"end": 9306,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9281,
									"end": 9307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9272,
									"end": 9307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9244,
									"end": 9321,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 9244,
									"end": 9321,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9347,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9405,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9347,
									"end": 9414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 9347,
									"end": 9414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9347,
									"end": 9414,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 9347,
									"end": 9414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9341,
									"end": 9345,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9334,
									"end": 9415,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9203,
									"end": 9425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8538,
									"end": 9425,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 8538,
									"end": 9425,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8568,
									"end": 9186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8624,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8616,
									"end": 8625,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8614,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8604,
									"end": 8626,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8686,
									"end": 8690,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8654,
									"end": 8691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8691,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8654,
									"end": 8691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8714,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8741,
									"end": 8748,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 8739,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8735,
									"end": 8749,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8820,
									"end": 8829,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8815,
									"end": 8818,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 8830,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8805,
									"end": 8831,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8797,
									"end": 8803,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8790,
									"end": 8832,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8871,
									"end": 8872,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8863,
									"end": 8869,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8859,
									"end": 8873,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8849,
									"end": 8873,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8849,
									"end": 8873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8918,
									"end": 8920,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8907,
									"end": 8916,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8921,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8921,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8768,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8761,
									"end": 8762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8757,
									"end": 8769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8769,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8769,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 8727,
									"end": 8935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8963,
									"end": 8969,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8954,
									"end": 8961,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 8970,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8948,
									"end": 9127,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8948,
									"end": 9127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 8948,
									"end": 9127,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9021,
									"end": 9030,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9016,
									"end": 9019,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9031,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9006,
									"end": 9032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9064,
									"end": 9112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 9106,
									"end": 9110,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9098,
									"end": 9104,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9094,
									"end": 9111,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9083,
									"end": 9092,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9064,
									"end": 9112,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 9064,
									"end": 9112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9064,
									"end": 9112,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 9064,
									"end": 9112,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9056,
									"end": 9062,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9049,
									"end": 9113,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 9127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8948,
									"end": 9127,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 8948,
									"end": 9127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9173,
									"end": 9174,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9169,
									"end": 9170,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9161,
									"end": 9167,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9157,
									"end": 9171,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9153,
									"end": 9175,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9140,
									"end": 9176,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8575,
									"end": 9186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8575,
									"end": 9186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8575,
									"end": 9186,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8538,
									"end": 9425,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 8538,
									"end": 9425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8538,
									"end": 9425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8036,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8036,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8036,
									"end": 9431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "969"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 4835,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f372bcb9a5915b5b126e0de26a46c5c8cc18d8a7f701634d9975faa908eb93264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "BA087652"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "CE96CB77"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "CE96CB77"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "D905777E"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "EF8B30F7"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "BA087652"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "C63D75B6"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "C6E6F592"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "94BF804D"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "B3D7F6B9"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "B460AF94"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "38D52E0F"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "402D267D"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "4CDAD506"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "6E553F65"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "1E1D114"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "7A2D13A"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "A28A477"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 216,
											"end": 4835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3376,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3376,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3376,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4025,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4025,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4025,
											"end": 4187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 455,
											"end": 558,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 455,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 455,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4359,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4359,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4359,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4193,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4193,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4193,
											"end": 4353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 564,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 564,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 564,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1057,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1057,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3897,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3897,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3897,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1548,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1548,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1548,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2198,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2198,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2198,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4473,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4473,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4473,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3016,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3016,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3016,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4584,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4584,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4584,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4721,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4721,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4721,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3730,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3730,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3730,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2978,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2972,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2972,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2972,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 3010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3478,
											"end": 3485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3515,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3518,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3518,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3531,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3518,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3672,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3694,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3694,
											"end": 3707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3707,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3694,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3685,
											"end": 3707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3684,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3661,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4157,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4180,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4157,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 455,
											"end": 558,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 455,
											"end": 558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 510,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 550,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 529,
											"end": 551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 529,
											"end": 551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 455,
											"end": 558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4417,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4436,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4323,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4346,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4323,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 784,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 784,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 784,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 784,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 775,
											"end": 806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 775,
											"end": 806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 870,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 864,
											"end": 883,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 864,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 884,
											"end": 894,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 904,
											"end": 908,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 911,
											"end": 917,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 864,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 864,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 864,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 934,
											"end": 942,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 928,
											"end": 951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 951,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 928,
											"end": 951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1017,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 999,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 999,
											"end": 1044,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 564,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1279,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1279,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1270,
											"end": 1298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 1355,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1355,
											"end": 1374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1375,
											"end": 1385,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1355,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1355,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1425,
											"end": 1433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1419,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1442,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1419,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH",
											"source": 6,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1490,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1490,
											"end": 1535,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4005,
											"end": 4011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3989,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3989,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 4012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 4012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 4019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1770,
											"end": 1793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1884,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1870,
											"end": 1962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1942,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1909,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1909,
											"end": 1951,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1909,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1870,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2026,
											"end": 2031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2020,
											"end": 2040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2040,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2020,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2065,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2066,
											"end": 2074,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2050,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2050,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2151,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2132,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2185,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 2192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2317,
											"end": 2331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2422,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2422,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2534,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2520,
											"end": 2612,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2575,
											"end": 2580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2592,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2559,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2601,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2559,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2520,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2670,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2715,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2716,
											"end": 2724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2700,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2700,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2783,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2836,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4528,
											"end": 4535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4547,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3158,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3158,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3318,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3350,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3350,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3331,
											"end": 3346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3331,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3330,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3330,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3307,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4701,
											"end": 4706,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4691,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4675,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4675,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4810,
											"end": 4826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4810,
											"end": 4826,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4810,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3861,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 722,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 821,
											"end": 834,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 903,
											"end": 914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 888,
											"end": 891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 884,
											"end": 895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 877,
											"end": 916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 842,
											"end": 852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 837,
											"end": 852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 837,
											"end": 852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 813,
											"end": 926,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 813,
											"end": 926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 946,
											"end": 949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 942,
											"end": 958,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 784,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1042,
											"end": 1070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1198,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1198,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1253,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 1253,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1391,
											"end": 1397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1389,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1377,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1333,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1333,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1423,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1423,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1453,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1629,
											"end": 1676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1766,
											"end": 1770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1693,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1693,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1865,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1975,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1976,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2233,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2111,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2202,
											"end": 2207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2184,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2184,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2209,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2164,
											"end": 2227,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2227,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2164,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2339,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2498,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2498,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2460,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2677,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2643,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2643,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2838,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2839,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2774,
											"end": 2839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2917,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3026,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3026,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3051,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3006,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2953,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3181,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3181,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3357,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3357,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3319,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3502,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3502,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3675,
											"end": 3682,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3664,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3630,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3630,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3620,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3575,
											"end": 3693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3789,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3790,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3898,
											"end": 3903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3883,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3883,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3878,
											"end": 3881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3802,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4055,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4055,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4250,
											"end": 4273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4278,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4281,
											"end": 4360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4281,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4243,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4460,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4426,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4426,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4479,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4599,
											"end": 4606,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4554,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4554,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4682,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4682,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4627,
											"end": 4745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4758,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4933,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4933,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5108,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5108,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6499,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6485,
											"end": 6494,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6476,
											"end": 6483,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6495,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6500,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6503,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6503,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6465,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6693,
											"end": 6700,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6648,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6752,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6821,
											"end": 6828,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6810,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6776,
											"end": 6829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6776,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6949,
											"end": 6956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6904,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6904,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6849,
											"end": 6967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7048,
											"end": 7054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7105,
											"end": 7107,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7091,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7080,
											"end": 7103,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7076,
											"end": 7108,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7192,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7073,
											"end": 7192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7111,
											"end": 7190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7111,
											"end": 7190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7190,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7111,
											"end": 7190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7192,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7073,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7301,
											"end": 7308,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7281,
											"end": 7290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7256,
											"end": 7309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7309,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7246,
											"end": 7309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7384,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7437,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7329,
											"end": 7447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7555,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7591,
											"end": 7596,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7564,
											"end": 7597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7597,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7564,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7714,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7731,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7815,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7696,
											"end": 7815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7734,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7734,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7734,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7815,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7696,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7854,
											"end": 7855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7935,
											"end": 7942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 7932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7924,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7879,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7943,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7879,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7825,
											"end": 7953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 8146,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7966,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8091,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8111,
											"end": 8115,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8472,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8152,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8196,
											"end": 8202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8227,
											"end": 8231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8223,
											"end": 8235,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8274,
											"end": 8278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8291,
											"end": 8372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8362,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8372,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8291,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8411,
											"end": 8417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8422,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8385,
											"end": 8423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8382,
											"end": 8466,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8438,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8438,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8466,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8382,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8203,
											"end": 8472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8478,
											"end": 8658,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8478,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8526,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8523,
											"end": 8524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8623,
											"end": 8627,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8620,
											"end": 8621,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8613,
											"end": 8628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8647,
											"end": 8651,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8652,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8727,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 8747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 8747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8761,
											"end": 8781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8781,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8761,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8781,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8809,
											"end": 8818,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8856,
											"end": 8867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8838,
											"end": 8868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8868,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 8838,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8827,
											"end": 8868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9001,
											"end": 9002,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8998,
											"end": 9020,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 8980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8951,
											"end": 9034,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8928,
											"end": 9067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9047,
											"end": 9065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 9067,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8928,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 9074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 9074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9260,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9080,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9205,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9206,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9225,
											"end": 9229,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9215,
											"end": 9230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9246,
											"end": 9247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9254,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9323,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9323,
											"end": 9343,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9323,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9357,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9377,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 9357,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9377,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9352,
											"end": 9377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9386,
											"end": 9421,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9401,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9421,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9386,
											"end": 9421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9445,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9431,
											"end": 9445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9431,
											"end": 9445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9644,
											"end": 9646,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9633,
											"end": 9642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9621,
											"end": 9647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 9725,
											"end": 9726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 9707,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9657,
											"end": 9728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 9657,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9806,
											"end": 9808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9788,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9738,
											"end": 9810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9738,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9888,
											"end": 9890,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9870,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9820,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 9892,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9820,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9457,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 10021,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 9905,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 9990,
											"end": 9995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9975,
											"end": 9996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 9975,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 9973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9965,
											"end": 9997,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 9955,
											"end": 10015,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10015,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 9955,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 10021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9905,
											"end": 10021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10081,
											"end": 10086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10106,
											"end": 10119,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10152,
											"end": 10157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 10128,
											"end": 10158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10158,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10128,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10288,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10274,
											"end": 10283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10272,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10261,
											"end": 10284,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10289,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 10292,
											"end": 10371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10292,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10254,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10412,
											"end": 10413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10490,
											"end": 10497,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10481,
											"end": 10487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10437,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 10437,
											"end": 10498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10437,
											"end": 10498,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10437,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10427,
											"end": 10498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10427,
											"end": 10498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10170,
											"end": 10515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10680,
											"end": 10682,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10657,
											"end": 10683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10657,
											"end": 10683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10761,
											"end": 10762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10759,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 10763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10693,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10693,
											"end": 10764,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10693,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10831,
											"end": 10840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10774,
											"end": 10846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10846,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 10774,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10521,
											"end": 10853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10980,
											"end": 10984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11007,
											"end": 11016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11003,
											"end": 11021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10995,
											"end": 11021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10995,
											"end": 11021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11031,
											"end": 11102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11099,
											"end": 11100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11088,
											"end": 11097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11084,
											"end": 11101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11081,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11031,
											"end": 11102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 11031,
											"end": 11102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11031,
											"end": 11102,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11031,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11156,
											"end": 11162,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11112,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11184,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11112,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10859,
											"end": 11191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11346,
											"end": 11350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11373,
											"end": 11382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11361,
											"end": 11387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11361,
											"end": 11387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11465,
											"end": 11466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11454,
											"end": 11463,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11450,
											"end": 11467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11441,
											"end": 11447,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 11397,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11468,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11397,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11546,
											"end": 11548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11535,
											"end": 11544,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11531,
											"end": 11549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11522,
											"end": 11528,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11478,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11550,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11478,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11628,
											"end": 11630,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11617,
											"end": 11626,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11604,
											"end": 11610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11560,
											"end": 11632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11560,
											"end": 11632,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11560,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11685,
											"end": 11688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11704,
											"end": 11724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 11756,
											"end": 11757,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11738,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11738,
											"end": 11758,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 11738,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11733,
											"end": 11758,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11733,
											"end": 11758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11767,
											"end": 11783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11767,
											"end": 11783,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11802,
											"end": 11805,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11799,
											"end": 11800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11796,
											"end": 11806,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11829,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11793,
											"end": 11829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11809,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11793,
											"end": 11829,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11793,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC4626.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/program/vault/vault02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/program/vault/vault02.sol\":\"ERC4626\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/program/vault/vault02.sol\":{\"keccak256\":\"0x2a43e53c4e1dd3a79e0ba8486bf25319bfb75b9909a2458a3a90772e5649a248\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58ec764654aca21233dbd887c57b12ed183f3bfdbd8b41040c8cdbcc6ab08fb4\",\"dweb:/ipfs/QmQhjndFUBsmYd8YkM183PYmHev99t5iy3mkkNYbDyY3bc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 329,
								"contract": "contracts/program/vault/vault02.sol:ERC4626",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 335,
								"contract": "contracts/program/vault/vault02.sol:ERC4626",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 337,
								"contract": "contracts/program/vault/vault02.sol:ERC4626",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "contracts/program/vault/vault02.sol:ERC4626",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 341,
								"contract": "contracts/program/vault/vault02.sol:ERC4626",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						],
						"IERC20Metadata": [
							925
						],
						"IERC4626": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 900,
							"src": "133:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "../token/ERC20/extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 926,
							"src": "183:76:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "191:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"421:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "421:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "421:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC20Metadata",
										"nameLocations": [
											"429:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "429:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "429:14:0"
								}
							],
							"canonicalName": "IERC4626",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:137:0",
								"text": " @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."
							},
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169,
								925,
								899
							],
							"name": "IERC4626",
							"nameLocation": "409:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
									"id": 20,
									"name": "Deposit",
									"nameLocation": "456:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "464:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "504:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "488:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "535:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "527:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:79:0"
									},
									"src": "450:93:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db",
									"id": 32,
									"name": "Withdraw",
									"nameLocation": "555:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "573:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "605:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "655:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "639:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:151:0"
									},
									"src": "549:166:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "721:207:0",
										"text": " @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."
									},
									"functionSelector": "38d52e0f",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "942:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "assetTokenAddress",
												"nameLocation": "981:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "973:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:27:0"
									},
									"scope": 169,
									"src": "933:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1006:286:0",
										"text": " @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."
									},
									"functionSelector": "01e1d114",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "1306:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "totalManagedAssets",
												"nameLocation": "1351:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1343:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:28:0"
									},
									"scope": 169,
									"src": "1297:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1377:720:0",
										"text": " @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
									},
									"functionSelector": "c6e6f592",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "2111:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2135:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2127:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:16:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:16:0"
									},
									"scope": 169,
									"src": "2102:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2188:720:0",
										"text": " @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
									},
									"functionSelector": "07a2d13a",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "2922:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:16:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2977:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:16:0"
									},
									"scope": 169,
									"src": "2913:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2999:386:0",
										"text": " @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."
									},
									"functionSelector": "402d267d",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "3399:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "3459:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3451:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:19:0"
									},
									"scope": 169,
									"src": "3390:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3476:1012:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
									},
									"functionSelector": "ef8b30f7",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "4502:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4516:16:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4564:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4556:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:16:0"
									},
									"scope": 169,
									"src": "4493:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "4578:651:0",
										"text": " @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
									},
									"functionSelector": "6e553f65",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5243:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "5259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5275:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5267:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5250:34:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5311:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5302:16:0"
									},
									"scope": 169,
									"src": "5234:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "5325:341:0",
										"text": " @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."
									},
									"functionSelector": "c63d75b6",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "5680:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5696:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "5688:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5687:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "5737:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "5729:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5728:19:0"
									},
									"scope": 169,
									"src": "5671:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "5754:984:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."
									},
									"functionSelector": "b3d7f6b9",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "6752:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "6772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "6764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6763:16:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "6811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "6803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:16:0"
									},
									"scope": 169,
									"src": "6743:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "6825:642:0",
										"text": " @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
									},
									"functionSelector": "94bf804d",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7481:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "7494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7510:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7502:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7485:34:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "7546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7537:16:0"
									},
									"scope": 169,
									"src": "7472:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "7560:293:0",
										"text": " @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."
									},
									"functionSelector": "ce96cb77",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "7867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7887:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "7879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7878:15:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "7925:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "7917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7916:19:0"
									},
									"scope": 169,
									"src": "7858:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "7942:1034:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
									},
									"functionSelector": "0a28a477",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "8990:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "9014:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "9006:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:16:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "9053:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "9045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9044:16:0"
									},
									"scope": 169,
									"src": "8981:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "9067:670:0",
										"text": " @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
									},
									"functionSelector": "b460af94",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "9751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "9768:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9760:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9776:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9802:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9759:49:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "9835:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9826:16:0"
									},
									"scope": 169,
									"src": "9742:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "9849:381:0",
										"text": " @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."
									},
									"functionSelector": "d905777e",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "10244:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10262:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "10254:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10253:15:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "10300:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "10292:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10291:19:0"
									},
									"scope": 169,
									"src": "10235:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "10317:1010:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."
									},
									"functionSelector": "4cdad506",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "11341:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "11363:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "11355:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11354:16:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "11402:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "11394:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:16:0"
									},
									"scope": 169,
									"src": "11332:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "11416:661:0",
										"text": " @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
									},
									"functionSelector": "ba087652",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "12091:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "12106:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12098:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "12122:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12114:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12140:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12132:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12097:49:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "12173:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12164:16:0"
									},
									"scope": 169,
									"src": "12082:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 170,
							"src": "399:11784:0",
							"usedErrors": [],
							"usedEvents": [
								20,
								32,
								833,
								842
							]
						}
					],
					"src": "107:12077:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							306
						],
						"IERC20Errors": [
							211
						],
						"IERC721Errors": [
							259
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 211,
							"linearizedBaseContracts": [
								211
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 181,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 186,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 191,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 200,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 205,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 210,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 307,
							"src": "280:1764:1",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 217,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 222,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 231,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 236,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 241,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 248,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 253,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 258,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 307,
							"src": "2190:2092:1",
							"usedErrors": [
								217,
								222,
								231,
								236,
								241,
								248,
								253,
								258
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 260,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 271,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 276,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 281,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 288,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 293,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 298,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 305,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 307,
							"src": "4430:2107:1",
							"usedErrors": [
								271,
								276,
								281,
								288,
								293,
								298,
								305
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							955
						],
						"ERC20": [
							821
						],
						"IERC20": [
							899
						],
						"IERC20Errors": [
							211
						],
						"IERC20Metadata": [
							925
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 900,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 309,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 926,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 311,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 956,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 313,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 955,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 307,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 315,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 318,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 955,
										"src": "1133:7:2"
									},
									"id": 319,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 320,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "1142:6:2"
									},
									"id": 321,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 322,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "1150:14:2"
									},
									"id": 323,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 324,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 211,
										"src": "1166:12:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 317,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821,
								211,
								925,
								899,
								955
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 329,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 328,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 326,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 334,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 330,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 333,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 332,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 338,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 340,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 353,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 354,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 358,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 821,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 821,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										918
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 373,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 372,
												"id": 374,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 821,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 381,
												"id": 383,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 379,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 821,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										848
									],
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 391,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 392,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 821,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 402,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 405,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 821,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 419,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 416,
												"id": 429,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 821,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 441,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 443,
														"indexExpression": {
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 445,
													"indexExpression": {
														"id": 444,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 446,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 821,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										886
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 458,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 460,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															712,
															772
														],
														"referencedDeclaration": 712,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 457,
												"id": 470,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 821,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										898
									],
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 503,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 484,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 486,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 483,
												"id": 502,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 821,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 515,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 521,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 520,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 526,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 536,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 541,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 544,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 821,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 561,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 562,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																573
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 573,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 598,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 572,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 577,
															"initialValue": {
																"baseExpression": {
																	"id": 574,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 576,
																"indexExpression": {
																	"id": 575,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 578,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 588,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 587,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 583,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 573,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 584,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 586,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 597,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 589,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 591,
																			"indexExpression": {
																				"id": 590,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 592,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 593,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 596,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 567,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 618,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 612,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 617,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 620,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 610,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 606,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 337,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 609,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 821,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 637,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 643,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 642,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 648,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 821,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 670,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 676,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 675,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 681,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 821,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 704,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															712,
															772
														],
														"referencedDeclaration": 772,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 821,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 731,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 740,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 746,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 745,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 751,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 754,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 757,
															"indexExpression": {
																"id": 755,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 759,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 762,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 770,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 765,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 766,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 763,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 768,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 821,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 789,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 791,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 790,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 796,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 806,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 805,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 800,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 801,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 802,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 799,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 804,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 816,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 809,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 810,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 811,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 807,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				712,
																				772
																			],
																			"referencedDeclaration": 772,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 815,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 821,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 822,
							"src": "1106:9787:2",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						]
					},
					"id": 900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 833,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 842,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 899,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 899,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 899,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 899,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 899,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 899,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 900,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						],
						"IERC20Metadata": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 926,
							"sourceUnit": 900,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 902,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 905,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "306:6:4"
									},
									"id": 906,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 904,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 925,
							"linearizedBaseContracts": [
								925,
								899
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 925,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 925,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 921,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 925,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 926,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							955
						]
					},
					"id": 956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 955,
							"linearizedBaseContracts": [
								955
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 933,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 932,
												"id": 935,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 955,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 942,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 941,
												"id": 944,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 955,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 950,
												"id": 952,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 955,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 956,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/program/vault/vault02.sol": {
				"ast": {
					"absolutePath": "contracts/program/vault/vault02.sol",
					"exportedSymbols": {
						"ERC20": [
							821
						],
						"ERC4626": [
							1357
						],
						"IERC20Metadata": [
							925
						],
						"IERC4626": [
							169
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 957,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC4626.sol",
							"id": 959,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 170,
							"src": "56:73:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 958,
										"name": "IERC4626",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 169,
										"src": "64:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 822,
							"src": "130:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 960,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "138:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 961,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "145:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 963,
										"name": "ERC20",
										"nameLocations": [
											"236:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "236:5:6"
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "236:5:6"
								},
								{
									"baseName": {
										"id": 965,
										"name": "IERC4626",
										"nameLocations": [
											"243:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 169,
										"src": "243:8:6"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "243:8:6"
								}
							],
							"canonicalName": "ERC4626",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								169,
								821,
								211,
								925,
								899,
								955
							],
							"name": "ERC4626",
							"nameLocation": "225:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 969,
									"mutability": "immutable",
									"name": "_asset",
									"nameLocation": "282:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "258:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$821",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 968,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 967,
											"name": "ERC20",
											"nameLocations": [
												"258:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 821,
											"src": "258:5:6"
										},
										"referencedDeclaration": 821,
										"src": "258:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$821",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "417:32:6",
										"statements": [
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "427:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$821",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 984,
														"name": "asset_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "436:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$821",
															"typeString": "contract ERC20"
														}
													},
													"src": "427:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$821",
														"typeString": "contract ERC20"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "427:15:6"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 979,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "401:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 980,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "408:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 981,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 978,
												"name": "ERC20",
												"nameLocations": [
													"395:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 821,
												"src": "395:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "395:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "asset_",
												"nameLocation": "322:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$821",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 970,
														"name": "ERC20",
														"nameLocations": [
															"316:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 821,
														"src": "316:5:6"
													},
													"referencedDeclaration": 821,
													"src": "316:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$821",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "338:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "381:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "367:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:88:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:0:6"
									},
									"scope": 1357,
									"src": "295:154:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "519:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "544:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														],
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "536:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 994,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "536:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "536:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 993,
												"id": 998,
												"nodeType": "Return",
												"src": "529:22:6"
											}
										]
									},
									"functionSelector": "38d52e0f",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "464:5:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 990,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "492:8:6"
									},
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "510:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:9:6"
									},
									"scope": 1357,
									"src": "455:103:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "700:351:6",
										"statements": [
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1010,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "775:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1012,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "799:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1011,
															"name": "previewDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "784:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "784:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "775:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "884:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "888:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "884:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1023,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "904:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "896:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1021,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "896:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "896:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "911:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1016,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "864:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "871:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 504,
														"src": "864:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "864:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "934:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "944:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1028,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "928:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "928:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1034,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1007:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1011:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1007:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1019:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1029:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "1037:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "999:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "999:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "EmitStatement",
												"src": "994:50:6"
											}
										]
									},
									"functionSelector": "6e553f65",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "573:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1006,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "654:8:6"
									},
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "589:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "581:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "605:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "597:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:34:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "688:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "680:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:16:6"
									},
									"scope": 1357,
									"src": "564:487:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										112
									],
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1190:352:6",
										"statements": [
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1270:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1054,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "1291:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1053,
															"name": "previewMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "1279:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1279:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1270:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1270:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1375:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1379:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1375:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1065,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1387:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1387:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1387:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1402:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1058,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1355:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1362:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 504,
														"src": "1355:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1355:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1425:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1435:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1419:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "1419:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1076,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1498:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1502:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1498:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1510:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1520:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1080,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1490:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "1485:50:6"
											}
										]
									},
									"functionSelector": "94bf804d",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1066:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1048,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1144:8:6"
									},
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1079:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1071:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1095:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1087:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:34:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1178:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1170:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:16:6"
									},
									"scope": 1357,
									"src": "1057:485:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										140
									],
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "1685:507:6",
										"statements": [
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1095,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "1761:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1097,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1786:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1096,
															"name": "previewWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "1770:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1770:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1761:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1761:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1101,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1874:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1878:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1874:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1103,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "1888:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1874:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "1870:92:6",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "1895:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1106,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "1925:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1107,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1932:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1936:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1932:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1109,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "1944:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1105,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "1909:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1909:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1111,
															"nodeType": "ExpressionStatement",
															"src": "1909:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2026:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2033:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2020:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2020:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1122,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2066:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2076:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1119,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2050:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2057:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "2050:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "2050:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1127,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2141:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2145:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2153:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2163:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2170:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1132,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "2178:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2132:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2132:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "2127:58:6"
											}
										]
									},
									"functionSelector": "b460af94",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1557:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1583:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1575:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1607:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1599:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1625:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:79:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1677:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1669:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:16:6"
									},
									"scope": 1357,
									"src": "1548:644:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										168
									],
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "2333:510:6",
										"statements": [
											{
												"expression": {
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "2413:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1149,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "2436:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1148,
															"name": "previewRedeem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "2422:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2422:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2413:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "2413:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1153,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2524:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2528:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2524:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1155,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "2538:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2524:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "2520:92:6",
												"trueBody": {
													"id": 1164,
													"nodeType": "Block",
													"src": "2545:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1158,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "2575:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1159,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2582:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2586:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2582:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1161,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1138,
																		"src": "2594:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1157,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "2559:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2559:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1163,
															"nodeType": "ExpressionStatement",
															"src": "2559:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "2676:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2670:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "2670:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1174,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "2716:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "2726:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1171,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2700:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "2700:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2700:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "2700:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1179,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2792:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2796:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2792:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "2804:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "2814:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "2821:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1184,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2783:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "EmitStatement",
												"src": "2778:58:6"
											}
										]
									},
									"functionSelector": "ba087652",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "2207:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2231:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2223:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2255:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2247:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2281:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2273:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:79:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2325:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2317:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:16:6"
									},
									"scope": 1357,
									"src": "2198:645:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "2910:100:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1197,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2997:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1357",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2989:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1195,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2989:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2989:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1193,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2972:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2979:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "2972:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2972:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1192,
												"id": 1200,
												"nodeType": "Return",
												"src": "2965:38:6"
											}
										]
									},
									"functionSelector": "01e1d114",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "2858:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:6"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "2901:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:6"
									},
									"scope": 1357,
									"src": "2849:161:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										52
									],
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3131:239:6",
										"statements": [
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3149:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3141:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3141:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1211,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "3158:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3158:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3141:30:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1214,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3307:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3317:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3307:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1218,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "3331:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1219,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "3340:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3331:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1221,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3330:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1222,
																"name": "totalAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "3350:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3350:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3330:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3307:56:6",
													"trueExpression": {
														"id": 1217,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "3321:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1226,
												"nodeType": "Return",
												"src": "3300:63:6"
											}
										]
									},
									"functionSelector": "c6e6f592",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "3025:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:16:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3118:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3117:9:6"
									},
									"scope": 1357,
									"src": "3016:354:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "3491:233:6",
										"statements": [
											{
												"assignments": [
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3509:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "3501:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3501:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1237,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "3518:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:30:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1240,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3661:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3671:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3661:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1244,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "3685:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1245,
																			"name": "totalAssets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1202,
																			"src": "3694:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3694:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3685:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1248,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3684:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1249,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "3711:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3684:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3661:56:6",
													"trueExpression": {
														"id": 1243,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3675:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1252,
												"nodeType": "Return",
												"src": "3654:63:6"
											}
										]
									},
									"functionSelector": "07a2d13a",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "3385:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3409:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3401:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:16:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:9:6"
									},
									"scope": 1357,
									"src": "3376:348:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "3844:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "3877:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1261,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3861:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1264,
												"nodeType": "Return",
												"src": "3854:30:6"
											}
										]
									},
									"functionSelector": "ef8b30f7",
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "3739:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3762:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3754:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3753:16:6"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3831:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:9:6"
									},
									"scope": 1357,
									"src": "3730:161:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3972:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "4005:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3989:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3989:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1276,
												"nodeType": "Return",
												"src": "3982:30:6"
											}
										]
									},
									"functionSelector": "b3d7f6b9",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "3906:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "3926:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3918:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3917:16:6"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3963:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3962:9:6"
									},
									"scope": 1357,
									"src": "3897:122:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										128
									],
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "4140:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4173:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1285,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "4157:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4157:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "4150:30:6"
											}
										]
									},
									"functionSelector": "0a28a477",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "4034:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4058:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4050:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4049:16:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "4127:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4126:9:6"
									},
									"scope": 1357,
									"src": "4025:162:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										156
									],
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "4306:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "4339:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1297,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4323:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4323:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1300,
												"nodeType": "Return",
												"src": "4316:30:6"
											}
										]
									},
									"functionSelector": "4cdad506",
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "4202:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4216:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:16:6"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4293:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4292:9:6"
									},
									"scope": 1357,
									"src": "4193:160:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "4426:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4448:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1310,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:6",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1309,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "4443:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4443:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "4457:3:6",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "4443:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1314,
												"nodeType": "Return",
												"src": "4436:24:6"
											}
										]
									},
									"functionSelector": "402d267d",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "4368:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "4379:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:9:6"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "4417:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:9:6"
									},
									"scope": 1357,
									"src": "4359:108:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "4537:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4559:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4559:7:6",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1323,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "4554:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4554:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "4568:3:6",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "4554:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1322,
												"id": 1328,
												"nodeType": "Return",
												"src": "4547:24:6"
											}
										]
									},
									"functionSelector": "c63d75b6",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "4482:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4490:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:9:6"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "4528:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4527:9:6"
									},
									"scope": 1357,
									"src": "4473:105:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										120
									],
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "4658:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1339,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "4701:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1338,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "4691:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4691:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1337,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4675:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1342,
												"nodeType": "Return",
												"src": "4668:40:6"
											}
										]
									},
									"functionSelector": "ce96cb77",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "4593:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4613:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4605:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4604:15:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4649:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4648:9:6"
									},
									"scope": 1357,
									"src": "4584:131:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "4793:40:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4820:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1351,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "4810:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4810:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1354,
												"nodeType": "Return",
												"src": "4803:23:6"
											}
										]
									},
									"functionSelector": "d905777e",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "4730:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4748:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "4740:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:15:6"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "4784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4783:9:6"
									},
									"scope": 1357,
									"src": "4721:112:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1358,
							"src": "216:4619:6",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": [
								20,
								32,
								833,
								842
							]
						}
					],
					"src": "32:4804:6"
				},
				"id": 6
			}
		}
	}
}